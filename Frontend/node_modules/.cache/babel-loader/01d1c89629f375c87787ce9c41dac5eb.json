{"ast":null,"code":"import raf from 'raf';\nvar id = 0;\nvar ids = {}; // Support call raf with delay specified frame\n\nexport default function wrapperRaf(callback) {\n  var delayFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var myId = id++;\n  var restFrames = delayFrames;\n\n  function internalCallback() {\n    restFrames -= 1;\n\n    if (restFrames <= 0) {\n      callback();\n      delete ids[myId];\n    } else {\n      ids[myId] = raf(internalCallback);\n    }\n  }\n\n  ids[myId] = raf(internalCallback);\n  return myId;\n}\n\nwrapperRaf.cancel = function cancel(pid) {\n  if (pid === undefined) return;\n  raf.cancel(ids[pid]);\n  delete ids[pid];\n};\n\nwrapperRaf.ids = ids; // export this for test usage","map":{"version":3,"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,IAAIC,EAAE,GAAG,CAAT;AACA,IAAMC,GAAG,GAAG,EAAZ,C,CACA;;AACA,eAAe,SAASC,UAAT,CAAoBC,QAApB,EAA+C;AAAA,MAAjBC,WAAiB,uEAAH,CAAG;AAC1D,MAAMC,IAAI,GAAGL,EAAE,EAAf;AACA,MAAIM,UAAU,GAAGF,WAAjB;;AACA,WAASG,gBAAT,GAA4B;AACxBD,cAAU,IAAI,CAAdA;;AACA,QAAIA,UAAU,IAAI,CAAlB,EAAqB;AACjBH,cAAQ;AACR,aAAOF,GAAG,CAACI,IAAD,CAAV;AAFJ,WAIK;AACDJ,SAAG,CAACI,IAAD,CAAHJ,GAAYF,GAAG,CAACQ,gBAAD,CAAfN;AACH;AACJ;;AACDA,KAAG,CAACI,IAAD,CAAHJ,GAAYF,GAAG,CAACQ,gBAAD,CAAfN;AACA,SAAOI,IAAP;AACH;;AACDH,UAAU,CAACM,MAAXN,GAAoB,SAASM,MAAT,CAAgBC,GAAhB,EAAqB;AACrC,MAAIA,GAAG,KAAKC,SAAZ,EACI;AACJX,KAAG,CAACS,MAAJT,CAAWE,GAAG,CAACQ,GAAD,CAAdV;AACA,SAAOE,GAAG,CAACQ,GAAD,CAAV;AAJJ;;AAMAP,UAAU,CAACD,GAAXC,GAAiBD,GAAjBC,C,CAAsB","names":["raf","id","ids","wrapperRaf","callback","delayFrames","myId","restFrames","internalCallback","cancel","pid","undefined"],"sources":["_util/raf.js"],"sourcesContent":["import raf from 'raf';\nlet id = 0;\nconst ids = {};\n// Support call raf with delay specified frame\nexport default function wrapperRaf(callback, delayFrames = 1) {\n    const myId = id++;\n    let restFrames = delayFrames;\n    function internalCallback() {\n        restFrames -= 1;\n        if (restFrames <= 0) {\n            callback();\n            delete ids[myId];\n        }\n        else {\n            ids[myId] = raf(internalCallback);\n        }\n    }\n    ids[myId] = raf(internalCallback);\n    return myId;\n}\nwrapperRaf.cancel = function cancel(pid) {\n    if (pid === undefined)\n        return;\n    raf.cancel(ids[pid]);\n    delete ids[pid];\n};\nwrapperRaf.ids = ids; // export this for test usage\n"]},"metadata":{},"sourceType":"module"}