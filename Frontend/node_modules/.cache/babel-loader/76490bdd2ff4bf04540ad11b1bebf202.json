{"ast":null,"code":"import * as React from 'react';\nimport Empty from '../empty';\nimport { ConfigConsumer } from '.';\n\nvar renderEmpty = function renderEmpty(componentName) {\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefix = getPrefixCls('empty');\n\n    switch (componentName) {\n      case 'Table':\n      case 'List':\n        return React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE\n        });\n\n      case 'Select':\n      case 'TreeSelect':\n      case 'Cascader':\n      case 'Transfer':\n      case 'Mentions':\n        return React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          className: \"\".concat(prefix, \"-small\")\n        });\n\n      default:\n        return React.createElement(Empty, null);\n    }\n  });\n};\n\nexport default renderEmpty;","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,cAAT,QAA+B,GAA/B;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,aAAD;AAAA,SAAoBJ,oBAACE,cAAD,QACnC,gBAAsB;AAAA,QAAnBG,YAAmB,QAAnBA,YAAmB;AACvB,QAAMC,MAAM,GAAGD,YAAY,CAAC,OAAD,CAA3B;;AACA,YAAQD,aAAR;AACI,WAAK,OAAL;AACA,WAAK,MAAL;AACI,eAAOJ,oBAACC,KAAD;AAAOM,eAAK,EAAEN,KAAK,CAACO;AAApB,UAAP;;AACJ,WAAK,QAAL;AACA,WAAK,YAAL;AACA,WAAK,UAAL;AACA,WAAK,UAAL;AACA,WAAK,UAAL;AACI,eAAOR,oBAACC,KAAD;AAAOM,eAAK,EAAEN,KAAK,CAACO,sBAApB;AAA4CC,mBAAS,YAAKH,MAAL;AAArD,UAAP;;AACJ;AACI,eAAON,oBAACC,KAAD,OAAP;AAXR;AAHoC,IAApB;AAApB;;AAkBA,eAAeE,WAAf","names":["React","Empty","ConfigConsumer","renderEmpty","componentName","getPrefixCls","prefix","image","PRESENTED_IMAGE_SIMPLE","className"],"sources":["config-provider/renderEmpty.jsx"],"sourcesContent":["import * as React from 'react';\nimport Empty from '../empty';\nimport { ConfigConsumer } from '.';\nconst renderEmpty = (componentName) => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const prefix = getPrefixCls('empty');\n    switch (componentName) {\n        case 'Table':\n        case 'List':\n            return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>;\n        case 'Select':\n        case 'TreeSelect':\n        case 'Cascader':\n        case 'Transfer':\n        case 'Mentions':\n            return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} className={`${prefix}-small`}/>;\n        default:\n            return <Empty />;\n    }\n}}\n  </ConfigConsumer>);\nexport default renderEmpty;\n"]},"metadata":{},"sourceType":"module"}