{"ast":null,"code":"import warning from '../_util/warning'; // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': true,\n  focusable: 'false'\n};\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\nexport function removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    warning(false, 'Icon', \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\nexport function alias(type) {\n  var newType = type;\n\n  switch (type) {\n    case 'cross':\n      newType = 'close';\n      break;\n    // https://github.com/ant-design/ant-design/issues/13007\n\n    case 'interation':\n      newType = 'interaction';\n      break;\n    // https://github.com/ant-design/ant-design/issues/16810\n\n    case 'canlendar':\n      newType = 'calendar';\n      break;\n    // https://github.com/ant-design/ant-design/issues/17448\n\n    case 'colum-height':\n      newType = 'column-height';\n      break;\n\n    default:\n  }\n\n  warning(newType === type, 'Icon', \"Icon '\".concat(type, \"' was a typo and is now deprecated, please use '\").concat(newType, \"' instead.\"));\n  return newType;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB,C,CACA;AACA;;AACA,OAAO,IAAMC,YAAY,GAAG;AACxBC,OAAK,EAAE,KADiB;AAExBC,QAAM,EAAE,KAFgB;AAGxBC,MAAI,EAAE,cAHkB;AAIxB,iBAAe,IAJS;AAKxBC,WAAS,EAAE;AALa,CAArB;AAOP,IAAMC,UAAU,GAAG,QAAnB;AACA,IAAMC,aAAa,GAAG,KAAtB;AACA,IAAMC,aAAa,GAAG,WAAtB;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACvC,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIL,UAAU,CAACM,IAAXN,CAAgBI,IAAhBJ,CAAJ,EAA2B;AACvBK,UAAM,GAAG,QAATA;AADJ,SAGK,IAAIJ,aAAa,CAACK,IAAdL,CAAmBG,IAAnBH,CAAJ,EAA8B;AAC/BI,UAAM,GAAG,UAATA;AADC,SAGA,IAAIH,aAAa,CAACI,IAAdJ,CAAmBE,IAAnBF,CAAJ,EAA8B;AAC/BG,UAAM,GAAG,SAATA;AACH;;AACD,SAAOA,MAAP;AACH;AACD,OAAO,SAASE,eAAT,CAAyBH,IAAzB,EAA+B;AAClC,SAAOA,IAAI,CACNI,OADEJ,CACMJ,UADNI,EACkB,EADlBA,EAEFI,OAFEJ,CAEMH,aAFNG,EAEqB,EAFrBA,EAGFI,OAHEJ,CAGMF,aAHNE,EAGqB,EAHrBA,CAAP;AAIH;AACD,OAAO,SAASK,eAAT,CAAyBL,IAAzB,EAA+BM,KAA/B,EAAsC;AACzC,MAAIL,MAAM,GAAGD,IAAb;;AACA,MAAIM,KAAK,KAAK,QAAd,EAAwB;AACpBL,UAAM,IAAI,OAAVA;AADJ,SAGK,IAAIK,KAAK,KAAK,UAAd,EAA0B;AAC3BL,UAAM,IAAI,IAAVA;AADC,SAGA,IAAIK,KAAK,KAAK,SAAd,EAAyB;AAC1BL,UAAM,IAAI,UAAVA;AADC,SAGA;AACDX,WAAO,CAAC,KAAD,EAAQ,MAAR,uBAA8BU,IAA9B,kCAA0DM,KAA1D,OAAPhB;AACH;;AACD,SAAOW,MAAP;EAEJ;;AACA,OAAO,SAASM,KAAT,CAAeP,IAAf,EAAqB;AACxB,MAAIQ,OAAO,GAAGR,IAAd;;AACA,UAAQA,IAAR;AACI,SAAK,OAAL;AACIQ,aAAO,GAAG,OAAVA;AACA;AACJ;;AACA,SAAK,YAAL;AACIA,aAAO,GAAG,aAAVA;AACA;AACJ;;AACA,SAAK,WAAL;AACIA,aAAO,GAAG,UAAVA;AACA;AACJ;;AACA,SAAK,cAAL;AACIA,aAAO,GAAG,eAAVA;AACA;;AACJ;AAhBJ;;AAkBAlB,SAAO,CAACkB,OAAO,KAAKR,IAAb,EAAmB,MAAnB,kBAAoCA,IAApC,6DAA2FQ,OAA3F,gBAAPlB;AACA,SAAOkB,OAAP;AACH","names":["warning","svgBaseProps","width","height","fill","focusable","fillTester","outlineTester","twoToneTester","getThemeFromTypeName","type","result","test","removeTypeTheme","replace","withThemeSuffix","theme","alias","newType"],"sources":["icon/utils.js"],"sourcesContent":["import warning from '../_util/warning';\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nexport const svgBaseProps = {\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': true,\n    focusable: 'false',\n};\nconst fillTester = /-fill$/;\nconst outlineTester = /-o$/;\nconst twoToneTester = /-twotone$/;\nexport function getThemeFromTypeName(type) {\n    let result = null;\n    if (fillTester.test(type)) {\n        result = 'filled';\n    }\n    else if (outlineTester.test(type)) {\n        result = 'outlined';\n    }\n    else if (twoToneTester.test(type)) {\n        result = 'twoTone';\n    }\n    return result;\n}\nexport function removeTypeTheme(type) {\n    return type\n        .replace(fillTester, '')\n        .replace(outlineTester, '')\n        .replace(twoToneTester, '');\n}\nexport function withThemeSuffix(type, theme) {\n    let result = type;\n    if (theme === 'filled') {\n        result += '-fill';\n    }\n    else if (theme === 'outlined') {\n        result += '-o';\n    }\n    else if (theme === 'twoTone') {\n        result += '-twotone';\n    }\n    else {\n        warning(false, 'Icon', `This icon '${type}' has unknown theme '${theme}'`);\n    }\n    return result;\n}\n// For alias or compatibility\nexport function alias(type) {\n    let newType = type;\n    switch (type) {\n        case 'cross':\n            newType = 'close';\n            break;\n        // https://github.com/ant-design/ant-design/issues/13007\n        case 'interation':\n            newType = 'interaction';\n            break;\n        // https://github.com/ant-design/ant-design/issues/16810\n        case 'canlendar':\n            newType = 'calendar';\n            break;\n        // https://github.com/ant-design/ant-design/issues/17448\n        case 'colum-height':\n            newType = 'column-height';\n            break;\n        default:\n    }\n    warning(newType === type, 'Icon', `Icon '${type}' was a typo and is now deprecated, please use '${newType}' instead.`);\n    return newType;\n}\n"]},"metadata":{},"sourceType":"module"}