{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport TextArea from '../input/TextArea';\n\nvar Editable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Editable, _React$Component);\n\n  function Editable() {\n    var _this;\n\n    _classCallCheck(this, Editable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Editable).apply(this, arguments));\n    _this.inComposition = false;\n    _this.state = {\n      current: ''\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        current: value.replace(/[\\r\\n]/g, '')\n      });\n    };\n\n    _this.onCompositionStart = function () {\n      _this.inComposition = true;\n    };\n\n    _this.onCompositionEnd = function () {\n      _this.inComposition = false;\n    };\n\n    _this.onKeyDown = function (_ref2) {\n      var keyCode = _ref2.keyCode; // We don't record keyCode when IME is using\n\n      if (_this.inComposition) return;\n      _this.lastKeyCode = keyCode;\n    };\n\n    _this.onKeyUp = function (_ref3) {\n      var keyCode = _ref3.keyCode,\n          ctrlKey = _ref3.ctrlKey,\n          altKey = _ref3.altKey,\n          metaKey = _ref3.metaKey,\n          shiftKey = _ref3.shiftKey;\n      var onCancel = _this.props.onCancel; // Check if it's a real key\n\n      if (_this.lastKeyCode === keyCode && !_this.inComposition && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n        if (keyCode === KeyCode.ENTER) {\n          _this.confirmChange();\n        } else if (keyCode === KeyCode.ESC) {\n          onCancel();\n        }\n      }\n    };\n\n    _this.onBlur = function () {\n      _this.confirmChange();\n    };\n\n    _this.confirmChange = function () {\n      var current = _this.state.current;\n      var onSave = _this.props.onSave;\n      onSave(current.trim());\n    };\n\n    _this.setTextarea = function (textarea) {\n      _this.textarea = textarea;\n    };\n\n    return _this;\n  }\n\n  _createClass(Editable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.textarea) {\n        this.textarea.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var current = this.state.current;\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          ariaLabel = _this$props['aria-label'],\n          className = _this$props.className,\n          style = _this$props.style;\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \" \").concat(prefixCls, \"-edit-content \").concat(className),\n        style: style\n      }, React.createElement(TextArea, {\n        ref: this.setTextarea,\n        value: current,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onKeyUp: this.onKeyUp,\n        onCompositionStart: this.onCompositionStart,\n        onCompositionEnd: this.onCompositionEnd,\n        onBlur: this.onBlur,\n        \"aria-label\": ariaLabel,\n        autoSize: true\n      }), React.createElement(Icon, {\n        type: \"enter\",\n        className: \"\".concat(prefixCls, \"-edit-content-confirm\")\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevValue = prevState.prevValue;\n      var value = nextProps.value;\n      var newState = {\n        prevValue: value\n      };\n\n      if (prevValue !== value) {\n        newState.current = value;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Editable;\n}(React.Component);\n\npolyfill(Editable);\nexport default Editable;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;IACMC,Q;;;AACF,sBAAc;AAAA;;AAAAC;;AACVC,mFAASC,SAAT;AACAD,UAAKE,aAAL,GAAqB,KAArB;AACAF,UAAKG,KAAL,GAAa;AACTC,aAAO,EAAE;AADA,KAAb;;AAGAJ,UAAKK,QAAL,GAAgB,gBAA2B;AAAA,UAAdC,KAAc,QAAxBC,MAAwB,CAAdD,KAAc;;AACvCN,YAAKQ,QAAL,CAAc;AAAEJ,eAAO,EAAEE,KAAK,CAACG,OAANH,CAAc,SAAdA,EAAyB,EAAzBA;AAAX,OAAd;AADJ;;AAGAN,UAAKU,kBAAL,GAA0B,YAAM;AAC5BV,YAAKE,aAAL,GAAqB,IAArB;AADJ;;AAGAF,UAAKW,gBAAL,GAAwB,YAAM;AAC1BX,YAAKE,aAAL,GAAqB,KAArB;AADJ;;AAGAF,UAAKY,SAAL,GAAiB,iBAAiB;AAAA,UAAdC,OAAc,SAAdA,OAAc,EAC9B;;AACA,UAAIb,MAAKE,aAAT,EACI;AACJF,YAAKc,WAAL,GAAmBD,OAAnB;AAJJ;;AAMAb,UAAKe,OAAL,GAAe,iBAAsD;AAAA,UAAnDF,OAAmD,SAAnDA,OAAmD;AAAA,UAA1CG,OAA0C,SAA1CA,OAA0C;AAAA,UAAjCC,MAAiC,SAAjCA,MAAiC;AAAA,UAAzBC,OAAyB,SAAzBA,OAAyB;AAAA,UAAhBC,QAAgB,SAAhBA,QAAgB;AAAA,UACzDC,QADyD,GAC5CpB,MAAKqB,KAAL,CAAbD,QADyD,EAEjE;;AACA,UAAIpB,MAAKc,WAAL,KAAqBD,OAArB,IACA,CAACb,MAAKE,aADN,IAEA,CAACc,OAFD,IAGA,CAACC,MAHD,IAIA,CAACC,OAJD,IAKA,CAACC,QALL,EAKe;AACX,YAAIN,OAAO,KAAKnB,OAAO,CAAC4B,KAAxB,EAA+B;AAC3BtB,gBAAKuB,aAAL;AADJ,eAGK,IAAIV,OAAO,KAAKnB,OAAO,CAAC8B,GAAxB,EAA6B;AAC9BJ,kBAAQ;AACX;AACJ;AAfL;;AAiBApB,UAAKyB,MAAL,GAAc,YAAM;AAChBzB,YAAKuB,aAAL;AADJ;;AAGAvB,UAAKuB,aAAL,GAAqB,YAAM;AAAA,UACfnB,OADe,GACHJ,MAAKG,KAAL,CAAZC,OADe;AAAA,UAEfsB,MAFe,GAEJ1B,MAAKqB,KAAL,CAAXK,MAFe;AAGvBA,YAAM,CAACtB,OAAO,CAACuB,IAARvB,EAAD,CAANsB;AAHJ;;AAKA1B,UAAK4B,WAAL,GAAmB,UAACC,QAAD,EAAc;AAC7B7B,YAAK6B,QAAL,GAAgBA,QAAhB;AADJ;;AA9CU;AAiDb;;;;wCAYmB;AAChB,UAAI,KAAKA,QAAT,EAAmB;AACf,aAAKA,QAAL,CAAcC,KAAd;AACH;AACJ;;;6BACQ;AAAA,UACG1B,OADH,GACe,KAAKD,KAAL,CAAZC,OADH;AAAA,wBAE4D,KAAKiB,KAFjE;AAAA,UAEGU,SAFH,eAEGA,SAFH;AAAA,UAE4BC,SAF5B,eAEc,YAFd;AAAA,UAEuCC,SAFvC,eAEuCA,SAFvC;AAAA,UAEkDC,KAFlD,eAEkDA,KAFlD;AAGL,aAAQzC;AAAKwC,iBAAS,YAAKF,SAAL,cAAkBA,SAAlB,2BAA4CE,SAA5C,CAAd;AAAuEC,aAAK,EAAEA;AAA9E,SACRzC,oBAACI,QAAD;AAAUsC,WAAG,EAAE,KAAKP,WAApB;AAAiCtB,aAAK,EAAEF,OAAxC;AAAiDC,gBAAQ,EAAE,KAAKA,QAAhE;AAA0EO,iBAAS,EAAE,KAAKA,SAA1F;AAAqGG,eAAO,EAAE,KAAKA,OAAnH;AAA4HL,0BAAkB,EAAE,KAAKA,kBAArJ;AAAyKC,wBAAgB,EAAE,KAAKA,gBAAhM;AAAkNc,cAAM,EAAE,KAAKA,MAA/N;AAAuO,sBAAYO,SAAnP;AAA8PI,gBAAQ;AAAtQ,QADQ,EAER3C,oBAACG,IAAD;AAAMyC,YAAI,EAAC,OAAX;AAAmBJ,iBAAS,YAAKF,SAAL;AAA5B,QAFQ,CAAR;AAIH;;;6CAvB+BO,WAAWC,WAAW;AAAA,UAC1CC,SAD0C,GAC5BD,SAD4B,CAC1CC,SAD0C;AAAA,UAE1ClC,KAF0C,GAEhCgC,SAFgC,CAE1ChC,KAF0C;AAGlD,UAAMmC,QAAQ,GAAG;AACbD,iBAAS,EAAElC;AADE,OAAjB;;AAGA,UAAIkC,SAAS,KAAKlC,KAAlB,EAAyB;AACrBmC,gBAAQ,CAACrC,OAATqC,GAAmBnC,KAAnBmC;AACH;;AACD,aAAOA,QAAP;AACH;;;;EA7DkBhD,KAAK,CAACiD;;AA4E7B/C,QAAQ,CAACG,QAAD,CAARH;AACA,eAAeG,QAAf","names":["React","KeyCode","polyfill","Icon","TextArea","Editable","_classCallCheck","_this","arguments","inComposition","state","current","onChange","value","target","setState","replace","onCompositionStart","onCompositionEnd","onKeyDown","keyCode","lastKeyCode","onKeyUp","ctrlKey","altKey","metaKey","shiftKey","onCancel","props","ENTER","confirmChange","ESC","onBlur","onSave","trim","setTextarea","textarea","focus","prefixCls","ariaLabel","className","style","ref","autoSize","type","nextProps","prevState","prevValue","newState","Component"],"sources":["typography/Editable.jsx"],"sourcesContent":["import * as React from 'react';\nimport KeyCode from 'rc-util/lib/KeyCode';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport TextArea from '../input/TextArea';\nclass Editable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.inComposition = false;\n        this.state = {\n            current: '',\n        };\n        this.onChange = ({ target: { value } }) => {\n            this.setState({ current: value.replace(/[\\r\\n]/g, '') });\n        };\n        this.onCompositionStart = () => {\n            this.inComposition = true;\n        };\n        this.onCompositionEnd = () => {\n            this.inComposition = false;\n        };\n        this.onKeyDown = ({ keyCode }) => {\n            // We don't record keyCode when IME is using\n            if (this.inComposition)\n                return;\n            this.lastKeyCode = keyCode;\n        };\n        this.onKeyUp = ({ keyCode, ctrlKey, altKey, metaKey, shiftKey, }) => {\n            const { onCancel } = this.props;\n            // Check if it's a real key\n            if (this.lastKeyCode === keyCode &&\n                !this.inComposition &&\n                !ctrlKey &&\n                !altKey &&\n                !metaKey &&\n                !shiftKey) {\n                if (keyCode === KeyCode.ENTER) {\n                    this.confirmChange();\n                }\n                else if (keyCode === KeyCode.ESC) {\n                    onCancel();\n                }\n            }\n        };\n        this.onBlur = () => {\n            this.confirmChange();\n        };\n        this.confirmChange = () => {\n            const { current } = this.state;\n            const { onSave } = this.props;\n            onSave(current.trim());\n        };\n        this.setTextarea = (textarea) => {\n            this.textarea = textarea;\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevValue } = prevState;\n        const { value } = nextProps;\n        const newState = {\n            prevValue: value,\n        };\n        if (prevValue !== value) {\n            newState.current = value;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        if (this.textarea) {\n            this.textarea.focus();\n        }\n    }\n    render() {\n        const { current } = this.state;\n        const { prefixCls, 'aria-label': ariaLabel, className, style } = this.props;\n        return (<div className={`${prefixCls} ${prefixCls}-edit-content ${className}`} style={style}>\n        <TextArea ref={this.setTextarea} value={current} onChange={this.onChange} onKeyDown={this.onKeyDown} onKeyUp={this.onKeyUp} onCompositionStart={this.onCompositionStart} onCompositionEnd={this.onCompositionEnd} onBlur={this.onBlur} aria-label={ariaLabel} autoSize/>\n        <Icon type=\"enter\" className={`${prefixCls}-edit-content-confirm`}/>\n      </div>);\n    }\n}\npolyfill(Editable);\nexport default Editable;\n"]},"metadata":{},"sourceType":"module"}