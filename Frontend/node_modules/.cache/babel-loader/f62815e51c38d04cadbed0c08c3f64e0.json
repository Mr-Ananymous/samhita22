{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcMention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Mention = /*#__PURE__*/function (_React$Component) {\n  _inherits(Mention, _React$Component);\n\n  function Mention(props) {\n    var _this;\n\n    _classCallCheck(this, Mention);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mention).call(this, props));\n\n    _this.mentionRef = function (ele) {\n      _this.mentionEle = ele;\n    };\n\n    _this.onSearchChange = function (value, prefix) {\n      if (_this.props.onSearchChange) {\n        return _this.props.onSearchChange(value, prefix);\n      }\n\n      return _this.defaultSearchChange(value);\n    };\n\n    _this.onChange = function (editorState) {\n      if (_this.props.onChange) {\n        _this.props.onChange(editorState);\n      }\n    };\n\n    _this.onFocus = function (ev) {\n      _this.setState({\n        focus: true\n      });\n\n      if (_this.props.onFocus) {\n        _this.props.onFocus(ev);\n      }\n    };\n\n    _this.onBlur = function (ev) {\n      _this.setState({\n        focus: false\n      });\n\n      if (_this.props.onBlur) {\n        _this.props.onBlur(ev);\n      }\n    };\n\n    _this.focus = function () {\n      _this.mentionEle._editor.focusEditor();\n    };\n\n    _this.renderMention = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          loading = _this$props.loading,\n          placement = _this$props.placement,\n          suggestions = _this$props.suggestions;\n      var _this$state = _this.state,\n          filteredSuggestions = _this$state.filteredSuggestions,\n          focus = _this$state.focus;\n      var prefixCls = getPrefixCls('mention', customizePrefixCls);\n      var cls = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), focus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-placement-top\"), placement === 'top'), _classNames));\n      var notFoundContent = loading ? React.createElement(Icon, {\n        type: \"loading\"\n      }) : _this.props.notFoundContent;\n      return React.createElement(RcMention, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        className: cls,\n        ref: _this.mentionRef,\n        onSearchChange: _this.onSearchChange,\n        onChange: _this.onChange,\n        onFocus: _this.onFocus,\n        onBlur: _this.onBlur,\n        suggestions: suggestions || filteredSuggestions,\n        notFoundContent: notFoundContent\n      }));\n    };\n\n    _this.state = {\n      filteredSuggestions: props.defaultSuggestions,\n      focus: false\n    };\n    warning(false, 'Mention', 'Mention component is deprecated. Please use Mentions component instead.');\n    return _this;\n  }\n\n  _createClass(Mention, [{\n    key: \"defaultSearchChange\",\n    value: function defaultSearchChange(value) {\n      var searchValue = value.toLowerCase();\n      var filteredSuggestions = (this.props.defaultSuggestions || []).filter(function (suggestion) {\n        if (typeof suggestion === 'string') {\n          return suggestion.toLowerCase().indexOf(searchValue) !== -1;\n        }\n\n        if (suggestion.type && suggestion.type === Nav) {\n          return suggestion.props.value ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1 : true;\n        }\n\n        return false;\n      });\n      this.setState({\n        filteredSuggestions: filteredSuggestions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderMention);\n    }\n  }]);\n\n  return Mention;\n}(React.Component);\n\nMention.getMentions = getMentions;\nMention.defaultProps = {\n  notFoundContent: 'No matches found',\n  loading: false,\n  multiLines: false,\n  placement: 'bottom'\n};\nMention.Nav = Nav;\nMention.toString = toString;\nMention.toContentState = toEditorState;\npolyfill(Mention);\nexport default Mention;","map":{"version":3,"mappings":"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","names":["React","RcMention","Nav","toString","toEditorState","getMentions","polyfill","classNames","Icon","warning","ConfigConsumer","Mention","props","_classCallCheck","_this","mentionRef","ele","mentionEle","onSearchChange","value","prefix","defaultSearchChange","onChange","editorState","onFocus","ev","setState","focus","onBlur","_editor","focusEditor","renderMention","getPrefixCls","customizePrefixCls","prefixCls","className","loading","placement","suggestions","state","filteredSuggestions","cls","notFoundContent","type","ref","defaultSuggestions","searchValue","toLowerCase","filter","suggestion","indexOf","Component","defaultProps","multiLines","toContentState"],"sources":["mention/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport RcMention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport warning from '../_util/warning';\nimport { ConfigConsumer } from '../config-provider';\nclass Mention extends React.Component {\n    constructor(props) {\n        super(props);\n        this.mentionRef = (ele) => {\n            this.mentionEle = ele;\n        };\n        this.onSearchChange = (value, prefix) => {\n            if (this.props.onSearchChange) {\n                return this.props.onSearchChange(value, prefix);\n            }\n            return this.defaultSearchChange(value);\n        };\n        this.onChange = (editorState) => {\n            if (this.props.onChange) {\n                this.props.onChange(editorState);\n            }\n        };\n        this.onFocus = (ev) => {\n            this.setState({\n                focus: true,\n            });\n            if (this.props.onFocus) {\n                this.props.onFocus(ev);\n            }\n        };\n        this.onBlur = (ev) => {\n            this.setState({\n                focus: false,\n            });\n            if (this.props.onBlur) {\n                this.props.onBlur(ev);\n            }\n        };\n        this.focus = () => {\n            this.mentionEle._editor.focusEditor();\n        };\n        this.renderMention = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className = '', loading, placement, suggestions, } = this.props;\n            const { filteredSuggestions, focus } = this.state;\n            const prefixCls = getPrefixCls('mention', customizePrefixCls);\n            const cls = classNames(className, {\n                [`${prefixCls}-active`]: focus,\n                [`${prefixCls}-placement-top`]: placement === 'top',\n            });\n            const notFoundContent = loading ? <Icon type=\"loading\"/> : this.props.notFoundContent;\n            return (<RcMention {...this.props} prefixCls={prefixCls} className={cls} ref={this.mentionRef} onSearchChange={this.onSearchChange} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} suggestions={suggestions || filteredSuggestions} notFoundContent={notFoundContent}/>);\n        };\n        this.state = {\n            filteredSuggestions: props.defaultSuggestions,\n            focus: false,\n        };\n        warning(false, 'Mention', 'Mention component is deprecated. Please use Mentions component instead.');\n    }\n    defaultSearchChange(value) {\n        const searchValue = value.toLowerCase();\n        const filteredSuggestions = (this.props.defaultSuggestions || []).filter(suggestion => {\n            if (typeof suggestion === 'string') {\n                return suggestion.toLowerCase().indexOf(searchValue) !== -1;\n            }\n            if (suggestion.type && suggestion.type === Nav) {\n                return suggestion.props.value\n                    ? suggestion.props.value.toLowerCase().indexOf(searchValue) !== -1\n                    : true;\n            }\n            return false;\n        });\n        this.setState({\n            filteredSuggestions,\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderMention}</ConfigConsumer>;\n    }\n}\nMention.getMentions = getMentions;\nMention.defaultProps = {\n    notFoundContent: 'No matches found',\n    loading: false,\n    multiLines: false,\n    placement: 'bottom',\n};\nMention.Nav = Nav;\nMention.toString = toString;\nMention.toContentState = toEditorState;\npolyfill(Mention);\nexport default Mention;\n"]},"metadata":{},"sourceType":"module"}