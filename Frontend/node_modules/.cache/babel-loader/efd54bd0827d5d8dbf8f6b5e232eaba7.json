{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\nvar defaultCloseIcon;\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer,\n      closeIcon = options.closeIcon;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n\n  if (closeIcon !== undefined) {\n    defaultCloseIcon = closeIcon;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(_ref, callback) {\n  var prefixCls = _ref.prefixCls,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? defaultPlacement : _ref$placement,\n      _ref$getContainer = _ref.getContainer,\n      getContainer = _ref$getContainer === void 0 ? defaultGetContainer : _ref$getContainer,\n      top = _ref.top,\n      bottom = _ref.bottom,\n      _ref$closeIcon = _ref.closeIcon,\n      closeIcon = _ref$closeIcon === void 0 ? defaultCloseIcon : _ref$closeIcon;\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n\n  if (notificationInstance[cacheKey]) {\n    callback(notificationInstance[cacheKey]);\n    return;\n  }\n\n  var closeIconToRender = React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-close-x\")\n  }, closeIcon || React.createElement(Icon, {\n    className: \"\".concat(prefixCls, \"-close-icon\"),\n    type: \"close\"\n  }));\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    className: \"\".concat(prefixCls, \"-\").concat(placement),\n    style: getPlacementStyle(placement, top, bottom),\n    getContainer: getContainer,\n    closeIcon: closeIconToRender\n  }, function (notification) {\n    notificationInstance[cacheKey] = notification;\n    callback(notification);\n  });\n}\n\nvar typeToIcon = {\n  success: 'check-circle-o',\n  info: 'info-circle-o',\n  error: 'close-circle-o',\n  warning: 'exclamation-circle-o'\n};\n\nfunction notice(args) {\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    var iconType = typeToIcon[args.type];\n    iconNode = React.createElement(Icon, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type),\n      type: iconType\n    });\n  }\n\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  var placement = args.placement,\n      top = args.top,\n      bottom = args.bottom,\n      getContainer = args.getContainer,\n      closeIcon = args.closeIcon;\n  getNotificationInstance({\n    prefixCls: outerPrefixCls,\n    placement: placement,\n    top: top,\n    bottom: bottom,\n    getContainer: getContainer,\n    closeIcon: closeIcon\n  }, function (notification) {\n    notification.notice({\n      content: React.createElement(\"div\", {\n        className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n      }, iconNode, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, autoMarginTag, args.message), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, args.description), args.btn ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-btn\")\n      }, args.btn) : null),\n      duration: duration,\n      closable: true,\n      onClose: args.onClose,\n      onClick: args.onClick,\n      key: args.key,\n      style: args.style || {},\n      className: args.className\n    });\n  });\n}\n\nvar api = {\n  open: notice,\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return notificationInstance[cacheKey].removeNotice(key);\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      notificationInstance[cacheKey].destroy();\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends(_extends({}, args), {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"mappings":"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","names":["React","Notification","Icon","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","defaultGetContainer","defaultCloseIcon","setNotificationConfig","options","duration","placement","bottom","top","getContainer","closeIcon","undefined","getPlacementStyle","style","left","right","getNotificationInstance","callback","prefixCls","cacheKey","closeIconToRender","className","type","newInstance","notification","typeToIcon","success","info","error","warning","notice","args","outerPrefixCls","iconNode","icon","iconType","autoMarginTag","description","content","message","btn","closable","onClose","onClick","key","api","open","close","Object","keys","forEach","removeNotice","config","destroy","_extends","warn"],"sources":["notification/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance({ prefixCls, placement = defaultPlacement, getContainer = defaultGetContainer, top, bottom, closeIcon = defaultCloseIcon, }, callback) {\n    const cacheKey = `${prefixCls}-${placement}`;\n    if (notificationInstance[cacheKey]) {\n        callback(notificationInstance[cacheKey]);\n        return;\n    }\n    const closeIconToRender = (<span className={`${prefixCls}-close-x`}>\n      {closeIcon || <Icon className={`${prefixCls}-close-icon`} type=\"close\"/>}\n    </span>);\n    Notification.newInstance({\n        prefixCls,\n        className: `${prefixCls}-${placement}`,\n        style: getPlacementStyle(placement, top, bottom),\n        getContainer,\n        closeIcon: closeIconToRender,\n    }, (notification) => {\n        notificationInstance[cacheKey] = notification;\n        callback(notification);\n    });\n}\nconst typeToIcon = {\n    success: 'check-circle-o',\n    info: 'info-circle-o',\n    error: 'close-circle-o',\n    warning: 'exclamation-circle-o',\n};\nfunction notice(args) {\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        const iconType = typeToIcon[args.type];\n        iconNode = (<Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType}/>);\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    const { placement, top, bottom, getContainer, closeIcon } = args;\n    getNotificationInstance({\n        prefixCls: outerPrefixCls,\n        placement,\n        top,\n        bottom,\n        getContainer,\n        closeIcon,\n    }, (notification) => {\n        notification.notice({\n            content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>),\n            duration,\n            closable: true,\n            onClose: args.onClose,\n            onClick: args.onClick,\n            key: args.key,\n            style: args.style || {},\n            className: args.className,\n        });\n    });\n}\nconst api = {\n    open: notice,\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            notificationInstance[cacheKey].destroy();\n            delete notificationInstance[cacheKey];\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"module"}