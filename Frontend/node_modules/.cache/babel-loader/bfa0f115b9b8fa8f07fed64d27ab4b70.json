{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Transfer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Transfer, _React$Component);\n\n  function Transfer(props) {\n    var _this;\n\n    _classCallCheck(this, Transfer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Transfer).call(this, props));\n    _this.separatedDataSource = null;\n\n    _this.getLocale = function (transferLocale, renderEmpty) {\n      // Keep old locale props still working.\n      var oldLocale = {\n        notFoundContent: renderEmpty('Transfer')\n      };\n\n      if ('notFoundContent' in _this.props) {\n        oldLocale.notFoundContent = _this.props.notFoundContent;\n      }\n\n      if ('searchPlaceholder' in _this.props) {\n        oldLocale.searchPlaceholder = _this.props.searchPlaceholder;\n      }\n\n      return _extends(_extends(_extends({}, transferLocale), oldLocale), _this.props.locale);\n    };\n\n    _this.moveTo = function (direction) {\n      var _this$props = _this.props,\n          _this$props$targetKey = _this$props.targetKeys,\n          targetKeys = _this$props$targetKey === void 0 ? [] : _this$props$targetKey,\n          _this$props$dataSourc = _this$props.dataSource,\n          dataSource = _this$props$dataSourc === void 0 ? [] : _this$props$dataSourc,\n          onChange = _this$props.onChange;\n      var _this$state = _this.state,\n          sourceSelectedKeys = _this$state.sourceSelectedKeys,\n          targetSelectedKeys = _this$state.targetSelectedKeys;\n      var moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys; // filter the disabled options\n\n      var newMoveKeys = moveKeys.filter(function (key) {\n        return !dataSource.some(function (data) {\n          return !!(key === data.key && data.disabled);\n        });\n      }); // move items to target box\n\n      var newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {\n        return newMoveKeys.indexOf(targetKey) === -1;\n      }); // empty checked keys\n\n      var oppositeDirection = direction === 'right' ? 'left' : 'right';\n\n      _this.setState(_defineProperty({}, _this.getSelectedKeysName(oppositeDirection), []));\n\n      _this.handleSelectChange(oppositeDirection, []);\n\n      if (onChange) {\n        onChange(newTargetKeys, direction, newMoveKeys);\n      }\n    };\n\n    _this.moveToLeft = function () {\n      return _this.moveTo('left');\n    };\n\n    _this.moveToRight = function () {\n      return _this.moveTo('right');\n    };\n\n    _this.onItemSelectAll = function (direction, selectedKeys, checkAll) {\n      var originalSelectedKeys = _this.state[_this.getSelectedKeysName(direction)] || [];\n      var mergedCheckedKeys = [];\n\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(originalSelectedKeys), _toConsumableArray(selectedKeys))));\n      } else {\n        // Remove current keys from origin keys\n        mergedCheckedKeys = originalSelectedKeys.filter(function (key) {\n          return selectedKeys.indexOf(key) === -1;\n        });\n      }\n\n      _this.handleSelectChange(direction, mergedCheckedKeys);\n\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), mergedCheckedKeys));\n      }\n    };\n\n    _this.handleSelectAll = function (direction, filteredDataSource, checkAll) {\n      warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n\n      _this.onItemSelectAll(direction, filteredDataSource.map(function (_ref) {\n        var key = _ref.key;\n        return key;\n      }), !checkAll);\n    }; // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n    // TODO: Remove this in next version.\n\n\n    _this.handleLeftSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('left', filteredDataSource, !checkAll);\n    };\n\n    _this.handleRightSelectAll = function (filteredDataSource, checkAll) {\n      return _this.handleSelectAll('right', filteredDataSource, !checkAll);\n    };\n\n    _this.onLeftItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('left', selectedKeys, checkAll);\n    };\n\n    _this.onRightItemSelectAll = function (selectedKeys, checkAll) {\n      return _this.onItemSelectAll('right', selectedKeys, checkAll);\n    };\n\n    _this.handleFilter = function (direction, e) {\n      var _this$props2 = _this.props,\n          onSearchChange = _this$props2.onSearchChange,\n          onSearch = _this$props2.onSearch;\n      var value = e.target.value;\n\n      if (onSearchChange) {\n        warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n        onSearchChange(direction, e);\n      }\n\n      if (onSearch) {\n        onSearch(direction, value);\n      }\n    };\n\n    _this.handleLeftFilter = function (e) {\n      return _this.handleFilter('left', e);\n    };\n\n    _this.handleRightFilter = function (e) {\n      return _this.handleFilter('right', e);\n    };\n\n    _this.handleClear = function (direction) {\n      var onSearch = _this.props.onSearch;\n\n      if (onSearch) {\n        onSearch(direction, '');\n      }\n    };\n\n    _this.handleLeftClear = function () {\n      return _this.handleClear('left');\n    };\n\n    _this.handleRightClear = function () {\n      return _this.handleClear('right');\n    };\n\n    _this.onItemSelect = function (direction, selectedKey, checked) {\n      var _this$state2 = _this.state,\n          sourceSelectedKeys = _this$state2.sourceSelectedKeys,\n          targetSelectedKeys = _this$state2.targetSelectedKeys;\n      var holder = direction === 'left' ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);\n      var index = holder.indexOf(selectedKey);\n\n      if (index > -1) {\n        holder.splice(index, 1);\n      }\n\n      if (checked) {\n        holder.push(selectedKey);\n      }\n\n      _this.handleSelectChange(direction, holder);\n\n      if (!_this.props.selectedKeys) {\n        _this.setState(_defineProperty({}, _this.getSelectedKeysName(direction), holder));\n      }\n    };\n\n    _this.handleSelect = function (direction, selectedItem, checked) {\n      warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n\n      _this.onItemSelect(direction, selectedItem.key, checked);\n    };\n\n    _this.handleLeftSelect = function (selectedItem, checked) {\n      return _this.handleSelect('left', selectedItem, checked);\n    };\n\n    _this.handleRightSelect = function (selectedItem, checked) {\n      return _this.handleSelect('right', selectedItem, checked);\n    };\n\n    _this.onLeftItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('left', selectedKey, checked);\n    };\n\n    _this.onRightItemSelect = function (selectedKey, checked) {\n      return _this.onItemSelect('right', selectedKey, checked);\n    };\n\n    _this.handleScroll = function (direction, e) {\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(direction, e);\n      }\n    };\n\n    _this.handleLeftScroll = function (e) {\n      return _this.handleScroll('left', e);\n    };\n\n    _this.handleRightScroll = function (e) {\n      return _this.handleScroll('right', e);\n    };\n\n    _this.handleListStyle = function (listStyle, direction) {\n      if (typeof listStyle === 'function') {\n        return listStyle({\n          direction: direction\n        });\n      }\n\n      return listStyle;\n    };\n\n    _this.renderTransfer = function (transferLocale) {\n      return React.createElement(ConfigConsumer, null, function (_ref2) {\n        var _classNames;\n\n        var getPrefixCls = _ref2.getPrefixCls,\n            renderEmpty = _ref2.renderEmpty;\n        var _this$props3 = _this.props,\n            customizePrefixCls = _this$props3.prefixCls,\n            className = _this$props3.className,\n            disabled = _this$props3.disabled,\n            _this$props3$operatio = _this$props3.operations,\n            operations = _this$props3$operatio === void 0 ? [] : _this$props3$operatio,\n            showSearch = _this$props3.showSearch,\n            body = _this$props3.body,\n            footer = _this$props3.footer,\n            style = _this$props3.style,\n            listStyle = _this$props3.listStyle,\n            operationStyle = _this$props3.operationStyle,\n            filterOption = _this$props3.filterOption,\n            render = _this$props3.render,\n            lazy = _this$props3.lazy,\n            children = _this$props3.children,\n            showSelectAll = _this$props3.showSelectAll;\n        var prefixCls = getPrefixCls('transfer', customizePrefixCls);\n\n        var locale = _this.getLocale(transferLocale, renderEmpty);\n\n        var _this$state3 = _this.state,\n            sourceSelectedKeys = _this$state3.sourceSelectedKeys,\n            targetSelectedKeys = _this$state3.targetSelectedKeys;\n\n        var _this$separateDataSou = _this.separateDataSource(),\n            leftDataSource = _this$separateDataSou.leftDataSource,\n            rightDataSource = _this$separateDataSou.rightDataSource;\n\n        var leftActive = targetSelectedKeys.length > 0;\n        var rightActive = sourceSelectedKeys.length > 0;\n        var cls = classNames(className, prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-customize-list\"), !!children), _classNames));\n\n        var titles = _this.getTitles(locale);\n\n        return React.createElement(\"div\", {\n          className: cls,\n          style: style\n        }, React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[0],\n          dataSource: leftDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'left'),\n          checkedKeys: sourceSelectedKeys,\n          handleFilter: _this.handleLeftFilter,\n          handleClear: _this.handleLeftClear,\n          handleSelect: _this.handleLeftSelect,\n          handleSelectAll: _this.handleLeftSelectAll,\n          onItemSelect: _this.onLeftItemSelect,\n          onItemSelectAll: _this.onLeftItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleLeftScroll,\n          disabled: disabled,\n          direction: \"left\",\n          showSelectAll: showSelectAll\n        }, locale)), React.createElement(Operation, {\n          className: \"\".concat(prefixCls, \"-operation\"),\n          rightActive: rightActive,\n          rightArrowText: operations[0],\n          moveToRight: _this.moveToRight,\n          leftActive: leftActive,\n          leftArrowText: operations[1],\n          moveToLeft: _this.moveToLeft,\n          style: operationStyle,\n          disabled: disabled\n        }), React.createElement(List, _extends({\n          prefixCls: \"\".concat(prefixCls, \"-list\"),\n          titleText: titles[1],\n          dataSource: rightDataSource,\n          filterOption: filterOption,\n          style: _this.handleListStyle(listStyle, 'right'),\n          checkedKeys: targetSelectedKeys,\n          handleFilter: _this.handleRightFilter,\n          handleClear: _this.handleRightClear,\n          handleSelect: _this.handleRightSelect,\n          handleSelectAll: _this.handleRightSelectAll,\n          onItemSelect: _this.onRightItemSelect,\n          onItemSelectAll: _this.onRightItemSelectAll,\n          render: render,\n          showSearch: showSearch,\n          body: body,\n          renderList: children,\n          footer: footer,\n          lazy: lazy,\n          onScroll: _this.handleRightScroll,\n          disabled: disabled,\n          direction: \"right\",\n          showSelectAll: showSelectAll\n        }, locale)));\n      });\n    };\n\n    warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' + 'please use `locale` instead.');\n    warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n    var _props$selectedKeys = props.selectedKeys,\n        selectedKeys = _props$selectedKeys === void 0 ? [] : _props$selectedKeys,\n        _props$targetKeys = props.targetKeys,\n        targetKeys = _props$targetKeys === void 0 ? [] : _props$targetKeys;\n    _this.state = {\n      sourceSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) === -1;\n      }),\n      targetSelectedKeys: selectedKeys.filter(function (key) {\n        return targetKeys.indexOf(key) > -1;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Transfer, [{\n    key: \"getSelectedKeysName\",\n    // eslint-disable-next-line\n    value: function getSelectedKeysName(direction) {\n      return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n  }, {\n    key: \"getTitles\",\n    value: function getTitles(transferLocale) {\n      var props = this.props;\n\n      if (props.titles) {\n        return props.titles;\n      }\n\n      return transferLocale.titles;\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(direction, holder) {\n      var _this$state4 = this.state,\n          sourceSelectedKeys = _this$state4.sourceSelectedKeys,\n          targetSelectedKeys = _this$state4.targetSelectedKeys;\n      var onSelectChange = this.props.onSelectChange;\n\n      if (!onSelectChange) {\n        return;\n      }\n\n      if (direction === 'left') {\n        onSelectChange(holder, targetSelectedKeys);\n      } else {\n        onSelectChange(sourceSelectedKeys, holder);\n      }\n    }\n  }, {\n    key: \"separateDataSource\",\n    value: function separateDataSource() {\n      var _this$props4 = this.props,\n          dataSource = _this$props4.dataSource,\n          rowKey = _this$props4.rowKey,\n          _this$props4$targetKe = _this$props4.targetKeys,\n          targetKeys = _this$props4$targetKe === void 0 ? [] : _this$props4$targetKe;\n      var leftDataSource = [];\n      var rightDataSource = new Array(targetKeys.length);\n      dataSource.forEach(function (record) {\n        if (rowKey) {\n          record.key = rowKey(record);\n        } // rightDataSource should be ordered by targetKeys\n        // leftDataSource should be ordered by dataSource\n\n\n        var indexOfKey = targetKeys.indexOf(record.key);\n\n        if (indexOfKey !== -1) {\n          rightDataSource[indexOfKey] = record;\n        } else {\n          leftDataSource.push(record);\n        }\n      });\n      return {\n        leftDataSource: leftDataSource,\n        rightDataSource: rightDataSource\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LocaleReceiver, {\n        componentName: \"Transfer\",\n        defaultLocale: defaultLocale.Transfer\n      }, this.renderTransfer);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.selectedKeys) {\n        var targetKeys = nextProps.targetKeys || [];\n        return {\n          sourceSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return !targetKeys.includes(key);\n          }),\n          targetSelectedKeys: nextProps.selectedKeys.filter(function (key) {\n            return targetKeys.includes(key);\n          })\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Transfer;\n}(React.Component); // For high-level customized Transfer @dqaria\n\n\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n  dataSource: [],\n  locale: {},\n  showSearch: false,\n  listStyle: function listStyle() {}\n};\nTransfer.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  dataSource: PropTypes.array,\n  render: PropTypes.func,\n  targetKeys: PropTypes.array,\n  onChange: PropTypes.func,\n  height: PropTypes.number,\n  style: PropTypes.object,\n  listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  operationStyle: PropTypes.object,\n  className: PropTypes.string,\n  titles: PropTypes.array,\n  operations: PropTypes.array,\n  showSearch: PropTypes.bool,\n  filterOption: PropTypes.func,\n  searchPlaceholder: PropTypes.string,\n  notFoundContent: PropTypes.node,\n  locale: PropTypes.object,\n  body: PropTypes.func,\n  footer: PropTypes.func,\n  rowKey: PropTypes.func,\n  lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n};\npolyfill(Transfer);\nexport default Transfer;","map":{"version":3,"mappings":"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","names":["React","PropTypes","classNames","polyfill","List","Operation","Search","warning","LocaleReceiver","defaultLocale","ConfigConsumer","Transfer","props","_classCallCheck","_this","separatedDataSource","getLocale","transferLocale","renderEmpty","oldLocale","notFoundContent","searchPlaceholder","_extends","locale","moveTo","direction","targetKeys","dataSource","onChange","state","sourceSelectedKeys","targetSelectedKeys","moveKeys","newMoveKeys","filter","key","some","data","disabled","newTargetKeys","concat","indexOf","targetKey","oppositeDirection","setState","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","onItemSelectAll","selectedKeys","checkAll","originalSelectedKeys","mergedCheckedKeys","Array","from","Set","handleSelectAll","filteredDataSource","map","handleLeftSelectAll","handleRightSelectAll","onLeftItemSelectAll","onRightItemSelectAll","handleFilter","e","onSearchChange","onSearch","value","target","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","holder","index","splice","push","handleSelect","selectedItem","handleLeftSelect","handleRightSelect","onLeftItemSelect","onRightItemSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","handleListStyle","listStyle","renderTransfer","getPrefixCls","customizePrefixCls","prefixCls","className","operations","showSearch","body","footer","style","operationStyle","filterOption","render","lazy","children","showSelectAll","separateDataSource","leftDataSource","rightDataSource","leftActive","length","rightActive","cls","titles","getTitles","titleText","checkedKeys","renderList","rightArrowText","leftArrowText","onSelectChange","rowKey","forEach","record","indexOfKey","componentName","nextProps","includes","Component","defaultProps","propTypes","string","bool","array","func","height","number","object","oneOfType","node"],"sources":["transfer/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.separatedDataSource = null;\n        this.getLocale = (transferLocale, renderEmpty) => {\n            // Keep old locale props still working.\n            const oldLocale = {\n                notFoundContent: renderEmpty('Transfer'),\n            };\n            if ('notFoundContent' in this.props) {\n                oldLocale.notFoundContent = this.props.notFoundContent;\n            }\n            if ('searchPlaceholder' in this.props) {\n                oldLocale.searchPlaceholder = this.props.searchPlaceholder;\n            }\n            return Object.assign(Object.assign(Object.assign({}, transferLocale), oldLocale), this.props.locale);\n        };\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter((key) => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            let mergedCheckedKeys = [];\n            if (checkAll) {\n                // Merge current keys with origin key\n                mergedCheckedKeys = Array.from(new Set([...originalSelectedKeys, ...selectedKeys]));\n            }\n            else {\n                // Remove current keys from origin keys\n                mergedCheckedKeys = originalSelectedKeys.filter((key) => selectedKeys.indexOf(key) === -1);\n            }\n            this.handleSelectChange(direction, mergedCheckedKeys);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: mergedCheckedKeys,\n                });\n            }\n        };\n        this.handleSelectAll = (direction, filteredDataSource, checkAll) => {\n            warning(false, 'Transfer', '`handleSelectAll` will be removed, please use `onSelectAll` instead.');\n            this.onItemSelectAll(direction, filteredDataSource.map(({ key }) => key), !checkAll);\n        };\n        // [Legacy] Old prop `body` pass origin check as arg. It's confusing.\n        // TODO: Remove this in next version.\n        this.handleLeftSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('left', filteredDataSource, !checkAll);\n        this.handleRightSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('right', filteredDataSource, !checkAll);\n        this.onLeftItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('left', selectedKeys, checkAll);\n        this.onRightItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('right', selectedKeys, checkAll);\n        this.handleFilter = (direction, e) => {\n            const { onSearchChange, onSearch } = this.props;\n            const { value } = e.target;\n            if (onSearchChange) {\n                warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n                onSearchChange(direction, e);\n            }\n            if (onSearch) {\n                onSearch(direction, value);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            const { onSearch } = this.props;\n            if (onSearch) {\n                onSearch(direction, '');\n            }\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.onItemSelect = (direction, selectedKey, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedKey);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedKey);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleSelect = (direction, selectedItem, checked) => {\n            warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');\n            this.onItemSelect(direction, selectedItem.key, checked);\n        };\n        this.handleLeftSelect = (selectedItem, checked) => this.handleSelect('left', selectedItem, checked);\n        this.handleRightSelect = (selectedItem, checked) => this.handleSelect('right', selectedItem, checked);\n        this.onLeftItemSelect = (selectedKey, checked) => this.onItemSelect('left', selectedKey, checked);\n        this.onRightItemSelect = (selectedKey, checked) => this.onItemSelect('right', selectedKey, checked);\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        this.handleListStyle = (listStyle, direction) => {\n            if (typeof listStyle === 'function') {\n                return listStyle({ direction });\n            }\n            return listStyle;\n        };\n        this.renderTransfer = (transferLocale) => (<ConfigConsumer>\n      {({ getPrefixCls, renderEmpty }) => {\n            const { prefixCls: customizePrefixCls, className, disabled, operations = [], showSearch, body, footer, style, listStyle, operationStyle, filterOption, render, lazy, children, showSelectAll, } = this.props;\n            const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n            const locale = this.getLocale(transferLocale, renderEmpty);\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const { leftDataSource, rightDataSource } = this.separateDataSource();\n            const leftActive = targetSelectedKeys.length > 0;\n            const rightActive = sourceSelectedKeys.length > 0;\n            const cls = classNames(className, prefixCls, {\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-customize-list`]: !!children,\n            });\n            const titles = this.getTitles(locale);\n            return (<div className={cls} style={style}>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'left')} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} handleSelect={this.handleLeftSelect} handleSelectAll={this.handleLeftSelectAll} onItemSelect={this.onLeftItemSelect} onItemSelectAll={this.onLeftItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleLeftScroll} disabled={disabled} direction=\"left\" showSelectAll={showSelectAll} {...locale}/>\n            <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft} style={operationStyle} disabled={disabled}/>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'right')} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} handleSelect={this.handleRightSelect} handleSelectAll={this.handleRightSelectAll} onItemSelect={this.onRightItemSelect} onItemSelectAll={this.onRightItemSelectAll} render={render} showSearch={showSearch} body={body} renderList={children} footer={footer} lazy={lazy} onScroll={this.handleRightScroll} disabled={disabled} direction=\"right\" showSelectAll={showSelectAll} {...locale}/>\n          </div>);\n        }}\n    </ConfigConsumer>);\n        warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' +\n            'please use `locale` instead.');\n        warning(!('body' in props), 'Transfer', '`body` is internal usage and will bre removed, please use `children` instead.');\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys || [];\n            return {\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            };\n        }\n        return null;\n    }\n    // eslint-disable-next-line\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    getTitles(transferLocale) {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        return transferLocale.titles;\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const { onSelectChange } = this.props;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    separateDataSource() {\n        const { dataSource, rowKey, targetKeys = [] } = this.props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        return {\n            leftDataSource,\n            rightDataSource,\n        };\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    locale: {},\n    showSearch: false,\n    listStyle: () => { },\n};\nTransfer.propTypes = {\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    height: PropTypes.number,\n    style: PropTypes.object,\n    listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    operationStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    locale: PropTypes.object,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\npolyfill(Transfer);\nexport default Transfer;\n"]},"metadata":{},"sourceType":"module"}