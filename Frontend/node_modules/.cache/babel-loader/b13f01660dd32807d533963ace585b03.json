{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcTooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport _getPlacements from './placements';\nimport { ConfigConsumer } from '../config-provider';\n\nvar splitObject = function splitObject(obj, keys) {\n  var picked = {};\n\n  var omitted = _extends({}, obj);\n\n  keys.forEach(function (key) {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omitted[key];\n    }\n  });\n  return {\n    picked: picked,\n    omitted: omitted\n  };\n}; // Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\n\n\nfunction getDisabledCompatibleChildren(element) {\n  var elementType = element.type;\n\n  if ((elementType.__ANT_BUTTON === true || elementType.__ANT_SWITCH === true || elementType.__ANT_CHECKBOX === true || element.type === 'button') && element.props.disabled) {\n    // Pick some layout related style properties up to span\n    // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n    var _splitObject = splitObject(element.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),\n        picked = _splitObject.picked,\n        omitted = _splitObject.omitted;\n\n    var spanStyle = _extends(_extends({\n      display: 'inline-block'\n    }, picked), {\n      cursor: 'not-allowed',\n      width: element.props.block ? '100%' : null\n    });\n\n    var buttonStyle = _extends(_extends({}, omitted), {\n      pointerEvents: 'none'\n    });\n\n    var child = React.cloneElement(element, {\n      style: buttonStyle,\n      className: null\n    });\n    return React.createElement(\"span\", {\n      style: spanStyle,\n      className: element.props.className\n    }, child);\n  }\n\n  return element;\n}\n\nvar Tooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  function Tooltip(props) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this, props));\n\n    _this.onVisibleChange = function (visible) {\n      var onVisibleChange = _this.props.onVisibleChange;\n\n      if (!('visible' in _this.props)) {\n        _this.setState({\n          visible: _this.isNoTitle() ? false : visible\n        });\n      }\n\n      if (onVisibleChange && !_this.isNoTitle()) {\n        onVisibleChange(visible);\n      }\n    };\n\n    _this.saveTooltip = function (node) {\n      _this.tooltip = node;\n    }; // 动态设置动画点\n\n\n    _this.onPopupAlign = function (domNode, align) {\n      var placements = _this.getPlacements(); // 当前返回的位置\n\n\n      var placement = Object.keys(placements).filter(function (key) {\n        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];\n      })[0];\n\n      if (!placement) {\n        return;\n      } // 根据当前坐标设置动画点\n\n\n      var rect = domNode.getBoundingClientRect();\n      var transformOrigin = {\n        top: '50%',\n        left: '50%'\n      };\n\n      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n        transformOrigin.top = \"\".concat(rect.height - align.offset[1], \"px\");\n      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n        transformOrigin.top = \"\".concat(-align.offset[1], \"px\");\n      }\n\n      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n        transformOrigin.left = \"\".concat(rect.width - align.offset[0], \"px\");\n      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n        transformOrigin.left = \"\".concat(-align.offset[0], \"px\");\n      }\n\n      domNode.style.transformOrigin = \"\".concat(transformOrigin.left, \" \").concat(transformOrigin.top);\n    };\n\n    _this.renderTooltip = function (_ref) {\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          state = _assertThisInitialize.state;\n\n      var customizePrefixCls = props.prefixCls,\n          title = props.title,\n          overlay = props.overlay,\n          openClassName = props.openClassName,\n          getPopupContainer = props.getPopupContainer,\n          getTooltipContainer = props.getTooltipContainer;\n      var children = props.children;\n      var prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n      var visible = state.visible; // Hide tooltip when there is no title\n\n      if (!('visible' in props) && _this.isNoTitle()) {\n        visible = false;\n      }\n\n      var child = getDisabledCompatibleChildren(React.isValidElement(children) ? children : React.createElement(\"span\", null, children));\n      var childProps = child.props;\n      var childCls = classNames(childProps.className, _defineProperty({}, openClassName || \"\".concat(prefixCls, \"-open\"), true));\n      return React.createElement(RcTooltip, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,\n        ref: _this.saveTooltip,\n        builtinPlacements: _this.getPlacements(),\n        overlay: overlay || title || '',\n        visible: visible,\n        onVisibleChange: _this.onVisibleChange,\n        onPopupAlign: _this.onPopupAlign\n      }), visible ? React.cloneElement(child, {\n        className: childCls\n      }) : child);\n    };\n\n    _this.state = {\n      visible: !!props.visible || !!props.defaultVisible\n    };\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"getPopupDomNode\",\n    value: function getPopupDomNode() {\n      return this.tooltip.getPopupDomNode();\n    }\n  }, {\n    key: \"getPlacements\",\n    value: function getPlacements() {\n      var _this$props = this.props,\n          builtinPlacements = _this$props.builtinPlacements,\n          arrowPointAtCenter = _this$props.arrowPointAtCenter,\n          autoAdjustOverflow = _this$props.autoAdjustOverflow;\n      return builtinPlacements || _getPlacements({\n        arrowPointAtCenter: arrowPointAtCenter,\n        verticalArrowShift: 8,\n        autoAdjustOverflow: autoAdjustOverflow\n      });\n    }\n  }, {\n    key: \"isNoTitle\",\n    value: function isNoTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          overlay = _this$props2.overlay;\n      return !title && !overlay; // overlay for old version compatibility\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTooltip);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\n\nTooltip.defaultProps = {\n  placement: 'top',\n  transitionName: 'zoom-big-fast',\n  mouseEnterDelay: 0.1,\n  mouseLeaveDelay: 0.1,\n  arrowPointAtCenter: false,\n  autoAdjustOverflow: true\n};\npolyfill(Tooltip);\nexport default Tooltip;","map":{"version":3,"mappings":"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","names":["React","polyfill","RcTooltip","classNames","getPlacements","ConfigConsumer","splitObject","obj","keys","picked","omitted","_extends","forEach","key","getDisabledCompatibleChildren","element","elementType","type","__ANT_BUTTON","__ANT_SWITCH","__ANT_CHECKBOX","props","disabled","style","spanStyle","display","cursor","width","block","buttonStyle","pointerEvents","child","cloneElement","className","Tooltip","_classCallCheck","_this","onVisibleChange","visible","setState","isNoTitle","saveTooltip","node","tooltip","onPopupAlign","domNode","align","placements","placement","Object","filter","points","rect","getBoundingClientRect","transformOrigin","top","left","indexOf","height","offset","renderTooltip","getContextPopupContainer","getPopupContainer","getPrefixCls","state","customizePrefixCls","prefixCls","title","overlay","openClassName","getTooltipContainer","children","isValidElement","childProps","childCls","ref","builtinPlacements","defaultVisible","getPopupDomNode","arrowPointAtCenter","autoAdjustOverflow","verticalArrowShift","nextProps","Component","defaultProps","transitionName","mouseEnterDelay","mouseLeaveDelay"],"sources":["tooltip/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcTooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport getPlacements from './placements';\nimport { ConfigConsumer } from '../config-provider';\nconst splitObject = (obj, keys) => {\n    const picked = {};\n    const omitted = Object.assign({}, obj);\n    keys.forEach(key => {\n        if (obj && key in obj) {\n            picked[key] = obj[key];\n            delete omitted[key];\n        }\n    });\n    return { picked, omitted };\n};\n// Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\nfunction getDisabledCompatibleChildren(element) {\n    const elementType = element.type;\n    if ((elementType.__ANT_BUTTON === true ||\n        elementType.__ANT_SWITCH === true ||\n        elementType.__ANT_CHECKBOX === true ||\n        element.type === 'button') &&\n        element.props.disabled) {\n        // Pick some layout related style properties up to span\n        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n        const { picked, omitted } = splitObject(element.props.style, [\n            'position',\n            'left',\n            'right',\n            'top',\n            'bottom',\n            'float',\n            'display',\n            'zIndex',\n        ]);\n        const spanStyle = Object.assign(Object.assign({ display: 'inline-block' }, picked), { cursor: 'not-allowed', width: element.props.block ? '100%' : null });\n        const buttonStyle = Object.assign(Object.assign({}, omitted), { pointerEvents: 'none' });\n        const child = React.cloneElement(element, {\n            style: buttonStyle,\n            className: null,\n        });\n        return (<span style={spanStyle} className={element.props.className}>\n        {child}\n      </span>);\n    }\n    return element;\n}\nclass Tooltip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onVisibleChange = (visible) => {\n            const { onVisibleChange } = this.props;\n            if (!('visible' in this.props)) {\n                this.setState({ visible: this.isNoTitle() ? false : visible });\n            }\n            if (onVisibleChange && !this.isNoTitle()) {\n                onVisibleChange(visible);\n            }\n        };\n        this.saveTooltip = (node) => {\n            this.tooltip = node;\n        };\n        // 动态设置动画点\n        this.onPopupAlign = (domNode, align) => {\n            const placements = this.getPlacements();\n            // 当前返回的位置\n            const placement = Object.keys(placements).filter(key => placements[key].points[0] === align.points[0] &&\n                placements[key].points[1] === align.points[1])[0];\n            if (!placement) {\n                return;\n            }\n            // 根据当前坐标设置动画点\n            const rect = domNode.getBoundingClientRect();\n            const transformOrigin = {\n                top: '50%',\n                left: '50%',\n            };\n            if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n                transformOrigin.top = `${rect.height - align.offset[1]}px`;\n            }\n            else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n                transformOrigin.top = `${-align.offset[1]}px`;\n            }\n            if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n                transformOrigin.left = `${rect.width - align.offset[0]}px`;\n            }\n            else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n                transformOrigin.left = `${-align.offset[0]}px`;\n            }\n            domNode.style.transformOrigin = `${transformOrigin.left} ${transformOrigin.top}`;\n        };\n        this.renderTooltip = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, }) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, title, overlay, openClassName, getPopupContainer, getTooltipContainer, } = props;\n            const children = props.children;\n            const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n            let { visible } = state;\n            // Hide tooltip when there is no title\n            if (!('visible' in props) && this.isNoTitle()) {\n                visible = false;\n            }\n            const child = getDisabledCompatibleChildren(React.isValidElement(children) ? children : <span>{children}</span>);\n            const childProps = child.props;\n            const childCls = classNames(childProps.className, {\n                [openClassName || `${prefixCls}-open`]: true,\n            });\n            return (<RcTooltip {...this.props} prefixCls={prefixCls} getTooltipContainer={getPopupContainer || getTooltipContainer || getContextPopupContainer} ref={this.saveTooltip} builtinPlacements={this.getPlacements()} overlay={overlay || title || ''} visible={visible} onVisibleChange={this.onVisibleChange} onPopupAlign={this.onPopupAlign}>\n        {visible ? React.cloneElement(child, { className: childCls }) : child}\n      </RcTooltip>);\n        };\n        this.state = {\n            visible: !!props.visible || !!props.defaultVisible,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return { visible: nextProps.visible };\n        }\n        return null;\n    }\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n    getPlacements() {\n        const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n        return (builtinPlacements ||\n            getPlacements({\n                arrowPointAtCenter,\n                verticalArrowShift: 8,\n                autoAdjustOverflow,\n            }));\n    }\n    isNoTitle() {\n        const { title, overlay } = this.props;\n        return !title && !overlay; // overlay for old version compatibility\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTooltip}</ConfigConsumer>;\n    }\n}\nTooltip.defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n};\npolyfill(Tooltip);\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}