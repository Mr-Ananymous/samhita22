{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IamNi\\\\Desktop\\\\Samhita\\\\samhita22\\\\Frontend\\\\src\\\\pages\\\\Technical.jsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport AOS from 'aos';\nimport Scroll from 'react-scroll';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons';\nimport { faCloudDownloadAlt, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Tooltip, Drawer } from 'antd';\nimport Navbar from '../components/Navbar';\nimport Event from '../components/Event';\nimport Hackathon from '../assets/Events/Hackathon.png';\nimport HelloWorld from '../assets/Events/Helloworld.png';\nimport PaperPresentation from '../assets/Events/Paperpresentation.png';\nimport OSPC from '../assets/Events/Ospc.png';\nimport Codegolfing from '../assets/Events/Codegolfing.png';\nimport CodeObfus from '../assets/Events/Codeobfus.png';\nimport ReverseCoding from '../assets/Events/Reversecoding.png';\nimport TechTravel from '../assets/Events/Techtravel.png';\nimport UnboxImage from '../assets/Events/Unbox.png';\nimport DcodeImage from '../assets/Events/Dcode.png';\nimport AcidityImage from '../assets/Events/Acidity.png';\nimport OLPC from '../assets/Events/Olpc.png';\nimport StreetCoding from '../assets/Events/Streetcoding.png';\nimport WebDevImage from '../assets/Events/Webdev.png';\nimport UIUXImage from '../assets/Events/UIUX.png';\nimport PythoniteImage from '../assets/Events/Pythonite.png';\nimport CoffeeWithJavaImage from '../assets/Events/Coffeewithjava.png';\n\nclass Technical extends Component {\n  constructor() {\n    super();\n\n    this.setDrawerVisible = isDrawerVisible => this.setState({\n      isDrawerVisible\n    });\n\n    this.onDrawerClose = () => this.setState({\n      isDrawerVisible: false\n    });\n\n    this.state = {\n      isDrawerVisible: false\n    };\n  }\n\n  componentDidMount() {\n    const scroll = Scroll.animateScroll;\n    scroll.scrollToTop({\n      duration: 100\n    });\n    AOS.init({\n      delay: 150,\n      duration: 250,\n      once: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Samhita 20 - Technical events\")), /*#__PURE__*/React.createElement(Navbar, {\n      name: \"event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section\",\n      style: {\n        backgroundColor: '#090a2b',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container events-outer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-aos\": \"fade-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title is-3 is-lato has-text-centered\",\n      style: {\n        marginBottom: '55px',\n        color: ' #b0c7ed'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Technical events\", /*#__PURE__*/React.createElement(Tooltip, {\n      placement: \"right\",\n      title: \"Non-technical events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon event-navigation-icon-right\",\n      onClick: () => this.props.history.replace('/events/non-technical'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faArrowAltCircleRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      avatar: Hackathon,\n      title: \"Hackathon\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      fullTime: true,\n      size: 2,\n      description: \"Bring your skills to the fore and build an innovative solution to a real-time problem. Show your clever skills and build your own software.\" // contactName = 'Aswin'\n      // contactNumber = {<><a href = 'tel:+917200792223'>+91 7200792223</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Problem statements are given at the end of rules.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Purchase of Samhita ticket for entry is mandatory.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Time for solving the problems are between 25\", /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 95\n      }\n    }, \"th\"), \" and 30\", /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 115\n      }\n    }, \"th\"), \" of January 2020.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, \"\\u2022 The shortlisted teams must prepare a PPT and present it on January 31\", /*#__PURE__*/React.createElement(\"sup\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 120\n      }\n    }, \"st\"), \" at Samhita '20.\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button is-lato is-link is-rounded\",\n      style: {\n        margin: '12px 0px'\n      },\n      onClick: () => this.setDrawerVisible(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, \"Problem statements\"), /*#__PURE__*/React.createElement(Drawer, {\n      className: \"is-lato\",\n      title: \"Problem statements for Hackathon\",\n      width: \"90%\",\n      placement: \"left\",\n      closable: true,\n      onClose: this.onDrawerClose,\n      visible: this.state.isDrawerVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"is-size-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 81\n      }\n    }, \"Note: Participants can solve as much as problems as they can. The more they solve the higher chance of getting shortlisted.\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"is-size-5 has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 48\n      }\n    }, \"Blockchain\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }, \"Imagine a scenario, a farmer wants to claim insurance for his crops that was affected by drought or flood. Using the past weather data of the particular period to check the validation of the insurance and create a smart contract for the insurance claim using blockchain. You can use some mock data to create the prototype. Add your own contribution to the problem to get additional points.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: '10px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 45\n      }\n    }, \"Submissions will be evaluated on the following, not in any particular order:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Working UI, Blockchain and smart contract implementation.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 49\n      }\n    }, \"\\u25CF It works end to end!\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Accuracy of drought detection.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 49\n      }\n    }, \"\\u25CF User experience.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Innovation.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Scale and performance.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Extensibility.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 49\n      }\n    }, \"\\u25CF Teamwork.\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"is-size-5 has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 49\n      }\n    }, \"Machine Learning\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, \"Predict number of upvotes (Stackoverflow)\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }, \"Crowdsourced online content platforms have a constant need to identify the best content in time to appropriately promote and thereby improve the engagement at the website. This challenge involves a similar problem of predicting the upvote count for a query posted and identify the parameters that affect it the most.                             \"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '10px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, \"Rules:\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 49\n      }\n    }, \"\\u25CF You are free to use any tool and machine you have rightful access to.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 49\n      }\n    }, \"\\u25CF You can use any programming language or statistical software.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 49\n      }\n    }, \"\\u25CF You are free to use solution checker as many times as you want.\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, \"Problem statement:\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: '10px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, \"An online question and answer platform has hired you as a data scientist to identify the best question authors on the platform. This identification will bring more insight into increasing the user engagement.\\xA0Given the tag of the question, number of views received, number of answers, username and reputation of the question author, the problem requires you to predict the upvote count that the question will receive.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 45\n      }\n    }, \"Data dictionary:\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table is-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 53\n      }\n    }, \"Variable\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 53\n      }\n    }, \"Definition\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 57\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 57\n      }\n    }, \"Question ID\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 57\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 57\n      }\n    }, \"Anonymised tags representing question category\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 57\n      }\n    }, \"Reputation\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 57\n      }\n    }, \"Reputation score of question author\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 57\n      }\n    }, \"Answers\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 57\n      }\n    }, \"Number of times question has been answered\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 57\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 57\n      }\n    }, \"Anonymised user id of question author\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 57\n      }\n    }, \"Views\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 57\n      }\n    }, \"Number of times question has been viewed\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 57\n      }\n    }, \"Upvotes\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 57\n      }\n    }, \"(Target) Number of upvotes for the question\")))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    }, \"Evaluation metric:\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: '5px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 45\n      }\n    }, \"The evaluation metric for this competition is\\xA0\", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 124\n      }\n    }, \"RMSE (Root Mean Squared Error)\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"is-size-6\",\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://drive.google.com/folderview?id=1jL3Wxi343ZISwlLX9tZj32kDK2v9Fj66\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 49\n      }\n    }, \"You can find sample datasets here\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"is-size-5 has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 49\n      }\n    }, \"Deep Learning\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }, \"You are given a large class of flowers, 102 to be precise. Build a flower classification model which is discriminative between classes but can correctly classify all flower images belonging to the same class. There are a total of 20549 (train + test) images of flowers. Predict the category of the flowers present in the test folder with good accuracy.\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: '10px 0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 45\n      }\n    }, \"The data folder consists of 2 folders and 3 CSV files.\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 49\n      }\n    }, \"\\u25CF train - Contains 18540 images from 102 categories of flowers.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 49\n      }\n    }, \"\\u25CF test \\xA0- Contains 2009 images.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 49\n      }\n    }, \"\\u25CF train.csv - Contains 2 columns and 18541 rows (including the headers), which consists of image id and the true label for each of the images in the train folder.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 49\n      }\n    }, \"\\u25CF test.csv - Contains the image id for the images present in test folder for which the true label needs to be predicted.\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"is-size-6\",\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://he-public-data.s3-ap-southeast-1.amazonaws.com/HE_Challenge_data.zip\",\n      rel: \"noreferrer noopener\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      style: {\n        position: 'relative',\n        top: '1px',\n        marginRight: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCloudDownloadAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 57\n      }\n    })), \"Download dataset (905MB)\")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"is-size-5 has-text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 49\n      }\n    }, \"Open innovation\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontWeight: 'bold',\n        margin: '1rem 0rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, \"You are welcome to submit a creative novel project of your own too, other than the above. Grab your Samhita '20 ticket and submit your project now!\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://forms.gle/Lm7x9orkxTUeB1ny9\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button has-text-centered is-lato is-success is-rounded has-text-weight-semibold\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 57\n      }\n    }, \"Submit your solutions\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 61\n      }\n    }))))))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      avatar: PaperPresentation,\n      title: \"Paper presentation\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      fullTime: true,\n      size: 3,\n      description: \"Research is exploring the unexplored and presenting a whole phenomenal idea to the world. Come to Samhita '20 and present your innovative ideas and win prizes upto 5K!\" // contactName = 'Sruthi'\n      // contactNumber = {<><a href = 'tel:+919840291913'>+91 9840291913</a></>} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Paper must be in IEEE format.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Papers must be submitted to \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"mailto: papers@samhita.org.in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 79\n      }\n    }, \"papers@samhita.org.in\"), \" before 28/01/2020\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Mail should contain the unique Samhita ID received on purchase of Samhita '20 ticket.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Plagiarism of any kind is strictly prohibited.\"), /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 79\n      }\n    }, \"Note: One Samhita ticket is enough for participation of a team consisting three members. But only one certificate will be issued for the person who has purchased Samhita ticket (Certificate will contain the names of all three members). Seperate tickets should be bought for individual certificates.\")))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      avatar: HelloWorld,\n      title: \"<Hello World/>\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 47\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 54\n        }\n      }, \"st\"), \" February, 2020\")),\n      prelims: \"9 AM - 12 PM\",\n      finals: \"1 PM - 4:30 PM\",\n      size: 2,\n      onsite: true,\n      description: \"For all the newcomers and rookies out there, Hello World is a special event for the first years. Start and build your career in programming here.\" // contactName = 'Manoj Kumar'\n      // contactNumber = {<><a href = 'tel:+917448746107'>+91 7448746107</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each team can comprise of maximum 2 members.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Any programming language can be used.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: OSPC,\n      title: \"OSPC (OnSite Programming Contest)\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"OSPC will test the proficiency in cracking logics, framing algorithms and data structures.\" // contactName = 'Durairaj'\n      // contactNumber = {<><a href = 'tel:+919487376430'>+91 9487376430</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each team can comprise a maximum of 2 members.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 45\n      }\n    }, \"\\u2022 First round will be a pen and paper round.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 45\n      }\n    }, \"\\u2022 For the second round you will be asked to code on \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.hackerrank.com/\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 101\n      }\n    }, \"hackerrank\"), \".\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Every team must have an hackerrank account.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: Codegolfing,\n      title: \"Code Golfing\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 46\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 53\n        }\n      }, \"st\"), \" February, 2020\")),\n      prelims: \"9 AM - 12 PM\",\n      finals: \"1 PM - 4:30 PM\",\n      size: 2,\n      description: \"The code with fewest amount of characters wins. The best solution is the one that has the fewest characters or fewest lines of code.\" // contactName = 'Manoj'\n      // contactNumber = {<><a href = 'tel:+918680919117'>+91 8680919117</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each team can comprise a maximum of 2 members.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Programming languages allowed: C, C++, C#, Java, HTML, Python, JavaScript, R, MATLAB.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Internet access is not allowed.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: CodeObfus,\n      title: \"Code Obfuscation\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"The technique of making the code extremely hard to read by others is called Code Obfuscation.\" // contactName = 'Abinaya'\n      // contactNumber = {<><a href = 'tel:+917358803408'>+91 7358803408</a></>} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each team can comprise a maximum of 2 members.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Discussion of strategies or plagiarism of any kind will lead to disqualification.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: ReverseCoding,\n      title: \"Reverse Coding\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"Building the blocks backward. With the given input and the expected output, the code should be cracked. This event tests his/ her expertise in cracking patterns and rapid coding skills.\" // contactName = 'Ganesh Kumar'\n      // contactNumber = {<><a href = 'tel:+917845149635'>+91 7845149635</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each team can comprise a maximum of 2 members.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 45\n      }\n    }, \"\\u2022 No use of any electronic gadgets.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Any programming language can be used.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: TechTravel,\n      title: \"Tech Travel\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"To code a series of problems with a powerful competition. More the speed, Closer the win.\" // contactName = 'Mohamed Adhil'\n      // contactNumber = {<><a href = 'tel:+919952567290'>+91 9952567290</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be many connected paths of questions leading to a same destination.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 45\n      }\n    }, \"\\u2022 A candidate can choose any path to reach the final destination.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Each node in the connected graph of questions, has a separate weightage.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 45\n      }\n    }, \"\\u2022 A candidate's total points is the highest aggregate of points along any path.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds. First round is eliminative.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: UnboxImage,\n      title: \"Unbox\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 47\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 54\n        }\n      }, \"st\"), \" February, 2020\")),\n      prelims: \"9 AM - 12 PM\",\n      finals: \"1 PM - 4:30 PM\",\n      size: 2,\n      description: \"Multiple choices to choose the problem. But with a twist of facing a penalty at the cost of the chosen problem being unsolved.\" // contactName = 'Sindhukavi'\n      // contactNumber = {<><a href = 'tel:+917305794164'>+91 7305794164</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 45\n      }\n    }, \"\\u2022 The candidate is allowed to swap upto 3 questions before answering one.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Both rounds are a rolling event where each candidate maximum gets to unbox for not more than given time limit.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: DcodeImage,\n      title: \"D-Code\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 47\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 54\n        }\n      }, \"st\"), \" February, 2020\")),\n      prelims: \"9 AM - 12 PM\",\n      finals: \"1 PM - 4:30 PM\",\n      size: 2,\n      description: \"Breaking the security. This event tests the Cryptography and Security Skills of the participants.\" // contactName = 'Abarna'\n      // contactNumber = {<><a href = 'tel:+918610341976'>+91 8610341976</a></>} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Paper based.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: AcidityImage,\n      title: \"Acidity\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"SQL queries, ER Diagrams, Normalisation and so forth.\",\n      contactName: \"Sridharan\",\n      contactNumber: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"tel:+918939195177\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 56\n        }\n      }, \"+91 8939195177\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Discussion of strategies or plagiarism of any kind will lead to disqualification.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      avatar: OLPC,\n      title: \"OLPC (OnLine Programming Contest)\",\n      size: \"Solo\",\n      online: true,\n      description: \"OLPC will test the proficiency in cracking logics, framing algorithms and data structures.\" // contactName = 'Pradeep'\n      // contactNumber = {<><a href = 'tel:+919092534794'>+91 9092534794</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be a single round.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 45\n      }\n    }, \"\\u2022 You will be asked to code on \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://www.hackerrank.com/\",\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 80\n      }\n    }, \"hackerrank\"), \".\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Every participant must have an hackerrank account.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 45\n      }\n    }, \"\\u2022 The time limit for the round is 2 hours.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: StreetCoding,\n      title: \"Street Coding\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 47\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 54\n        }\n      }, \"st\"), \" February, 2020\")),\n      prelims: \"9 AM - 12 PM\",\n      finals: \"1 PM - 4:30 PM\",\n      size: 2,\n      description: \"Street coding will test the focus of the participants as they\\u2019ll be subjected to distractions in the environment.\" // contactName = 'Madhan'\n      // contactNumber = {<><a href = 'tel:+919994223635'>+91 9994223635</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final round: Computer based.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      avatar: WebDevImage,\n      title: \"Web Development\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: \"Solo\",\n      description: \"Participants will be asked to create a web app or website for a given scenario in the final round. First round will test the participants\\u2019 basic knowledge about various web development frameworks and scripting languages.\" // contactName = 'Meena'\n      // contactNumber = {<><a href = 'tel:+919488085260'>+91 9488085260</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based (Multiple Choice Questions).\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: UIUXImage,\n      title: \"UI/UX Designing\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 47\n        }\n      }, \"1\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 54\n        }\n      }, \"st\"), \" February, 2020\")),\n      uxTime: true,\n      size: \"Solo\",\n      description: \"Participants will be asked to create UI/UX Front End Design for an app or a website for a given scenario.\" // contactName = 'Rajesh'\n      // contactNumber = {<><a href = 'tel:+917358345745'>+91 7358345745</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Online (Elimination).\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Selected candidates should bring their own laptop to the final round along with necessary softwares (Photoshop, Illustrator, etc.).\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: PythoniteImage,\n      title: \"Pythonite\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"Pythonite will test the proficiency of the participants in the language of Python.\" // contactName = 'Ramya'\n      // contactNumber = {<><a href = 'tel:+919094599843'>+91 9094599843</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be a rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Discussion of strategies or plagiarism of any kind will lead to disqualification.\"))))), /*#__PURE__*/React.createElement(LazyLoadComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Event, {\n      onsite: true,\n      avatar: CoffeeWithJavaImage,\n      title: \"Coffee with Java\",\n      date: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 47\n        }\n      }, \"31\", /*#__PURE__*/React.createElement(\"sup\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 55\n        }\n      }, \"st\"), \" January, 2020\")),\n      prelims: \"9 AM - 1 PM\",\n      finals: \"2 PM - 4:30 PM\",\n      size: 2,\n      description: \"This event will test the proficiency of the participants in the core concepts of Java and other associated frameworks.\" // contactName = 'Vinodhini'\n      // contactNumber = {<><a href = 'tel:+919941279491'>+91 9941279491</a></>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 45\n      }\n    }, \"\\u2022 There will be 2 rounds.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Preliminary Round: Paper based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Final Round: Computer based.\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 45\n      }\n    }, \"\\u2022 Discussion of strategies or plagiarism of any kind will lead to disqualification.\")))))))));\n  }\n\n}\n\nexport default withRouter(Technical);","map":{"version":3,"sources":["C:/Users/IamNi/Desktop/Samhita/samhita22/Frontend/src/pages/Technical.jsx"],"names":["React","Component","withRouter","Helmet","AOS","Scroll","LazyLoadComponent","FontAwesomeIcon","faArrowAltCircleRight","faCloudDownloadAlt","faUpload","Tooltip","Drawer","Navbar","Event","Hackathon","HelloWorld","PaperPresentation","OSPC","Codegolfing","CodeObfus","ReverseCoding","TechTravel","UnboxImage","DcodeImage","AcidityImage","OLPC","StreetCoding","WebDevImage","UIUXImage","PythoniteImage","CoffeeWithJavaImage","Technical","constructor","setDrawerVisible","isDrawerVisible","setState","onDrawerClose","state","componentDidMount","scroll","animateScroll","scrollToTop","duration","init","delay","once","render","backgroundColor","minHeight","display","flexDirection","alignItems","marginBottom","color","props","history","replace","margin","fontWeight","marginTop","position","top","marginRight","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\nimport AOS from 'aos'\r\nimport Scroll from 'react-scroll'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\r\nimport { faCloudDownloadAlt, faUpload } from '@fortawesome/free-solid-svg-icons'\r\nimport { Tooltip, Drawer } from 'antd'\r\nimport Navbar from '../components/Navbar'\r\nimport Event from '../components/Event'\r\nimport Hackathon from '../assets/Events/Hackathon.png'\r\nimport HelloWorld from '../assets/Events/Helloworld.png'\r\nimport PaperPresentation from '../assets/Events/Paperpresentation.png'\r\nimport OSPC from '../assets/Events/Ospc.png'\r\nimport Codegolfing from '../assets/Events/Codegolfing.png'\r\nimport CodeObfus from '../assets/Events/Codeobfus.png'\r\nimport ReverseCoding from '../assets/Events/Reversecoding.png'\r\nimport TechTravel from '../assets/Events/Techtravel.png'\r\nimport UnboxImage from '../assets/Events/Unbox.png'\r\nimport DcodeImage from '../assets/Events/Dcode.png'\r\nimport AcidityImage from '../assets/Events/Acidity.png'\r\nimport OLPC from '../assets/Events/Olpc.png'\r\nimport StreetCoding from '../assets/Events/Streetcoding.png'\r\nimport WebDevImage from '../assets/Events/Webdev.png'\r\nimport UIUXImage from '../assets/Events/UIUX.png'\r\nimport PythoniteImage from '../assets/Events/Pythonite.png'\r\nimport CoffeeWithJavaImage from '../assets/Events/Coffeewithjava.png'\r\n\r\nclass Technical extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isDrawerVisible: false\r\n        }\r\n    }\r\n\r\n    setDrawerVisible = isDrawerVisible => this.setState({ isDrawerVisible })\r\n\r\n    onDrawerClose = () => this.setState({ isDrawerVisible: false })\r\n\r\n    componentDidMount() {\r\n        const scroll = Scroll.animateScroll\r\n        scroll.scrollToTop({\r\n            duration: 100\r\n        })\r\n        AOS.init({\r\n            delay: 150,\r\n            duration: 250,\r\n            once: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>Samhita 20 - Technical events</title>\r\n                </Helmet>\r\n                <Navbar name = 'event'/>\r\n                <section className = 'section' style = {{backgroundColor: '#090a2b', minHeight: '100vh', display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n                    <div className = 'container events-outer-container'>\r\n                        <div data-aos = 'fade-up'>\r\n                            <div className = 'title is-3 is-lato has-text-centered'  style = {{marginBottom: '55px',color:' #b0c7ed'}}>\r\n                                Technical events\r\n                                <Tooltip placement = 'right' title = 'Non-technical events' >\r\n                                    <span className = 'icon event-navigation-icon-right' onClick = {() => this.props.history.replace('/events/non-technical')}>\r\n                                        <FontAwesomeIcon icon = {faArrowAltCircleRight} />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    avatar = {Hackathon} \r\n                                    title = 'Hackathon' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    fullTime\r\n                                    size = {2} \r\n                                    description = \"Bring your skills to the fore and build an innovative solution to a real-time problem. Show your clever skills and build your own software.\"\r\n                                    // contactName = 'Aswin'\r\n                                    // contactNumber = {<><a href = 'tel:+917200792223'>+91 7200792223</a></>}\r\n                                >\r\n                                    <>\r\n                                        <ul>\r\n                                            <li>• Problem statements are given at the end of rules.</li>\r\n                                            <li>• Purchase of Samhita ticket for entry is mandatory.</li>\r\n                                            <li>• Time for solving the problems are between 25<sup>th</sup> and 30<sup>th</sup> of January 2020.</li>\r\n                                            <li>• The shortlisted teams must prepare a PPT and present it on January 31<sup>st</sup> at Samhita '20.</li>\r\n                                        </ul>\r\n                                        <button className = 'button is-lato is-link is-rounded' style = {{margin: '12px 0px'}} onClick = {() => this.setDrawerVisible(true)}>Problem statements</button>\r\n                                        <Drawer                                                  \r\n                                            className = 'is-lato'\r\n                                            title=\"Problem statements for Hackathon\"\r\n                                            width = '90%'\r\n                                            placement = 'left'\r\n                                            closable={true}\r\n                                            onClose={this.onDrawerClose}\r\n                                            visible={this.state.isDrawerVisible}\r\n                                            >\r\n                                            <p style = {{marginBottom: '1rem'}}><strong className = 'is-size-6'>Note: Participants can solve as much as problems as they can. The more they solve the higher chance of getting shortlisted.</strong></p>\r\n                                            <p><strong className = 'is-size-5 has-text-danger'>Blockchain</strong></p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                            Imagine a scenario, a farmer wants to claim insurance for his crops that was\r\n                                            affected by drought or flood. Using the past weather data of the particular\r\n                                            period to check the validation of the insurance and create a smart contract for\r\n                                            the insurance claim using blockchain. You can use some mock data to create the\r\n                                            prototype. Add your own contribution to the problem to get additional points.\r\n                                            </p>\r\n                                            <p style = {{margin: '10px 0px'}}>Submissions will be evaluated on the following, not in any particular order:</p>\r\n                                            <ul>\r\n                                                <li>● Working UI, Blockchain and smart contract implementation.</li>\r\n                                                <li>● It works end to end!</li>\r\n                                                <li>● Accuracy of drought detection.</li>\r\n                                                <li>● User experience.</li>\r\n                                                <li>● Innovation.</li>\r\n                                                <li>● Scale and performance.</li>\r\n                                                <li>● Extensibility.</li>\r\n                                                <li>● Teamwork.</li>\r\n                                            </ul>\r\n                                            <hr/>\r\n                                            <p style = {{marginTop: '1rem'}}>\r\n                                                <strong className = 'is-size-5 has-text-danger'>\r\n                                                    Machine Learning\r\n                                                </strong>\r\n                                            </p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                Predict number of upvotes (Stackoverflow)\r\n                                            </p>\r\n                                            <p style = {{margin: '1rem 0rem'}}>\r\n                                            Crowdsourced online content platforms have a constant need to identify the best content in\r\n                                            time to appropriately promote and thereby improve the engagement at the website. This\r\n                                            challenge involves a similar problem of predicting the upvote count for a query posted and\r\n                                            identify the parameters that affect it the most.                             </p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '10px 0px'}}>Rules:</p>\r\n                                            <ul>\r\n                                                <li>● You are free to use any tool and machine you have rightful access to.</li>\r\n                                                <li>● You can use any programming language or statistical software.</li>\r\n                                                <li>● You are free to use solution checker as many times as you want.</li>           \r\n                                            </ul>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                Problem statement:\r\n                                            </p>\r\n                                            <p style = {{margin: '10px 0px'}}>\r\n                                                An online question and answer platform has hired you as a data scientist to identify the best\r\n                                                question authors on the platform. This identification will bring more insight into increasing\r\n                                                the user engagement. Given the tag of the question, number of views received, number of\r\n                                                answers, username and reputation of the question author, the problem requires you to predict\r\n                                                the upvote count that the question will receive.\r\n                                            </p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                Data dictionary:\r\n                                            </p>\r\n                                            <table className = 'table is-bordered'>\r\n                                                <thead>\r\n                                                    <th>Variable</th>\r\n                                                    <th>Definition</th>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>ID</td>\r\n                                                        <td>Question ID</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Tag</td>\r\n                                                        <td>Anonymised tags representing question category</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Reputation</td>\r\n                                                        <td>Reputation score of question author</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Answers</td>\r\n                                                        <td>Number of times question has been answered</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Username</td>\r\n                                                        <td>Anonymised user id of question author</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Views</td>\r\n                                                        <td>Number of times question has been viewed</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Upvotes</td>\r\n                                                        <td>(Target) Number of upvotes for the question</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                Evaluation metric:\r\n                                            </p>\r\n                                            <p style = {{margin: '5px 0px'}}>The evaluation metric for this competition is <strong>RMSE (Root Mean Squared Error)</strong></p>\r\n                                            <p className = 'is-size-6' style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                <a href = 'https://drive.google.com/folderview?id=1jL3Wxi343ZISwlLX9tZj32kDK2v9Fj66' target = '_blank' rel = 'noreferrer noopener'>\r\n                                                    You can find sample datasets here\r\n                                                </a>\r\n                                            </p>\r\n                                            <hr/>\r\n                                            <p style = {{marginTop: '1rem'}}>\r\n                                                <strong className = 'is-size-5 has-text-danger'>\r\n                                                    Deep Learning\r\n                                                </strong>\r\n                                            </p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                You are given a large class of flowers, 102 to be precise. Build a flower classification model which\r\n                                                is discriminative between classes but can correctly classify all flower images belonging to the\r\n                                                same class. There are a total of 20549 (train + test) images of flowers. Predict the category of\r\n                                                the flowers present in the test folder with good accuracy.\r\n                                            </p>\r\n                                            <p style = {{margin: '10px 0px'}}>The data folder consists of 2 folders and 3 CSV files.</p>\r\n                                            <ul>\r\n                                                <li>● train - Contains 18540 images from 102 categories of flowers.</li>\r\n                                                <li>● test  - Contains 2009 images.</li>\r\n                                                <li>● train.csv - Contains 2 columns and 18541 rows (including the headers), which consists of image id and the true label for each of the images in the train folder.</li>\r\n                                                <li>● test.csv - Contains the image id for the images present in test folder for which the true label needs to be predicted.</li>\r\n                                            </ul>\r\n                                            <p className = 'is-size-6' style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                <a href = 'https://he-public-data.s3-ap-southeast-1.amazonaws.com/HE_Challenge_data.zip' rel = 'noreferrer noopener'>\r\n                                                    <span className = 'icon' style = {{position: 'relative', top: '1px', marginRight: '4px'}}>\r\n                                                        <FontAwesomeIcon icon = {faCloudDownloadAlt} />\r\n                                                    </span>\r\n                                                    Download dataset (905MB)\r\n                                                </a>\r\n                                            </p>\r\n                                            <hr/>\r\n                                            <p style = {{marginTop: '1rem'}}>\r\n                                                <strong className = 'is-size-5 has-text-danger'>\r\n                                                    Open innovation\r\n                                                </strong>\r\n                                            </p>\r\n                                            <p style = {{fontWeight: 'bold', margin: '1rem 0rem'}}>\r\n                                                You are welcome to submit a creative novel project of your own too, other than the above. Grab your Samhita '20 ticket and submit your project now!\r\n                                            </p>\r\n                                            <hr/>\r\n                                            <div className = 'has-text-centered'>\r\n                                                <a href = 'https://forms.gle/Lm7x9orkxTUeB1ny9' rel = 'noopener noreferrer'>\r\n                                                    <button className = 'button has-text-centered is-lato is-success is-rounded has-text-weight-semibold' onClick = {this.handleSubmit}>\r\n                                                        <span>Submit your solutions</span>\r\n                                                        <span className = 'icon'>\r\n                                                            <FontAwesomeIcon icon = {faUpload}/>\r\n                                                        </span>\r\n                                                    </button>\r\n                                                </a>\r\n                                            </div>\r\n                                        </Drawer>\r\n                                    </>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    avatar = {PaperPresentation} \r\n                                    title = 'Paper presentation' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    fullTime\r\n                                    size = {3}\r\n                                    description = \"Research is exploring the unexplored and presenting a whole phenomenal idea to the world. Come to Samhita '20 and present your innovative ideas and win prizes upto 5K!\"\r\n                                    // contactName = 'Sruthi'\r\n                                    // contactNumber = {<><a href = 'tel:+919840291913'>+91 9840291913</a></>} \r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• Paper must be in IEEE format.</li>\r\n                                            <li>• Papers must be submitted to <a href = 'mailto: papers@samhita.org.in'>papers@samhita.org.in</a> before 28/01/2020</li>\r\n                                            <li>• Mail should contain the unique Samhita ID received on purchase of Samhita '20 ticket.</li>\r\n                                            <li>• Plagiarism of any kind is strictly prohibited.</li>\r\n                                            <li style = {{marginTop: '10px'}}><strong>Note: One Samhita ticket is enough for participation of a team consisting three members. But only one certificate will be issued for the person who has purchased Samhita ticket (Certificate will contain the names of all three members). Seperate tickets should be bought for individual certificates.</strong></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    avatar = {HelloWorld} \r\n                                    title = '<Hello World/>' \r\n                                    date = {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    prelims = '9 AM - 12 PM'\r\n                                    finals = '1 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    onsite\r\n                                    description = \"For all the newcomers and rookies out there, Hello World is a special event for the first years. Start and build your career in programming here.\"\r\n                                    // contactName = 'Manoj Kumar'\r\n                                    // contactNumber = {<><a href = 'tel:+917448746107'>+91 7448746107</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Each team can comprise of maximum 2 members.</li>\r\n                                            <li>• Preliminary round: Paper based.</li>\r\n                                            <li>• Final round: Paper based.</li>\r\n                                            <li>• Any programming language can be used.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {OSPC} \r\n                                    title = 'OSPC (OnSite Programming Contest)' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'OSPC will test the proficiency in cracking logics, framing algorithms and data structures.'\r\n                                    // contactName = 'Durairaj'\r\n                                    // contactNumber = {<><a href = 'tel:+919487376430'>+91 9487376430</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• Each team can comprise a maximum of 2 members.</li>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• First round will be a pen and paper round.</li>\r\n                                            <li>• For the second round you will be asked to code on <a href = 'https://www.hackerrank.com/' target = '_blank' rel = 'noreferrer noopener'>hackerrank</a>.</li>\r\n                                            <li>• Every team must have an hackerrank account.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {Codegolfing} \r\n                                    title = 'Code Golfing' \r\n                                    date= {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    prelims = '9 AM - 12 PM'\r\n                                    finals = '1 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'The code with fewest amount of characters wins. The best solution is the one that has the fewest characters or fewest lines of code.'\r\n                                    // contactName = 'Manoj'\r\n                                    // contactNumber = {<><a href = 'tel:+918680919117'>+91 8680919117</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Each team can comprise a maximum of 2 members.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Paper based.</li>\r\n                                            <li>• Programming languages allowed: C, C++, C#, Java, HTML, Python, JavaScript, R, MATLAB.</li>\r\n                                            <li>• Internet access is not allowed.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {CodeObfus} \r\n                                    title = 'Code Obfuscation' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2}\r\n                                    description = 'The technique of making the code extremely hard to read by others is called Code Obfuscation.'\r\n                                    // contactName = 'Abinaya'\r\n                                    // contactNumber = {<><a href = 'tel:+917358803408'>+91 7358803408</a></>} \r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Each team can comprise a maximum of 2 members.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• Discussion of strategies or plagiarism of any kind will lead to disqualification.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {ReverseCoding} \r\n                                    title = 'Reverse Coding' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'Building the blocks backward. With the given input and the expected output, the code should be cracked. This event tests his/ her expertise in cracking patterns and rapid coding skills.'\r\n                                    // contactName = 'Ganesh Kumar'\r\n                                    // contactNumber = {<><a href = 'tel:+917845149635'>+91 7845149635</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Each team can comprise a maximum of 2 members.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• No use of any electronic gadgets.</li>\r\n                                            <li>• Any programming language can be used.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {TechTravel} \r\n                                    title = 'Tech Travel' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'To code a series of problems with a powerful competition. More the speed, Closer the win.'\r\n                                    // contactName = 'Mohamed Adhil'\r\n                                    // contactNumber = {<><a href = 'tel:+919952567290'>+91 9952567290</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be many connected paths of questions leading to a same destination.</li>\r\n                                            <li>• A candidate can choose any path to reach the final destination.</li>\r\n                                            <li>• Each node in the connected graph of questions, has a separate weightage.</li>\r\n                                            <li>• A candidate's total points is the highest aggregate of points along any path.</li>\r\n                                            <li>• There will be 2 rounds. First round is eliminative.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {UnboxImage} \r\n                                    title = 'Unbox' \r\n                                    date = {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    prelims = '9 AM - 12 PM'\r\n                                    finals = '1 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'Multiple choices to choose the problem. But with a twist of facing a penalty at the cost of the chosen problem being unsolved.'\r\n                                    // contactName = 'Sindhukavi'\r\n                                    // contactNumber = {<><a href = 'tel:+917305794164'>+91 7305794164</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• The candidate is allowed to swap upto 3 questions before answering one.</li>\r\n                                            <li>• Both rounds are a rolling event where each candidate maximum gets to unbox for not more than given time limit.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    avatar = {DcodeImage} \r\n                                    title = 'D-Code' \r\n                                    date = {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    prelims = '9 AM - 12 PM'\r\n                                    finals = '1 PM - 4:30 PM'\r\n                                    size = {2}\r\n                                    description = 'Breaking the security. This event tests the Cryptography and Security Skills of the participants.'\r\n                                    // contactName = 'Abarna'\r\n                                    // contactNumber = {<><a href = 'tel:+918610341976'>+91 8610341976</a></>} \r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Paper based.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite \r\n                                    \r\n                                    avatar = {AcidityImage} \r\n                                    title = 'Acidity' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'SQL queries, ER Diagrams, Normalisation and so forth.'\r\n                                    contactName = 'Sridharan'\r\n                                    contactNumber = {<><a href = 'tel:+918939195177'>+91 8939195177</a></>} \r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• Discussion of strategies or plagiarism of any kind will lead to disqualification.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    avatar = {OLPC} \r\n                                    title = 'OLPC (OnLine Programming Contest)' \r\n                                    size = 'Solo' \r\n                                    online\r\n                                    description = 'OLPC will test the proficiency in cracking logics, framing algorithms and data structures.'\r\n                                    // contactName = 'Pradeep'\r\n                                    // contactNumber = {<><a href = 'tel:+919092534794'>+91 9092534794</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be a single round.</li>\r\n                                            <li>• You will be asked to code on <a href = 'https://www.hackerrank.com/' target = '_blank' rel = 'noreferrer noopener'>hackerrank</a>.</li>\r\n                                            <li>• Every participant must have an hackerrank account.</li>\r\n                                            <li>• The time limit for the round is 2 hours.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite\r\n                                    avatar = {StreetCoding} \r\n                                    title = 'Street Coding' \r\n                                    date = {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    prelims = '9 AM - 12 PM'\r\n                                    finals = '1 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'Street coding will test the focus of the participants as they’ll be subjected to distractions in the environment.'\r\n                                    // contactName = 'Madhan'\r\n                                    // contactNumber = {<><a href = 'tel:+919994223635'>+91 9994223635</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary round: Paper based.</li>\r\n                                            <li>• Final round: Computer based.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    avatar = {WebDevImage} \r\n                                    title = 'Web Development' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = 'Solo' \r\n                                    description = 'Participants will be asked to create a web app or website for a given scenario in the final round. First round will test the participants’ basic knowledge about various web development frameworks and scripting languages.'\r\n                                    // contactName = 'Meena'\r\n                                    // contactNumber = {<><a href = 'tel:+919488085260'>+91 9488085260</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based (Multiple Choice Questions).</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite\r\n                                    avatar = {UIUXImage} \r\n                                    title = 'UI/UX Designing' \r\n                                    date = {<><span>1<sup>st</sup> February, 2020</span></>}\r\n                                    uxTime\r\n                                    size = 'Solo' \r\n                                    description = 'Participants will be asked to create UI/UX Front End Design for an app or a website for a given scenario.'\r\n                                    // contactName = 'Rajesh'\r\n                                    // contactNumber = {<><a href = 'tel:+917358345745'>+91 7358345745</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Online (Elimination).</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• Selected candidates should bring their own laptop to the final round along with necessary softwares (Photoshop, Illustrator, etc.).</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite\r\n                                    avatar = {PythoniteImage} \r\n                                    title = 'Pythonite' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'Pythonite will test the proficiency of the participants in the language of Python.'\r\n                                    // contactName = 'Ramya'\r\n                                    // contactNumber = {<><a href = 'tel:+919094599843'>+91 9094599843</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be a rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• Discussion of strategies or plagiarism of any kind will lead to disqualification.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                            <LazyLoadComponent>\r\n                                <Event \r\n                                    onsite\r\n                                    avatar = {CoffeeWithJavaImage} \r\n                                    title = 'Coffee with Java' \r\n                                    date = {<><span>31<sup>st</sup> January, 2020</span></>}\r\n                                    prelims = '9 AM - 1 PM'\r\n                                    finals = '2 PM - 4:30 PM'\r\n                                    size = {2} \r\n                                    description = 'This event will test the proficiency of the participants in the core concepts of Java and other associated frameworks.'\r\n                                    // contactName = 'Vinodhini'\r\n                                    // contactNumber = {<><a href = 'tel:+919941279491'>+91 9941279491</a></>}\r\n                                >\r\n                                    <div>\r\n                                        <ul>\r\n                                            <li>• There will be 2 rounds.</li>\r\n                                            <li>• Preliminary Round: Paper based.</li>\r\n                                            <li>• Final Round: Computer based.</li>\r\n                                            <li>• Discussion of strategies or plagiarism of any kind will lead to disqualification.</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </Event>\r\n                            </LazyLoadComponent>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Technical)"]},"metadata":{},"sourceType":"module"}