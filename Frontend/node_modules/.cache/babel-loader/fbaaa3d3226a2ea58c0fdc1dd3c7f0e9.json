{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Avatar from './Avatar';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    return {\n      shape: 'square'\n    };\n  }\n\n  return {\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = /*#__PURE__*/function (_React$Component) {\n  _inherits(Skeleton, _React$Component);\n\n  function Skeleton() {\n    var _this;\n\n    _classCallCheck(this, Skeleton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Skeleton).apply(this, arguments));\n\n    _this.renderSkeleton = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          loading = _this$props.loading,\n          className = _this$props.className,\n          children = _this$props.children,\n          avatar = _this$props.avatar,\n          title = _this$props.title,\n          paragraph = _this$props.paragraph,\n          active = _this$props.active;\n      var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n      if (loading || !('loading' in _this.props)) {\n        var _classNames;\n\n        var hasAvatar = !!avatar;\n        var hasTitle = !!title;\n        var hasParagraph = !!paragraph; // Avatar\n\n        var avatarNode;\n\n        if (hasAvatar) {\n          var avatarProps = _extends(_extends({\n            prefixCls: \"\".concat(prefixCls, \"-avatar\")\n          }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n\n          avatarNode = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-header\")\n          }, React.createElement(Avatar, avatarProps));\n        }\n\n        var contentNode;\n\n        if (hasTitle || hasParagraph) {\n          // Title\n          var $title;\n\n          if (hasTitle) {\n            var titleProps = _extends(_extends({\n              prefixCls: \"\".concat(prefixCls, \"-title\")\n            }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n            $title = React.createElement(Title, titleProps);\n          } // Paragraph\n\n\n          var paragraphNode;\n\n          if (hasParagraph) {\n            var paragraphProps = _extends(_extends({\n              prefixCls: \"\".concat(prefixCls, \"-paragraph\")\n            }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n            paragraphNode = React.createElement(Paragraph, paragraphProps);\n          }\n\n          contentNode = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-content\")\n          }, $title, paragraphNode);\n        }\n\n        var cls = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active\"), active), _classNames));\n        return React.createElement(\"div\", {\n          className: cls\n        }, avatarNode, contentNode);\n      }\n\n      return children;\n    };\n\n    return _this;\n  }\n\n  _createClass(Skeleton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSkeleton);\n    }\n  }]);\n\n  return Skeleton;\n}(React.Component);\n\nSkeleton.defaultProps = {\n  avatar: false,\n  title: true,\n  paragraph: true\n};\nexport default Skeleton;","map":{"version":3,"mappings":"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","names":["React","classNames","Avatar","Title","Paragraph","ConfigConsumer","getComponentProps","prop","_typeof","getAvatarBasicProps","hasTitle","hasParagraph","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","_classCallCheck","_this","arguments","renderSkeleton","getPrefixCls","props","customizePrefixCls","prefixCls","loading","className","children","avatar","title","paragraph","active","avatarNode","avatarProps","_extends","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","Component","defaultProps"],"sources":["skeleton/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport Avatar from './Avatar';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport { ConfigConsumer } from '../config-provider';\nfunction getComponentProps(prop) {\n    if (prop && typeof prop === 'object') {\n        return prop;\n    }\n    return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n    if (hasTitle && !hasParagraph) {\n        return { shape: 'square' };\n    }\n    return { shape: 'circle' };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n    if (!hasAvatar && hasParagraph) {\n        return { width: '38%' };\n    }\n    if (hasAvatar && hasParagraph) {\n        return { width: '50%' };\n    }\n    return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n    const basicProps = {};\n    // Width\n    if (!hasAvatar || !hasTitle) {\n        basicProps.width = '61%';\n    }\n    // Rows\n    if (!hasAvatar && hasTitle) {\n        basicProps.rows = 3;\n    }\n    else {\n        basicProps.rows = 2;\n    }\n    return basicProps;\n}\nclass Skeleton extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSkeleton = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, loading, className, children, avatar, title, paragraph, active, } = this.props;\n            const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n            if (loading || !('loading' in this.props)) {\n                const hasAvatar = !!avatar;\n                const hasTitle = !!title;\n                const hasParagraph = !!paragraph;\n                // Avatar\n                let avatarNode;\n                if (hasAvatar) {\n                    const avatarProps = Object.assign(Object.assign({ prefixCls: `${prefixCls}-avatar` }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n                    avatarNode = (<div className={`${prefixCls}-header`}>\n            <Avatar {...avatarProps}/>\n          </div>);\n                }\n                let contentNode;\n                if (hasTitle || hasParagraph) {\n                    // Title\n                    let $title;\n                    if (hasTitle) {\n                        const titleProps = Object.assign(Object.assign({ prefixCls: `${prefixCls}-title` }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n                        $title = <Title {...titleProps}/>;\n                    }\n                    // Paragraph\n                    let paragraphNode;\n                    if (hasParagraph) {\n                        const paragraphProps = Object.assign(Object.assign({ prefixCls: `${prefixCls}-paragraph` }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n                        paragraphNode = <Paragraph {...paragraphProps}/>;\n                    }\n                    contentNode = (<div className={`${prefixCls}-content`}>\n            {$title}\n            {paragraphNode}\n          </div>);\n                }\n                const cls = classNames(prefixCls, className, {\n                    [`${prefixCls}-with-avatar`]: hasAvatar,\n                    [`${prefixCls}-active`]: active,\n                });\n                return (<div className={cls}>\n          {avatarNode}\n          {contentNode}\n        </div>);\n            }\n            return children;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSkeleton}</ConfigConsumer>;\n    }\n}\nSkeleton.defaultProps = {\n    avatar: false,\n    title: true,\n    paragraph: true,\n};\nexport default Skeleton;\n"]},"metadata":{},"sourceType":"module"}