{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport PureRenderMixin from \"rc-util/es/PureRenderMixin\";\nimport Checkbox from '../checkbox';\nimport Search from './search';\nimport defaultRenderList, { OmitProps } from './renderListBody';\nimport triggerEvent from '../_util/triggerEvent';\n\nvar defaultRender = function defaultRender() {\n  return null;\n};\n\nfunction isRenderResultPlainObject(result) {\n  return result && !React.isValidElement(result) && Object.prototype.toString.call(result) === '[object Object]';\n}\n\nfunction renderListNode(renderList, props) {\n  var bodyContent = renderList ? renderList(props) : null;\n  var customize = !!bodyContent;\n\n  if (!customize) {\n    bodyContent = defaultRenderList(props);\n  }\n\n  return {\n    customize: customize,\n    bodyContent: bodyContent\n  };\n}\n\nvar TransferList = /*#__PURE__*/function (_React$Component) {\n  _inherits(TransferList, _React$Component);\n\n  function TransferList(props) {\n    var _this;\n\n    _classCallCheck(this, TransferList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferList).call(this, props));\n\n    _this.handleFilter = function (e) {\n      var handleFilter = _this.props.handleFilter;\n      var filterValue = e.target.value;\n\n      _this.setState({\n        filterValue: filterValue\n      });\n\n      handleFilter(e);\n\n      if (!filterValue) {\n        return;\n      } // Manually trigger scroll event for lazy search bug\n      // https://github.com/ant-design/ant-design/issues/5631\n\n\n      _this.triggerScrollTimer = window.setTimeout(function () {\n        var transferNode = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n        var listNode = transferNode.querySelectorAll('.ant-transfer-list-content')[0];\n\n        if (listNode) {\n          triggerEvent(listNode, 'scroll');\n        }\n      }, 0);\n    };\n\n    _this.handleClear = function () {\n      var handleClear = _this.props.handleClear;\n\n      _this.setState({\n        filterValue: ''\n      });\n\n      handleClear();\n    };\n\n    _this.matchFilter = function (text, item) {\n      var filterValue = _this.state.filterValue;\n      var filterOption = _this.props.filterOption;\n\n      if (filterOption) {\n        return filterOption(filterValue, item);\n      }\n\n      return text.indexOf(filterValue) >= 0;\n    };\n\n    _this.renderItem = function (item) {\n      var _this$props$render = _this.props.render,\n          render = _this$props$render === void 0 ? defaultRender : _this$props$render;\n      var renderResult = render(item);\n      var isRenderResultPlain = isRenderResultPlainObject(renderResult);\n      return {\n        renderedText: isRenderResultPlain ? renderResult.value : renderResult,\n        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n        item: item\n      };\n    };\n\n    _this.state = {\n      filterValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransferList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.triggerScrollTimer);\n    }\n  }, {\n    key: \"getCheckStatus\",\n    value: function getCheckStatus(filteredItems) {\n      var checkedKeys = this.props.checkedKeys;\n\n      if (checkedKeys.length === 0) {\n        return 'none';\n      }\n\n      if (filteredItems.every(function (item) {\n        return checkedKeys.indexOf(item.key) >= 0 || !!item.disabled;\n      })) {\n        return 'all';\n      }\n\n      return 'part';\n    }\n  }, {\n    key: \"getFilteredItems\",\n    value: function getFilteredItems(dataSource, filterValue) {\n      var _this2 = this;\n\n      var filteredItems = [];\n      var filteredRenderItems = [];\n      dataSource.forEach(function (item) {\n        var renderedItem = _this2.renderItem(item);\n\n        var renderedText = renderedItem.renderedText; // Filter skip\n\n        if (filterValue && filterValue.trim() && !_this2.matchFilter(renderedText, item)) {\n          return null;\n        }\n\n        filteredItems.push(item);\n        filteredRenderItems.push(renderedItem);\n      });\n      return {\n        filteredItems: filteredItems,\n        filteredRenderItems: filteredRenderItems\n      };\n    }\n  }, {\n    key: \"getListBody\",\n    value: function getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n      var search = showSearch ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-body-search-wrapper\")\n      }, React.createElement(Search, {\n        prefixCls: \"\".concat(prefixCls, \"-search\"),\n        onChange: this.handleFilter,\n        handleClear: this.handleClear,\n        placeholder: searchPlaceholder,\n        value: filterValue,\n        disabled: disabled\n      })) : null;\n      var listBody = bodyDom;\n\n      if (!listBody) {\n        var bodyNode;\n\n        var _renderListNode = renderListNode(renderList, _extends(_extends({}, omit(this.props, OmitProps)), {\n          filteredItems: filteredItems,\n          filteredRenderItems: filteredRenderItems,\n          selectedKeys: checkedKeys\n        })),\n            bodyContent = _renderListNode.bodyContent,\n            customize = _renderListNode.customize; // We should wrap customize list body in a classNamed div to use flex layout.\n\n\n        if (customize) {\n          bodyNode = React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-body-customize-wrapper\")\n          }, bodyContent);\n        } else {\n          bodyNode = filteredItems.length ? bodyContent : React.createElement(\"div\", {\n            className: \"\".concat(prefixCls, \"-body-not-found\")\n          }, notFoundContent);\n        }\n\n        listBody = React.createElement(\"div\", {\n          className: classNames(showSearch ? \"\".concat(prefixCls, \"-body \").concat(prefixCls, \"-body-with-search\") : \"\".concat(prefixCls, \"-body\"))\n        }, search, bodyNode);\n      }\n\n      return listBody;\n    }\n  }, {\n    key: \"getCheckBox\",\n    value: function getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled) {\n      var checkStatus = this.getCheckStatus(filteredItems);\n      var checkedAll = checkStatus === 'all';\n      var checkAllCheckbox = showSelectAll !== false && React.createElement(Checkbox, {\n        disabled: disabled,\n        checked: checkedAll,\n        indeterminate: checkStatus === 'part',\n        onChange: function onChange() {\n          // Only select enabled items\n          onItemSelectAll(filteredItems.filter(function (item) {\n            return !item.disabled;\n          }).map(function (_ref) {\n            var key = _ref.key;\n            return key;\n          }), !checkedAll);\n        }\n      });\n      return checkAllCheckbox;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filterValue = this.state.filterValue;\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          dataSource = _this$props.dataSource,\n          titleText = _this$props.titleText,\n          checkedKeys = _this$props.checkedKeys,\n          disabled = _this$props.disabled,\n          body = _this$props.body,\n          footer = _this$props.footer,\n          showSearch = _this$props.showSearch,\n          style = _this$props.style,\n          searchPlaceholder = _this$props.searchPlaceholder,\n          notFoundContent = _this$props.notFoundContent,\n          itemUnit = _this$props.itemUnit,\n          itemsUnit = _this$props.itemsUnit,\n          renderList = _this$props.renderList,\n          onItemSelectAll = _this$props.onItemSelectAll,\n          showSelectAll = _this$props.showSelectAll; // Custom Layout\n\n      var footerDom = footer && footer(this.props);\n      var bodyDom = body && body(this.props);\n      var listCls = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-with-footer\"), !!footerDom)); // ====================== Get filtered, checked item list ======================\n\n      var _this$getFilteredItem = this.getFilteredItems(dataSource, filterValue),\n          filteredItems = _this$getFilteredItem.filteredItems,\n          filteredRenderItems = _this$getFilteredItem.filteredRenderItems; // ================================= List Body =================================\n\n\n      var unit = dataSource.length > 1 ? itemsUnit : itemUnit;\n      var listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled); // ================================ List Footer ================================\n\n      var listFooter = footerDom ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-footer\")\n      }, footerDom) : null;\n      var checkAllCheckbox = this.getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled); // ================================== Render ===================================\n\n      return React.createElement(\"div\", {\n        className: listCls,\n        style: style\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, checkAllCheckbox, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-header-selected\")\n      }, React.createElement(\"span\", null, (checkedKeys.length > 0 ? \"\".concat(checkedKeys.length, \"/\") : '') + filteredItems.length, ' ', unit), React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-header-title\")\n      }, titleText))), listBody, listFooter);\n    }\n  }]);\n\n  return TransferList;\n}(React.Component);\n\nexport { TransferList as default };\nTransferList.defaultProps = {\n  dataSource: [],\n  titleText: '',\n  showSearch: false,\n  lazy: {}\n};","map":{"version":3,"mappings":"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","names":["React","ReactDOM","omit","classNames","PureRenderMixin","Checkbox","Search","defaultRenderList","OmitProps","triggerEvent","defaultRender","isRenderResultPlainObject","result","isValidElement","Object","prototype","toString","call","renderListNode","renderList","props","bodyContent","customize","TransferList","_classCallCheck","_this","handleFilter","e","filterValue","target","value","setState","triggerScrollTimer","window","setTimeout","transferNode","findDOMNode","listNode","querySelectorAll","handleClear","matchFilter","text","item","state","filterOption","indexOf","renderItem","render","renderResult","isRenderResultPlain","renderedText","renderedEl","label","args","arguments","shouldComponentUpdate","apply","clearTimeout","filteredItems","checkedKeys","length","every","key","disabled","dataSource","filteredRenderItems","forEach","renderedItem","_this2","trim","push","prefixCls","searchPlaceholder","notFoundContent","bodyDom","showSearch","search","className","onChange","placeholder","listBody","bodyNode","_extends","selectedKeys","onItemSelectAll","showSelectAll","checkStatus","getCheckStatus","checkedAll","checkAllCheckbox","checked","indeterminate","filter","map","titleText","body","footer","style","itemUnit","itemsUnit","footerDom","listCls","getFilteredItems","unit","getListBody","listFooter","getCheckBox","Component","defaultProps","lazy"],"sources":["transfer/list.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\nimport Checkbox from '../checkbox';\nimport Search from './search';\nimport defaultRenderList, { OmitProps } from './renderListBody';\nimport triggerEvent from '../_util/triggerEvent';\nconst defaultRender = () => null;\nfunction isRenderResultPlainObject(result) {\n    return (result &&\n        !React.isValidElement(result) &&\n        Object.prototype.toString.call(result) === '[object Object]');\n}\nfunction renderListNode(renderList, props) {\n    let bodyContent = renderList ? renderList(props) : null;\n    const customize = !!bodyContent;\n    if (!customize) {\n        bodyContent = defaultRenderList(props);\n    }\n    return {\n        customize,\n        bodyContent,\n    };\n}\nexport default class TransferList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFilter = (e) => {\n            const { handleFilter } = this.props;\n            const { target: { value: filterValue }, } = e;\n            this.setState({ filterValue });\n            handleFilter(e);\n            if (!filterValue) {\n                return;\n            }\n            // Manually trigger scroll event for lazy search bug\n            // https://github.com/ant-design/ant-design/issues/5631\n            this.triggerScrollTimer = window.setTimeout(() => {\n                const transferNode = ReactDOM.findDOMNode(this);\n                const listNode = transferNode.querySelectorAll('.ant-transfer-list-content')[0];\n                if (listNode) {\n                    triggerEvent(listNode, 'scroll');\n                }\n            }, 0);\n        };\n        this.handleClear = () => {\n            const { handleClear } = this.props;\n            this.setState({ filterValue: '' });\n            handleClear();\n        };\n        this.matchFilter = (text, item) => {\n            const { filterValue } = this.state;\n            const { filterOption } = this.props;\n            if (filterOption) {\n                return filterOption(filterValue, item);\n            }\n            return text.indexOf(filterValue) >= 0;\n        };\n        this.renderItem = (item) => {\n            const { render = defaultRender } = this.props;\n            const renderResult = render(item);\n            const isRenderResultPlain = isRenderResultPlainObject(renderResult);\n            return {\n                renderedText: isRenderResultPlain\n                    ? renderResult.value\n                    : renderResult,\n                renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n                item,\n            };\n        };\n        this.state = {\n            filterValue: '',\n        };\n    }\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n    componentWillUnmount() {\n        clearTimeout(this.triggerScrollTimer);\n    }\n    getCheckStatus(filteredItems) {\n        const { checkedKeys } = this.props;\n        if (checkedKeys.length === 0) {\n            return 'none';\n        }\n        if (filteredItems.every(item => checkedKeys.indexOf(item.key) >= 0 || !!item.disabled)) {\n            return 'all';\n        }\n        return 'part';\n    }\n    getFilteredItems(dataSource, filterValue) {\n        const filteredItems = [];\n        const filteredRenderItems = [];\n        dataSource.forEach(item => {\n            const renderedItem = this.renderItem(item);\n            const { renderedText } = renderedItem;\n            // Filter skip\n            if (filterValue && filterValue.trim() && !this.matchFilter(renderedText, item)) {\n                return null;\n            }\n            filteredItems.push(item);\n            filteredRenderItems.push(renderedItem);\n        });\n        return { filteredItems, filteredRenderItems };\n    }\n    getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n        const search = showSearch ? (<div className={`${prefixCls}-body-search-wrapper`}>\n        <Search prefixCls={`${prefixCls}-search`} onChange={this.handleFilter} handleClear={this.handleClear} placeholder={searchPlaceholder} value={filterValue} disabled={disabled}/>\n      </div>) : null;\n        let listBody = bodyDom;\n        if (!listBody) {\n            let bodyNode;\n            const { bodyContent, customize } = renderListNode(renderList, Object.assign(Object.assign({}, omit(this.props, OmitProps)), { filteredItems,\n                filteredRenderItems, selectedKeys: checkedKeys }));\n            // We should wrap customize list body in a classNamed div to use flex layout.\n            if (customize) {\n                bodyNode = <div className={`${prefixCls}-body-customize-wrapper`}>{bodyContent}</div>;\n            }\n            else {\n                bodyNode = filteredItems.length ? (bodyContent) : (<div className={`${prefixCls}-body-not-found`}>{notFoundContent}</div>);\n            }\n            listBody = (<div className={classNames(showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`)}>\n          {search}\n          {bodyNode}\n        </div>);\n        }\n        return listBody;\n    }\n    getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled) {\n        const checkStatus = this.getCheckStatus(filteredItems);\n        const checkedAll = checkStatus === 'all';\n        const checkAllCheckbox = showSelectAll !== false && (<Checkbox disabled={disabled} checked={checkedAll} indeterminate={checkStatus === 'part'} onChange={() => {\n            // Only select enabled items\n            onItemSelectAll(filteredItems.filter(item => !item.disabled).map(({ key }) => key), !checkedAll);\n        }}/>);\n        return checkAllCheckbox;\n    }\n    render() {\n        const { filterValue } = this.state;\n        const { prefixCls, dataSource, titleText, checkedKeys, disabled, body, footer, showSearch, style, searchPlaceholder, notFoundContent, itemUnit, itemsUnit, renderList, onItemSelectAll, showSelectAll, } = this.props;\n        // Custom Layout\n        const footerDom = footer && footer(this.props);\n        const bodyDom = body && body(this.props);\n        const listCls = classNames(prefixCls, {\n            [`${prefixCls}-with-footer`]: !!footerDom,\n        });\n        // ====================== Get filtered, checked item list ======================\n        const { filteredItems, filteredRenderItems } = this.getFilteredItems(dataSource, filterValue);\n        // ================================= List Body =================================\n        const unit = dataSource.length > 1 ? itemsUnit : itemUnit;\n        const listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);\n        // ================================ List Footer ================================\n        const listFooter = footerDom ? <div className={`${prefixCls}-footer`}>{footerDom}</div> : null;\n        const checkAllCheckbox = this.getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled);\n        // ================================== Render ===================================\n        return (<div className={listCls} style={style}>\n        \n        <div className={`${prefixCls}-header`}>\n          {checkAllCheckbox}\n          <span className={`${prefixCls}-header-selected`}>\n            <span>\n              {(checkedKeys.length > 0 ? `${checkedKeys.length}/` : '') + filteredItems.length}{' '}\n              {unit}\n            </span>\n            <span className={`${prefixCls}-header-title`}>{titleText}</span>\n          </span>\n        </div>\n\n        \n        {listBody}\n\n        \n        {listFooter}\n      </div>);\n    }\n}\nTransferList.defaultProps = {\n    dataSource: [],\n    titleText: '',\n    showSearch: false,\n    lazy: {},\n};\n"]},"metadata":{},"sourceType":"module"}