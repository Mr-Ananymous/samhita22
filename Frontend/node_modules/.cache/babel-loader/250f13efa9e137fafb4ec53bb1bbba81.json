{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nvar SpinSizes = tuple('small', 'default', 'large'); // Render indicator\n\nvar defaultIndicator = null;\n\nfunction renderIndicator(prefixCls, props) {\n  var indicator = props.indicator;\n  var dotClassName = \"\".concat(prefixCls, \"-dot\"); // should not be render default indicator when indicator value is null\n\n  if (indicator === null) {\n    return null;\n  }\n\n  if (React.isValidElement(indicator)) {\n    return React.cloneElement(indicator, {\n      className: classNames(indicator.props.className, dotClassName)\n    });\n  }\n\n  if (React.isValidElement(defaultIndicator)) {\n    return React.cloneElement(defaultIndicator, {\n      className: classNames(defaultIndicator.props.className, dotClassName)\n    });\n  }\n\n  return React.createElement(\"span\", {\n    className: classNames(dotClassName, \"\".concat(prefixCls, \"-dot-spin\"))\n  }, React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }));\n}\n\nfunction shouldDelay(spinning, delay) {\n  return !!spinning && !!delay && !isNaN(Number(delay));\n}\n\nvar Spin = /*#__PURE__*/function (_React$Component) {\n  _inherits(Spin, _React$Component);\n\n  function Spin(props) {\n    var _this;\n\n    _classCallCheck(this, Spin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spin).call(this, props));\n\n    _this.debouncifyUpdateSpinning = function (props) {\n      var _ref = props || _this.props,\n          delay = _ref.delay;\n\n      if (delay) {\n        _this.cancelExistingSpin();\n\n        _this.updateSpinning = debounce(_this.originalUpdateSpinning, delay);\n      }\n    };\n\n    _this.updateSpinning = function () {\n      var spinning = _this.props.spinning;\n      var currentSpinning = _this.state.spinning;\n\n      if (currentSpinning !== spinning) {\n        _this.setState({\n          spinning: spinning\n        });\n      }\n    };\n\n    _this.renderSpin = function (_ref2) {\n      var _classNames;\n\n      var getPrefixCls = _ref2.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          size = _a.size,\n          tip = _a.tip,\n          wrapperClassName = _a.wrapperClassName,\n          style = _a.style,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n\n      var spinning = _this.state.spinning;\n      var prefixCls = getPrefixCls('spin', customizePrefixCls);\n      var spinClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-spinning\"), spinning), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-text\"), !!tip), _classNames), className); // fix https://fb.me/react-unknown-prop\n\n      var divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n      var spinElement = React.createElement(\"div\", _extends({}, divProps, {\n        style: style,\n        className: spinClassName\n      }), renderIndicator(prefixCls, _this.props), tip ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-text\")\n      }, tip) : null);\n\n      if (_this.isNestedPattern()) {\n        var containerClassName = classNames(\"\".concat(prefixCls, \"-container\"), _defineProperty({}, \"\".concat(prefixCls, \"-blur\"), spinning));\n        return React.createElement(\"div\", _extends({}, divProps, {\n          className: classNames(\"\".concat(prefixCls, \"-nested-loading\"), wrapperClassName)\n        }), spinning && React.createElement(\"div\", {\n          key: \"loading\"\n        }, spinElement), React.createElement(\"div\", {\n          className: containerClassName,\n          key: \"container\"\n        }, _this.props.children));\n      }\n\n      return spinElement;\n    };\n\n    var spinning = props.spinning,\n        delay = props.delay;\n    var shouldBeDelayed = shouldDelay(spinning, delay);\n    _this.state = {\n      spinning: spinning && !shouldBeDelayed\n    };\n    _this.originalUpdateSpinning = _this.updateSpinning;\n\n    _this.debouncifyUpdateSpinning(props);\n\n    return _this;\n  }\n\n  _createClass(Spin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.debouncifyUpdateSpinning();\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelExistingSpin();\n    }\n  }, {\n    key: \"cancelExistingSpin\",\n    value: function cancelExistingSpin() {\n      var updateSpinning = this.updateSpinning;\n\n      if (updateSpinning && updateSpinning.cancel) {\n        updateSpinning.cancel();\n      }\n    }\n  }, {\n    key: \"isNestedPattern\",\n    value: function isNestedPattern() {\n      return !!(this.props && this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSpin);\n    }\n  }], [{\n    key: \"setDefaultIndicator\",\n    value: function setDefaultIndicator(indicator) {\n      defaultIndicator = indicator;\n    }\n  }]);\n\n  return Spin;\n}(React.Component);\n\nSpin.defaultProps = {\n  spinning: true,\n  size: 'default',\n  wrapperClassName: ''\n};\nSpin.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  spinning: PropTypes.bool,\n  size: PropTypes.oneOf(SpinSizes),\n  wrapperClassName: PropTypes.string,\n  indicator: PropTypes.element\n};\nexport default Spin;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","classNames","omit","debounce","ConfigConsumer","tuple","SpinSizes","defaultIndicator","renderIndicator","prefixCls","props","indicator","dotClassName","isValidElement","cloneElement","className","shouldDelay","spinning","delay","isNaN","Number","Spin","_classCallCheck","_this","debouncifyUpdateSpinning","cancelExistingSpin","updateSpinning","originalUpdateSpinning","currentSpinning","state","setState","renderSpin","getPrefixCls","customizePrefixCls","_a","size","tip","wrapperClassName","style","restProps","spinClassName","divProps","spinElement","isNestedPattern","containerClassName","key","children","shouldBeDelayed","cancel","Component","defaultProps","propTypes","string","bool","oneOf","element"],"sources":["spin/index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nconst SpinSizes = tuple('small', 'default', 'large');\n// Render indicator\nlet defaultIndicator = null;\nfunction renderIndicator(prefixCls, props) {\n    const { indicator } = props;\n    const dotClassName = `${prefixCls}-dot`;\n    // should not be render default indicator when indicator value is null\n    if (indicator === null) {\n        return null;\n    }\n    if (React.isValidElement(indicator)) {\n        return React.cloneElement(indicator, {\n            className: classNames(indicator.props.className, dotClassName),\n        });\n    }\n    if (React.isValidElement(defaultIndicator)) {\n        return React.cloneElement(defaultIndicator, {\n            className: classNames(defaultIndicator.props.className, dotClassName),\n        });\n    }\n    return (<span className={classNames(dotClassName, `${prefixCls}-dot-spin`)}>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n    </span>);\n}\nfunction shouldDelay(spinning, delay) {\n    return !!spinning && !!delay && !isNaN(Number(delay));\n}\nclass Spin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.debouncifyUpdateSpinning = (props) => {\n            const { delay } = props || this.props;\n            if (delay) {\n                this.cancelExistingSpin();\n                this.updateSpinning = debounce(this.originalUpdateSpinning, delay);\n            }\n        };\n        this.updateSpinning = () => {\n            const { spinning } = this.props;\n            const { spinning: currentSpinning } = this.state;\n            if (currentSpinning !== spinning) {\n                this.setState({ spinning });\n            }\n        };\n        this.renderSpin = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, size, tip, wrapperClassName, style } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n            const { spinning } = this.state;\n            const prefixCls = getPrefixCls('spin', customizePrefixCls);\n            const spinClassName = classNames(prefixCls, {\n                [`${prefixCls}-sm`]: size === 'small',\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-spinning`]: spinning,\n                [`${prefixCls}-show-text`]: !!tip,\n            }, className);\n            // fix https://fb.me/react-unknown-prop\n            const divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n            const spinElement = (<div {...divProps} style={style} className={spinClassName}>\n        {renderIndicator(prefixCls, this.props)}\n        {tip ? <div className={`${prefixCls}-text`}>{tip}</div> : null}\n      </div>);\n            if (this.isNestedPattern()) {\n                const containerClassName = classNames(`${prefixCls}-container`, {\n                    [`${prefixCls}-blur`]: spinning,\n                });\n                return (<div {...divProps} className={classNames(`${prefixCls}-nested-loading`, wrapperClassName)}>\n          {spinning && <div key=\"loading\">{spinElement}</div>}\n          <div className={containerClassName} key=\"container\">\n            {this.props.children}\n          </div>\n        </div>);\n            }\n            return spinElement;\n        };\n        const { spinning, delay } = props;\n        const shouldBeDelayed = shouldDelay(spinning, delay);\n        this.state = {\n            spinning: spinning && !shouldBeDelayed,\n        };\n        this.originalUpdateSpinning = this.updateSpinning;\n        this.debouncifyUpdateSpinning(props);\n    }\n    static setDefaultIndicator(indicator) {\n        defaultIndicator = indicator;\n    }\n    componentDidMount() {\n        this.updateSpinning();\n    }\n    componentDidUpdate() {\n        this.debouncifyUpdateSpinning();\n        this.updateSpinning();\n    }\n    componentWillUnmount() {\n        this.cancelExistingSpin();\n    }\n    cancelExistingSpin() {\n        const { updateSpinning } = this;\n        if (updateSpinning && updateSpinning.cancel) {\n            updateSpinning.cancel();\n        }\n    }\n    isNestedPattern() {\n        return !!(this.props && this.props.children);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSpin}</ConfigConsumer>;\n    }\n}\nSpin.defaultProps = {\n    spinning: true,\n    size: 'default',\n    wrapperClassName: '',\n};\nSpin.propTypes = {\n    prefixCls: PropTypes.string,\n    className: PropTypes.string,\n    spinning: PropTypes.bool,\n    size: PropTypes.oneOf(SpinSizes),\n    wrapperClassName: PropTypes.string,\n    indicator: PropTypes.element,\n};\nexport default Spin;\n"]},"metadata":{},"sourceType":"module"}