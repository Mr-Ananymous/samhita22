{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Menu, { SubMenu, Item as MenuItem } from 'rc-menu';\nimport closest from 'dom-closest';\nimport classNames from 'classnames';\nimport shallowequal from 'shallowequal';\nimport Dropdown from '../dropdown';\nimport Icon from '../icon';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport FilterDropdownMenuWrapper from './FilterDropdownMenuWrapper';\nimport { generateValueMaps } from './util';\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n\n  if (e.nativeEvent.stopImmediatePropagation) {\n    e.nativeEvent.stopImmediatePropagation();\n  }\n}\n\nvar FilterMenu = /*#__PURE__*/function (_React$Component) {\n  _inherits(FilterMenu, _React$Component);\n\n  function FilterMenu(props) {\n    var _this;\n\n    _classCallCheck(this, FilterMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterMenu).call(this, props));\n\n    _this.setNeverShown = function (column) {\n      var rootNode = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      var filterBelongToScrollBody = !!closest(rootNode, \".ant-table-scroll\");\n\n      if (filterBelongToScrollBody) {\n        // When fixed column have filters, there will be two dropdown menus\n        // Filter dropdown menu inside scroll body should never be shown\n        // To fix https://github.com/ant-design/ant-design/issues/5010 and\n        // https://github.com/ant-design/ant-design/issues/7909\n        _this.neverShown = !!column.fixed;\n      }\n    };\n\n    _this.setSelectedKeys = function (_ref) {\n      var selectedKeys = _ref.selectedKeys;\n\n      _this.setState({\n        selectedKeys: selectedKeys\n      });\n    };\n\n    _this.handleClearFilters = function () {\n      _this.setState({\n        selectedKeys: []\n      }, _this.handleConfirm);\n    };\n\n    _this.handleConfirm = function () {\n      _this.setVisible(false); // Call `setSelectedKeys` & `confirm` in the same time will make filter data not up to date\n      // https://github.com/ant-design/ant-design/issues/12284\n\n\n      _this.setState({}, _this.confirmFilter);\n    };\n\n    _this.onVisibleChange = function (visible) {\n      _this.setVisible(visible);\n\n      var column = _this.props.column; // https://github.com/ant-design/ant-design/issues/17833\n\n      if (!visible && !(column.filterDropdown instanceof Function)) {\n        _this.confirmFilter();\n      }\n    };\n\n    _this.handleMenuItemClick = function (info) {\n      var selectedKeys = _this.state.selectedKeys;\n\n      if (!info.keyPath || info.keyPath.length <= 1) {\n        return;\n      }\n\n      var keyPathOfSelectedItem = _this.state.keyPathOfSelectedItem;\n\n      if (selectedKeys && selectedKeys.indexOf(info.key) >= 0) {\n        // deselect SubMenu child\n        delete keyPathOfSelectedItem[info.key];\n      } else {\n        // select SubMenu child\n        keyPathOfSelectedItem[info.key] = info.keyPath;\n      }\n\n      _this.setState({\n        keyPathOfSelectedItem: keyPathOfSelectedItem\n      });\n    };\n\n    _this.renderFilterIcon = function () {\n      var _classNames;\n\n      var _this$props = _this.props,\n          column = _this$props.column,\n          locale = _this$props.locale,\n          prefixCls = _this$props.prefixCls,\n          selectedKeys = _this$props.selectedKeys;\n      var filtered = selectedKeys && selectedKeys.length > 0;\n      var filterIcon = column.filterIcon;\n\n      if (typeof filterIcon === 'function') {\n        filterIcon = filterIcon(filtered);\n      }\n\n      var dropdownIconClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-selected\"), filtered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-open\"), _this.getDropdownVisible()), _classNames));\n      return filterIcon ? React.cloneElement(filterIcon, {\n        title: locale.filterTitle,\n        className: classNames(\"\".concat(prefixCls, \"-icon\"), dropdownIconClass, filterIcon.props.className),\n        onClick: stopPropagation\n      }) : React.createElement(Icon, {\n        title: locale.filterTitle,\n        type: \"filter\",\n        theme: \"filled\",\n        className: dropdownIconClass,\n        onClick: stopPropagation\n      });\n    };\n\n    var visible = 'filterDropdownVisible' in props.column ? props.column.filterDropdownVisible : false;\n    _this.state = {\n      selectedKeys: props.selectedKeys,\n      valueKeys: generateValueMaps(props.column.filters),\n      keyPathOfSelectedItem: {},\n      visible: visible,\n      prevProps: props\n    };\n    return _this;\n  }\n\n  _createClass(FilterMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var column = this.props.column;\n      this.setNeverShown(column);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var column = this.props.column;\n      this.setNeverShown(column);\n    }\n  }, {\n    key: \"getDropdownVisible\",\n    value: function getDropdownVisible() {\n      return this.neverShown ? false : this.state.visible;\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      var column = this.props.column;\n\n      if (!('filterDropdownVisible' in column)) {\n        this.setState({\n          visible: visible\n        });\n      }\n\n      if (column.onFilterDropdownVisibleChange) {\n        column.onFilterDropdownVisibleChange(visible);\n      }\n    }\n  }, {\n    key: \"hasSubMenu\",\n    value: function hasSubMenu() {\n      var _this$props$column$fi = this.props.column.filters,\n          filters = _this$props$column$fi === void 0 ? [] : _this$props$column$fi;\n      return filters.some(function (item) {\n        return !!(item.children && item.children.length > 0);\n      });\n    }\n  }, {\n    key: \"confirmFilter\",\n    value: function confirmFilter() {\n      var _this$props2 = this.props,\n          column = _this$props2.column,\n          propSelectedKeys = _this$props2.selectedKeys,\n          confirmFilter = _this$props2.confirmFilter;\n      var _this$state = this.state,\n          selectedKeys = _this$state.selectedKeys,\n          valueKeys = _this$state.valueKeys;\n      var filterDropdown = column.filterDropdown;\n\n      if (!shallowequal(selectedKeys, propSelectedKeys)) {\n        confirmFilter(column, filterDropdown ? selectedKeys : selectedKeys.map(function (key) {\n          return valueKeys[key];\n        }).filter(function (key) {\n          return key !== undefined;\n        }));\n      }\n    }\n  }, {\n    key: \"renderMenus\",\n    value: function renderMenus(items) {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          dropdownPrefixCls = _this$props3.dropdownPrefixCls,\n          prefixCls = _this$props3.prefixCls;\n      return items.map(function (item) {\n        if (item.children && item.children.length > 0) {\n          var keyPathOfSelectedItem = _this2.state.keyPathOfSelectedItem;\n          var containSelected = Object.keys(keyPathOfSelectedItem).some(function (key) {\n            return keyPathOfSelectedItem[key].indexOf(item.value) >= 0;\n          });\n          var subMenuCls = classNames(\"\".concat(prefixCls, \"-dropdown-submenu\"), _defineProperty({}, \"\".concat(dropdownPrefixCls, \"-submenu-contain-selected\"), containSelected));\n          return React.createElement(SubMenu, {\n            title: item.text,\n            popupClassName: subMenuCls,\n            key: item.value.toString()\n          }, _this2.renderMenus(item.children));\n        }\n\n        return _this2.renderMenuItem(item);\n      });\n    }\n  }, {\n    key: \"renderMenuItem\",\n    value: function renderMenuItem(item) {\n      var column = this.props.column;\n      var selectedKeys = this.state.selectedKeys;\n      var multiple = 'filterMultiple' in column ? column.filterMultiple : true; // We still need trade key as string since Menu render need string\n\n      var internalSelectedKeys = (selectedKeys || []).map(function (key) {\n        return key.toString();\n      });\n      var input = multiple ? React.createElement(Checkbox, {\n        checked: internalSelectedKeys.indexOf(item.value.toString()) >= 0\n      }) : React.createElement(Radio, {\n        checked: internalSelectedKeys.indexOf(item.value.toString()) >= 0\n      });\n      return React.createElement(MenuItem, {\n        key: item.value\n      }, input, React.createElement(\"span\", null, item.text));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var originSelectedKeys = this.state.selectedKeys;\n      var _this$props4 = this.props,\n          column = _this$props4.column,\n          locale = _this$props4.locale,\n          prefixCls = _this$props4.prefixCls,\n          dropdownPrefixCls = _this$props4.dropdownPrefixCls,\n          getPopupContainer = _this$props4.getPopupContainer; // default multiple selection in filter dropdown\n\n      var multiple = 'filterMultiple' in column ? column.filterMultiple : true;\n      var dropdownMenuClass = classNames(_defineProperty({}, \"\".concat(dropdownPrefixCls, \"-menu-without-submenu\"), !this.hasSubMenu()));\n      var filterDropdown = column.filterDropdown;\n\n      if (filterDropdown instanceof Function) {\n        filterDropdown = filterDropdown({\n          prefixCls: \"\".concat(dropdownPrefixCls, \"-custom\"),\n          setSelectedKeys: function setSelectedKeys(selectedKeys) {\n            return _this3.setSelectedKeys({\n              selectedKeys: selectedKeys\n            });\n          },\n          selectedKeys: originSelectedKeys,\n          confirm: this.handleConfirm,\n          clearFilters: this.handleClearFilters,\n          filters: column.filters,\n          visible: this.getDropdownVisible()\n        });\n      }\n\n      var menus = filterDropdown ? React.createElement(FilterDropdownMenuWrapper, {\n        className: \"\".concat(prefixCls, \"-dropdown\")\n      }, filterDropdown) : React.createElement(FilterDropdownMenuWrapper, {\n        className: \"\".concat(prefixCls, \"-dropdown\")\n      }, React.createElement(Menu, {\n        multiple: multiple,\n        onClick: this.handleMenuItemClick,\n        prefixCls: \"\".concat(dropdownPrefixCls, \"-menu\"),\n        className: dropdownMenuClass,\n        onSelect: this.setSelectedKeys,\n        onDeselect: this.setSelectedKeys,\n        selectedKeys: originSelectedKeys && originSelectedKeys.map(function (val) {\n          return val.toString();\n        }),\n        getPopupContainer: getPopupContainer\n      }, this.renderMenus(column.filters)), React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-dropdown-btns\")\n      }, React.createElement(\"a\", {\n        className: \"\".concat(prefixCls, \"-dropdown-link confirm\"),\n        onClick: this.handleConfirm\n      }, locale.filterConfirm), React.createElement(\"a\", {\n        className: \"\".concat(prefixCls, \"-dropdown-link clear\"),\n        onClick: this.handleClearFilters\n      }, locale.filterReset)));\n      return React.createElement(Dropdown, {\n        trigger: ['click'],\n        placement: \"bottomRight\",\n        overlay: menus,\n        visible: this.getDropdownVisible(),\n        onVisibleChange: this.onVisibleChange,\n        getPopupContainer: getPopupContainer,\n        forceRender: true\n      }, this.renderFilterIcon());\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var column = nextProps.column;\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: nextProps\n      };\n      /**\n       * if the state is visible the component should ignore updates on selectedKeys prop to avoid\n       * that the user selection is lost\n       * this happens frequently when a table is connected on some sort of realtime data\n       * Fixes https://github.com/ant-design/ant-design/issues/10289 and\n       * https://github.com/ant-design/ant-design/issues/10209\n       */\n\n      if ('selectedKeys' in nextProps && !shallowequal(prevProps.selectedKeys, nextProps.selectedKeys)) {\n        newState.selectedKeys = nextProps.selectedKeys;\n      }\n\n      if (!shallowequal((prevProps.column || {}).filters, (nextProps.column || {}).filters)) {\n        newState.valueKeys = generateValueMaps(nextProps.column.filters);\n      }\n\n      if ('filterDropdownVisible' in column) {\n        newState.visible = column.filterDropdownVisible;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return FilterMenu;\n}(React.Component);\n\nFilterMenu.defaultProps = {\n  column: {}\n};\npolyfill(FilterMenu);\nexport default FilterMenu;","map":{"version":3,"mappings":"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","names":["React","ReactDOM","polyfill","Menu","SubMenu","Item","MenuItem","closest","classNames","shallowequal","Dropdown","Icon","Checkbox","Radio","FilterDropdownMenuWrapper","generateValueMaps","stopPropagation","e","nativeEvent","stopImmediatePropagation","FilterMenu","props","_classCallCheck","_this","setNeverShown","column","rootNode","findDOMNode","filterBelongToScrollBody","neverShown","fixed","setSelectedKeys","selectedKeys","setState","handleClearFilters","handleConfirm","setVisible","confirmFilter","onVisibleChange","visible","filterDropdown","Function","handleMenuItemClick","info","state","keyPath","length","keyPathOfSelectedItem","indexOf","key","renderFilterIcon","locale","prefixCls","filtered","filterIcon","dropdownIconClass","getDropdownVisible","cloneElement","title","filterTitle","className","onClick","type","theme","filterDropdownVisible","valueKeys","filters","prevProps","onFilterDropdownVisibleChange","some","item","children","propSelectedKeys","map","filter","undefined","items","dropdownPrefixCls","_this2","containSelected","Object","keys","value","subMenuCls","text","popupClassName","toString","renderMenus","renderMenuItem","multiple","filterMultiple","internalSelectedKeys","input","checked","originSelectedKeys","getPopupContainer","dropdownMenuClass","hasSubMenu","_this3","confirm","clearFilters","menus","onSelect","onDeselect","val","filterConfirm","filterReset","trigger","placement","overlay","forceRender","nextProps","prevState","newState","Component","defaultProps"],"sources":["table/filterDropdown.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Menu, { SubMenu, Item as MenuItem } from 'rc-menu';\nimport closest from 'dom-closest';\nimport classNames from 'classnames';\nimport shallowequal from 'shallowequal';\nimport Dropdown from '../dropdown';\nimport Icon from '../icon';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport FilterDropdownMenuWrapper from './FilterDropdownMenuWrapper';\nimport { generateValueMaps } from './util';\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nclass FilterMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setNeverShown = (column) => {\n            const rootNode = ReactDOM.findDOMNode(this);\n            const filterBelongToScrollBody = !!closest(rootNode, `.ant-table-scroll`);\n            if (filterBelongToScrollBody) {\n                // When fixed column have filters, there will be two dropdown menus\n                // Filter dropdown menu inside scroll body should never be shown\n                // To fix https://github.com/ant-design/ant-design/issues/5010 and\n                // https://github.com/ant-design/ant-design/issues/7909\n                this.neverShown = !!column.fixed;\n            }\n        };\n        this.setSelectedKeys = ({ selectedKeys }) => {\n            this.setState({ selectedKeys: selectedKeys });\n        };\n        this.handleClearFilters = () => {\n            this.setState({\n                selectedKeys: [],\n            }, this.handleConfirm);\n        };\n        this.handleConfirm = () => {\n            this.setVisible(false);\n            // Call `setSelectedKeys` & `confirm` in the same time will make filter data not up to date\n            // https://github.com/ant-design/ant-design/issues/12284\n            this.setState({}, this.confirmFilter);\n        };\n        this.onVisibleChange = (visible) => {\n            this.setVisible(visible);\n            const { column } = this.props;\n            // https://github.com/ant-design/ant-design/issues/17833\n            if (!visible && !(column.filterDropdown instanceof Function)) {\n                this.confirmFilter();\n            }\n        };\n        this.handleMenuItemClick = (info) => {\n            const { selectedKeys } = this.state;\n            if (!info.keyPath || info.keyPath.length <= 1) {\n                return;\n            }\n            const { keyPathOfSelectedItem } = this.state;\n            if (selectedKeys && selectedKeys.indexOf(info.key) >= 0) {\n                // deselect SubMenu child\n                delete keyPathOfSelectedItem[info.key];\n            }\n            else {\n                // select SubMenu child\n                keyPathOfSelectedItem[info.key] = info.keyPath;\n            }\n            this.setState({ keyPathOfSelectedItem });\n        };\n        this.renderFilterIcon = () => {\n            const { column, locale, prefixCls, selectedKeys } = this.props;\n            const filtered = selectedKeys && selectedKeys.length > 0;\n            let filterIcon = column.filterIcon;\n            if (typeof filterIcon === 'function') {\n                filterIcon = filterIcon(filtered);\n            }\n            const dropdownIconClass = classNames({\n                [`${prefixCls}-selected`]: filtered,\n                [`${prefixCls}-open`]: this.getDropdownVisible(),\n            });\n            return filterIcon ? (React.cloneElement(filterIcon, {\n                title: locale.filterTitle,\n                className: classNames(`${prefixCls}-icon`, dropdownIconClass, filterIcon.props.className),\n                onClick: stopPropagation,\n            })) : (<Icon title={locale.filterTitle} type=\"filter\" theme=\"filled\" className={dropdownIconClass} onClick={stopPropagation}/>);\n        };\n        const visible = 'filterDropdownVisible' in props.column ? props.column.filterDropdownVisible : false;\n        this.state = {\n            selectedKeys: props.selectedKeys,\n            valueKeys: generateValueMaps(props.column.filters),\n            keyPathOfSelectedItem: {},\n            visible,\n            prevProps: props,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { column } = nextProps;\n        const { prevProps } = prevState;\n        const newState = {\n            prevProps: nextProps,\n        };\n        /**\n         * if the state is visible the component should ignore updates on selectedKeys prop to avoid\n         * that the user selection is lost\n         * this happens frequently when a table is connected on some sort of realtime data\n         * Fixes https://github.com/ant-design/ant-design/issues/10289 and\n         * https://github.com/ant-design/ant-design/issues/10209\n         */\n        if ('selectedKeys' in nextProps &&\n            !shallowequal(prevProps.selectedKeys, nextProps.selectedKeys)) {\n            newState.selectedKeys = nextProps.selectedKeys;\n        }\n        if (!shallowequal((prevProps.column || {}).filters, (nextProps.column || {}).filters)) {\n            newState.valueKeys = generateValueMaps(nextProps.column.filters);\n        }\n        if ('filterDropdownVisible' in column) {\n            newState.visible = column.filterDropdownVisible;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.setNeverShown(column);\n    }\n    componentDidUpdate() {\n        const { column } = this.props;\n        this.setNeverShown(column);\n    }\n    getDropdownVisible() {\n        return this.neverShown ? false : this.state.visible;\n    }\n    setVisible(visible) {\n        const { column } = this.props;\n        if (!('filterDropdownVisible' in column)) {\n            this.setState({ visible });\n        }\n        if (column.onFilterDropdownVisibleChange) {\n            column.onFilterDropdownVisibleChange(visible);\n        }\n    }\n    hasSubMenu() {\n        const { column: { filters = [] }, } = this.props;\n        return filters.some(item => !!(item.children && item.children.length > 0));\n    }\n    confirmFilter() {\n        const { column, selectedKeys: propSelectedKeys, confirmFilter } = this.props;\n        const { selectedKeys, valueKeys } = this.state;\n        const { filterDropdown } = column;\n        if (!shallowequal(selectedKeys, propSelectedKeys)) {\n            confirmFilter(column, filterDropdown\n                ? selectedKeys\n                : selectedKeys.map(key => valueKeys[key]).filter(key => key !== undefined));\n        }\n    }\n    renderMenus(items) {\n        const { dropdownPrefixCls, prefixCls } = this.props;\n        return items.map(item => {\n            if (item.children && item.children.length > 0) {\n                const { keyPathOfSelectedItem } = this.state;\n                const containSelected = Object.keys(keyPathOfSelectedItem).some(key => keyPathOfSelectedItem[key].indexOf(item.value) >= 0);\n                const subMenuCls = classNames(`${prefixCls}-dropdown-submenu`, {\n                    [`${dropdownPrefixCls}-submenu-contain-selected`]: containSelected,\n                });\n                return (<SubMenu title={item.text} popupClassName={subMenuCls} key={item.value.toString()}>\n            {this.renderMenus(item.children)}\n          </SubMenu>);\n            }\n            return this.renderMenuItem(item);\n        });\n    }\n    renderMenuItem(item) {\n        const { column } = this.props;\n        const { selectedKeys } = this.state;\n        const multiple = 'filterMultiple' in column ? column.filterMultiple : true;\n        // We still need trade key as string since Menu render need string\n        const internalSelectedKeys = (selectedKeys || []).map(key => key.toString());\n        const input = multiple ? (<Checkbox checked={internalSelectedKeys.indexOf(item.value.toString()) >= 0}/>) : (<Radio checked={internalSelectedKeys.indexOf(item.value.toString()) >= 0}/>);\n        return (<MenuItem key={item.value}>\n        {input}\n        <span>{item.text}</span>\n      </MenuItem>);\n    }\n    render() {\n        const { selectedKeys: originSelectedKeys } = this.state;\n        const { column, locale, prefixCls, dropdownPrefixCls, getPopupContainer } = this.props;\n        // default multiple selection in filter dropdown\n        const multiple = 'filterMultiple' in column ? column.filterMultiple : true;\n        const dropdownMenuClass = classNames({\n            [`${dropdownPrefixCls}-menu-without-submenu`]: !this.hasSubMenu(),\n        });\n        let { filterDropdown } = column;\n        if (filterDropdown instanceof Function) {\n            filterDropdown = filterDropdown({\n                prefixCls: `${dropdownPrefixCls}-custom`,\n                setSelectedKeys: (selectedKeys) => this.setSelectedKeys({ selectedKeys }),\n                selectedKeys: originSelectedKeys,\n                confirm: this.handleConfirm,\n                clearFilters: this.handleClearFilters,\n                filters: column.filters,\n                visible: this.getDropdownVisible(),\n            });\n        }\n        const menus = filterDropdown ? (<FilterDropdownMenuWrapper className={`${prefixCls}-dropdown`}>\n        {filterDropdown}\n      </FilterDropdownMenuWrapper>) : (<FilterDropdownMenuWrapper className={`${prefixCls}-dropdown`}>\n        <Menu multiple={multiple} onClick={this.handleMenuItemClick} prefixCls={`${dropdownPrefixCls}-menu`} className={dropdownMenuClass} onSelect={this.setSelectedKeys} onDeselect={this.setSelectedKeys} selectedKeys={originSelectedKeys && originSelectedKeys.map(val => val.toString())} getPopupContainer={getPopupContainer}>\n          {this.renderMenus(column.filters)}\n        </Menu>\n        <div className={`${prefixCls}-dropdown-btns`}>\n          <a className={`${prefixCls}-dropdown-link confirm`} onClick={this.handleConfirm}>\n            {locale.filterConfirm}\n          </a>\n          <a className={`${prefixCls}-dropdown-link clear`} onClick={this.handleClearFilters}>\n            {locale.filterReset}\n          </a>\n        </div>\n      </FilterDropdownMenuWrapper>);\n        return (<Dropdown trigger={['click']} placement=\"bottomRight\" overlay={menus} visible={this.getDropdownVisible()} onVisibleChange={this.onVisibleChange} getPopupContainer={getPopupContainer} forceRender>\n        {this.renderFilterIcon()}\n      </Dropdown>);\n    }\n}\nFilterMenu.defaultProps = {\n    column: {},\n};\npolyfill(FilterMenu);\nexport default FilterMenu;\n"]},"metadata":{},"sourceType":"module"}