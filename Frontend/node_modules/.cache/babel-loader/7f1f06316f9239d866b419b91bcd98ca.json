{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Modal, { destroyFns } from './Modal';\nimport confirm from './confirm';\nimport Icon from '../icon';\n\nfunction modalWarn(props) {\n  var config = _extends({\n    type: 'warning',\n    icon: React.createElement(Icon, {\n      type: \"exclamation-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n}\n\nModal.info = function infoFn(props) {\n  var config = _extends({\n    type: 'info',\n    icon: React.createElement(Icon, {\n      type: \"info-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.success = function successFn(props) {\n  var config = _extends({\n    type: 'success',\n    icon: React.createElement(Icon, {\n      type: \"check-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.error = function errorFn(props) {\n  var config = _extends({\n    type: 'error',\n    icon: React.createElement(Icon, {\n      type: \"close-circle\"\n    }),\n    okCancel: false\n  }, props);\n\n  return confirm(config);\n};\n\nModal.warning = modalWarn;\nModal.warn = modalWarn;\n\nModal.confirm = function confirmFn(props) {\n  var config = _extends({\n    type: 'confirm',\n    okCancel: true\n  }, props);\n\n  return confirm(config);\n};\n\nModal.destroyAll = function destroyAllFn() {\n  while (destroyFns.length) {\n    var close = destroyFns.pop();\n\n    if (close) {\n      close();\n    }\n  }\n};\n\nexport default Modal;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,SAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAMC,MAAM,GAAGC,SAAc;AAAEC,QAAI,EAAE,SAAR;AAAmBC,QAAI,EAAEV,oBAACI,IAAD;AAAMK,UAAI,EAAC;AAAX,MAAzB;AAA4DE,YAAQ,EAAE;AAAtE,GAAd,EAA6FL,KAA7F,CAAf;;AACA,SAAOH,OAAO,CAACI,MAAD,CAAd;AACH;;AACDN,KAAK,CAACW,IAANX,GAAa,SAASY,MAAT,CAAgBP,KAAhB,EAAuB;AAChC,MAAMC,MAAM,GAAGC,SAAc;AAAEC,QAAI,EAAE,MAAR;AAAgBC,QAAI,EAAEV,oBAACI,IAAD;AAAMK,UAAI,EAAC;AAAX,MAAtB;AAAkDE,YAAQ,EAAE;AAA5D,GAAd,EAAmFL,KAAnF,CAAf;;AACA,SAAOH,OAAO,CAACI,MAAD,CAAd;AAFJ;;AAIAN,KAAK,CAACa,OAANb,GAAgB,SAASc,SAAT,CAAmBT,KAAnB,EAA0B;AACtC,MAAMC,MAAM,GAAGC,SAAc;AAAEC,QAAI,EAAE,SAAR;AAAmBC,QAAI,EAAEV,oBAACI,IAAD;AAAMK,UAAI,EAAC;AAAX,MAAzB;AAAsDE,YAAQ,EAAE;AAAhE,GAAd,EAAuFL,KAAvF,CAAf;;AACA,SAAOH,OAAO,CAACI,MAAD,CAAd;AAFJ;;AAIAN,KAAK,CAACe,KAANf,GAAc,SAASgB,OAAT,CAAiBX,KAAjB,EAAwB;AAClC,MAAMC,MAAM,GAAGC,SAAc;AAAEC,QAAI,EAAE,OAAR;AAAiBC,QAAI,EAAEV,oBAACI,IAAD;AAAMK,UAAI,EAAC;AAAX,MAAvB;AAAoDE,YAAQ,EAAE;AAA9D,GAAd,EAAqFL,KAArF,CAAf;;AACA,SAAOH,OAAO,CAACI,MAAD,CAAd;AAFJ;;AAIAN,KAAK,CAACiB,OAANjB,GAAgBI,SAAhBJ;AACAA,KAAK,CAACkB,IAANlB,GAAaI,SAAbJ;;AACAA,KAAK,CAACE,OAANF,GAAgB,SAASmB,SAAT,CAAmBd,KAAnB,EAA0B;AACtC,MAAMC,MAAM,GAAGC,SAAc;AAAEC,QAAI,EAAE,SAAR;AAAmBE,YAAQ,EAAE;AAA7B,GAAd,EAAmDL,KAAnD,CAAf;;AACA,SAAOH,OAAO,CAACI,MAAD,CAAd;AAFJ;;AAIAN,KAAK,CAACoB,UAANpB,GAAmB,SAASqB,YAAT,GAAwB;AACvC,SAAOpB,UAAU,CAACqB,MAAlB,EAA0B;AACtB,QAAMC,KAAK,GAAGtB,UAAU,CAACuB,GAAXvB,EAAd;;AACA,QAAIsB,KAAJ,EAAW;AACPA,WAAK;AACR;AACJ;AANL;;AAQA,eAAevB,KAAf","names":["React","Modal","destroyFns","confirm","Icon","modalWarn","props","config","_extends","type","icon","okCancel","info","infoFn","success","successFn","error","errorFn","warning","warn","confirmFn","destroyAll","destroyAllFn","length","close","pop"],"sources":["modal/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport Modal, { destroyFns } from './Modal';\nimport confirm from './confirm';\nimport Icon from '../icon';\nfunction modalWarn(props) {\n    const config = Object.assign({ type: 'warning', icon: <Icon type=\"exclamation-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n}\nModal.info = function infoFn(props) {\n    const config = Object.assign({ type: 'info', icon: <Icon type=\"info-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.success = function successFn(props) {\n    const config = Object.assign({ type: 'success', icon: <Icon type=\"check-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.error = function errorFn(props) {\n    const config = Object.assign({ type: 'error', icon: <Icon type=\"close-circle\"/>, okCancel: false }, props);\n    return confirm(config);\n};\nModal.warning = modalWarn;\nModal.warn = modalWarn;\nModal.confirm = function confirmFn(props) {\n    const config = Object.assign({ type: 'confirm', okCancel: true }, props);\n    return confirm(config);\n};\nModal.destroyAll = function destroyAllFn() {\n    while (destroyFns.length) {\n        const close = destroyFns.pop();\n        if (close) {\n            close();\n        }\n    }\n};\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}