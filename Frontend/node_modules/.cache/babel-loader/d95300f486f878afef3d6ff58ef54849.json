{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar SkeletonAvatar = /*#__PURE__*/function (_React$Component) {\n  _inherits(SkeletonAvatar, _React$Component);\n\n  function SkeletonAvatar() {\n    _classCallCheck(this, SkeletonAvatar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SkeletonAvatar).apply(this, arguments));\n  }\n\n  _createClass(SkeletonAvatar, [{\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2;\n\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          style = _this$props.style,\n          size = _this$props.size,\n          shape = _this$props.shape;\n      var sizeCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _classNames));\n      var shapeCls = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-circle\"), shape === 'circle'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-square\"), shape === 'square'), _classNames2));\n      var sizeStyle = typeof size === 'number' ? {\n        width: size,\n        height: size,\n        lineHeight: \"\".concat(size, \"px\")\n      } : {};\n      return React.createElement(\"span\", {\n        className: classNames(prefixCls, className, sizeCls, shapeCls),\n        style: _extends(_extends({}, sizeStyle), style)\n      });\n    }\n  }]);\n\n  return SkeletonAvatar;\n}(React.Component);\n\nSkeletonAvatar.defaultProps = {\n  size: 'large'\n};\nexport default SkeletonAvatar;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;IACMC,c;;;;;;;;;;;6BACO;AAAA;;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAAA,UACgCC,IADhC,eACgCA,IADhC;AAAA,UACsCC,KADtC,eACsCA,KADtC;AAEL,UAAMC,OAAO,GAAGR,UAAU,2DAClBG,SADkB,UACDG,IAAI,KAAK,OADR,0CAElBH,SAFkB,UAEDG,IAAI,KAAK,OAFR,gBAA1B;AAIA,UAAMG,QAAQ,GAAGT,UAAU,6DACnBG,SADmB,cACEI,KAAK,KAAK,QADZ,2CAEnBJ,SAFmB,cAEEI,KAAK,KAAK,QAFZ,iBAA3B;AAIA,UAAMG,SAAS,GAAG,OAAOJ,IAAP,KAAgB,QAAhB,GACZ;AACEK,aAAK,EAAEL,IADT;AAEEM,cAAM,EAAEN,IAFV;AAGEO,kBAAU,YAAKP,IAAL;AAHZ,OADY,GAMZ,EANN;AAOA,aAAQP;AAAMK,iBAAS,EAAEJ,UAAU,CAACG,SAAD,EAAYC,SAAZ,EAAuBI,OAAvB,EAAgCC,QAAhC,CAA3B;AAAsEJ,aAAK,EAAES,SAAcA,SAAc,EAAd,EAAkBJ,SAAlB,CAAd,EAA4CL,KAA5C;AAA7E,QAAR;AACH;;;;EAnBwBN,KAAK,CAACgB;;AAqBnCd,cAAc,CAACe,YAAff,GAA8B;AAC1BK,MAAI,EAAE;AADoB,CAA9BL;AAGA,eAAeA,cAAf","names":["React","classNames","SkeletonAvatar","props","prefixCls","className","style","size","shape","sizeCls","shapeCls","sizeStyle","width","height","lineHeight","_extends","Component","defaultProps"],"sources":["skeleton/Avatar.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n// eslint-disable-next-line react/prefer-stateless-function\nclass SkeletonAvatar extends React.Component {\n    render() {\n        const { prefixCls, className, style, size, shape } = this.props;\n        const sizeCls = classNames({\n            [`${prefixCls}-lg`]: size === 'large',\n            [`${prefixCls}-sm`]: size === 'small',\n        });\n        const shapeCls = classNames({\n            [`${prefixCls}-circle`]: shape === 'circle',\n            [`${prefixCls}-square`]: shape === 'square',\n        });\n        const sizeStyle = typeof size === 'number'\n            ? {\n                width: size,\n                height: size,\n                lineHeight: `${size}px`,\n            }\n            : {};\n        return (<span className={classNames(prefixCls, className, sizeCls, shapeCls)} style={Object.assign(Object.assign({}, sizeStyle), style)}/>);\n    }\n}\nSkeletonAvatar.defaultProps = {\n    size: 'large',\n};\nexport default SkeletonAvatar;\n"]},"metadata":{},"sourceType":"module"}