{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport CollapsePanel from './CollapsePanel';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\n\nvar Collapse = /*#__PURE__*/function (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  function Collapse() {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collapse).apply(this, arguments));\n\n    _this.renderExpandIcon = function () {\n      var panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prefixCls = arguments.length > 1 ? arguments[1] : undefined;\n      var expandIcon = _this.props.expandIcon;\n      var icon = expandIcon ? expandIcon(panelProps) : React.createElement(Icon, {\n        type: \"right\",\n        rotate: panelProps.isActive ? 90 : undefined\n      });\n      return React.isValidElement(icon) ? React.cloneElement(icon, {\n        className: classNames(icon.props.className, \"\".concat(prefixCls, \"-arrow\"))\n      }) : icon;\n    };\n\n    _this.renderCollapse = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          bordered = _this$props.bordered,\n          expandIconPosition = _this$props.expandIconPosition;\n      var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-position-\").concat(expandIconPosition), true), _classNames), className);\n      return React.createElement(RcCollapse, _extends({}, _this.props, {\n        expandIcon: function expandIcon(panelProps) {\n          return _this.renderExpandIcon(panelProps, prefixCls);\n        },\n        prefixCls: prefixCls,\n        className: collapseClassName\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderCollapse);\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nexport { Collapse as default };\nCollapse.Panel = CollapsePanel;\nCollapse.defaultProps = {\n  bordered: true,\n  openAnimation: _extends(_extends({}, animation), {\n    appear: function appear() {}\n  }),\n  expandIconPosition: 'left'\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;IACqBC,Q;;;AACjB,sBAAc;AAAA;;AAAAC;;AACVC,mFAASC,SAAT;;AACAD,UAAKE,gBAAL,GAAwB,YAAgC;AAAA,UAA/BC,UAA+B,uEAAlB,EAAkB;AAAA,UAAdC,SAAc;AAAA,UAC5CC,UAD4C,GAC7BL,MAAKM,KAAL,CAAfD,UAD4C;AAEpD,UAAME,IAAI,GAAIF,UAAU,GAAIA,UAAU,CAACF,UAAD,CAAd,GAA+BZ,oBAACI,IAAD;AAAMa,YAAI,EAAC,OAAX;AAAmBC,cAAM,EAAEN,UAAU,CAACO,QAAXP,GAAsB,EAAtBA,GAA2BQ;AAAtD,QAAvD;AACA,aAAOpB,KAAK,CAACqB,cAANrB,CAAqBgB,IAArBhB,IACDA,KAAK,CAACsB,YAANtB,CAAmBgB,IAAnBhB,EAAyB;AACvBuB,iBAAS,EAAErB,UAAU,CAACc,IAAI,CAACD,KAALC,CAAWO,SAAZ,YAA0BV,SAA1B;AADE,OAAzBb,CADCA,GAIDgB,IAJN;AAHJ;;AASAP,UAAKe,cAAL,GAAsB,gBAAsB;AAAA;;AAAA,UAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,wBACiDhB,MAAKM,KADtD;AAAA,UACrBW,kBADqB,eAChCb,SADgC;AAAA,8CACDU,SADC;AAAA,UACDA,SADC,sCACW,EADX;AAAA,UACeI,QADf,eACeA,QADf;AAAA,UACyBC,kBADzB,eACyBA,kBADzB;AAExC,UAAMf,SAAS,GAAGY,YAAY,CAAC,UAAD,EAAaC,kBAAb,CAA9B;AACA,UAAMG,iBAAiB,GAAG3B,UAAU,2DAC5BW,SAD4B,kBACH,CAACc,QADE,0CAE5Bd,SAF4B,4BAEDe,kBAFC,GAEsB,IAFtB,iBAGjCL,SAHiC,CAApC;AAIA,aAAQvB,oBAACC,UAAD,eAAgBQ,MAAKM,KAArB;AAA4BD,kBAAU,EAAE,oBAACF,UAAD;AAAA,iBAAgBH,MAAKE,gBAAL,CAAsBC,UAAtB,EAAkCC,SAAlC,CAAhB;AAAxC;AAAsGA,iBAAS,EAAEA,SAAjH;AAA4HU,iBAAS,EAAEM;AAAvI,SAAR;AAPJ;;AAXU;AAoBb;;;;6BACQ;AACL,aAAO7B,oBAACK,cAAD,QAAiB,KAAKmB,cAAtB,CAAP;AACH;;;;EAxBiCxB,KAAK,CAAC8B;;SAAvBvB,Q;AA0BrBA,QAAQ,CAACwB,KAATxB,GAAiBJ,aAAjBI;AACAA,QAAQ,CAACyB,YAATzB,GAAwB;AACpBoB,UAAQ,EAAE,IADU;AAEpBM,eAAa,EAAEC,SAAcA,SAAc,EAAd,EAAkB5B,SAAlB,CAAd,EAA4C;AAAE6B,UAAF,oBAAW,CAAG;AAAd,GAA5C,CAFK;AAGpBP,oBAAkB,EAAE;AAHA,CAAxBrB","names":["React","RcCollapse","classNames","CollapsePanel","Icon","ConfigConsumer","animation","Collapse","_classCallCheck","_this","arguments","renderExpandIcon","panelProps","prefixCls","expandIcon","props","icon","type","rotate","isActive","undefined","isValidElement","cloneElement","className","renderCollapse","getPrefixCls","customizePrefixCls","bordered","expandIconPosition","collapseClassName","Component","Panel","defaultProps","openAnimation","_extends","appear"],"sources":["collapse/Collapse.jsx"],"sourcesContent":["import * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport CollapsePanel from './CollapsePanel';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\nexport default class Collapse extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderExpandIcon = (panelProps = {}, prefixCls) => {\n            const { expandIcon } = this.props;\n            const icon = (expandIcon ? (expandIcon(panelProps)) : (<Icon type=\"right\" rotate={panelProps.isActive ? 90 : undefined}/>));\n            return React.isValidElement(icon)\n                ? React.cloneElement(icon, {\n                    className: classNames(icon.props.className, `${prefixCls}-arrow`),\n                })\n                : icon;\n        };\n        this.renderCollapse = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className = '', bordered, expandIconPosition, } = this.props;\n            const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n            const collapseClassName = classNames({\n                [`${prefixCls}-borderless`]: !bordered,\n                [`${prefixCls}-icon-position-${expandIconPosition}`]: true,\n            }, className);\n            return (<RcCollapse {...this.props} expandIcon={(panelProps) => this.renderExpandIcon(panelProps, prefixCls)} prefixCls={prefixCls} className={collapseClassName}/>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCollapse}</ConfigConsumer>;\n    }\n}\nCollapse.Panel = CollapsePanel;\nCollapse.defaultProps = {\n    bordered: true,\n    openAnimation: Object.assign(Object.assign({}, animation), { appear() { } }),\n    expandIconPosition: 'left',\n};\n"]},"metadata":{},"sourceType":"module"}