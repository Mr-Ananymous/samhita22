{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable camelcase */\n\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor'; // Initial setting\n\nReactIcon.add.apply(ReactIcon, _toConsumableArray(Object.keys(allIcons).map(function (key) {\n  return allIcons[key];\n})));\nsetTwoToneColor('#1890ff');\nvar defaultTheme = 'outlined';\nvar dangerousTheme;\n\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  dangerousTheme = theme;\n}\n\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n  warning(false, 'Icon', \"You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', \" + \"make sure that all the icons with theme '\".concat(theme, \"' display correctly.\"));\n  defaultTheme = theme;\n}\n\nvar Icon = function Icon(props) {\n  var _classNames;\n\n  var className = props.className,\n      type = props.type,\n      Component = props.component,\n      viewBox = props.viewBox,\n      spin = props.spin,\n      rotate = props.rotate,\n      tabIndex = props.tabIndex,\n      onClick = props.onClick,\n      children = props.children,\n      theme = props.theme,\n      twoToneColor = props.twoToneColor,\n      restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n\n  warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n  var classString = classNames((_classNames = {}, _defineProperty(_classNames, \"anticon\", true), _defineProperty(_classNames, \"anticon-\".concat(type), Boolean(type)), _classNames), className);\n  var svgClassString = classNames(_defineProperty({}, \"anticon-spin\", !!spin || type === 'loading'));\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var innerSvgProps = _extends(_extends({}, svgBaseProps), {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox: viewBox\n  });\n\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  var renderInnerNode = function renderInnerNode() {\n    // component > children > type\n    if (Component) {\n      return React.createElement(Component, innerSvgProps, children);\n    }\n\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && React.isValidElement(children) && React.Children.only(children).type === 'use', 'Icon', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n\n    if (typeof type === 'string') {\n      var computedType = type;\n\n      if (theme) {\n        var themeInName = getThemeFromTypeName(type);\n        warning(!themeInName || theme === themeInName, 'Icon', \"The icon name '\".concat(type, \"' already specify a theme '\").concat(themeInName, \"',\") + \" the 'theme' prop '\".concat(theme, \"' will be ignored.\"));\n      }\n\n      computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n      return React.createElement(ReactIcon, {\n        className: svgClassString,\n        type: computedType,\n        primaryColor: twoToneColor,\n        style: svgStyle\n      });\n    }\n  };\n\n  var iconTabIndex = tabIndex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n\n  return React.createElement(LocaleReceiver, {\n    componentName: \"Icon\"\n  }, function (locale) {\n    return React.createElement(\"i\", _extends({\n      \"aria-label\": type && \"\".concat(locale.icon, \": \").concat(type)\n    }, restProps, {\n      tabIndex: iconTabIndex,\n      onClick: onClick,\n      className: classString\n    }), renderInnerNode());\n  });\n};\n\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","allIcons","ReactIcon","createFromIconfontCN","svgBaseProps","withThemeSuffix","removeTypeTheme","getThemeFromTypeName","alias","warning","LocaleReceiver","getTwoToneColor","setTwoToneColor","add","_toConsumableArray","keys","map","key","defaultTheme","dangerousTheme","unstable_ChangeThemeOfIconsDangerously","theme","unstable_ChangeDefaultThemeOfIcons","Icon","className","props","type","Component","component","viewBox","spin","rotate","tabIndex","onClick","children","twoToneColor","restProps","Boolean","classString","svgClassString","svgStyle","msTransform","transform","undefined","innerSvgProps","_extends","style","renderInnerNode","Children","count","isValidElement","only","computedType","themeInName","primaryColor","iconTabIndex","componentName","locale","icon"],"sources":["icon/index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable camelcase */\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport * as allIcons from '@ant-design/icons/lib/dist';\nimport ReactIcon from '@ant-design/icons-react';\nimport createFromIconfontCN from './IconFont';\nimport { svgBaseProps, withThemeSuffix, removeTypeTheme, getThemeFromTypeName, alias, } from './utils';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\n// Initial setting\nReactIcon.add(...Object.keys(allIcons).map(key => allIcons[key]));\nsetTwoToneColor('#1890ff');\nlet defaultTheme = 'outlined';\nlet dangerousTheme;\nfunction unstable_ChangeThemeOfIconsDangerously(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeThemeOfAllIconsDangerously', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    dangerousTheme = theme;\n}\nfunction unstable_ChangeDefaultThemeOfIcons(theme) {\n    warning(false, 'Icon', `You are using the unstable method 'Icon.unstable_ChangeDefaultThemeOfIcons', ` +\n        `make sure that all the icons with theme '${theme}' display correctly.`);\n    defaultTheme = theme;\n}\nconst Icon = props => {\n    const { \n    // affect outter <i>...</i>\n    className, \n    // affect inner <svg>...</svg>\n    type, component: Component, viewBox, spin, rotate, tabIndex, onClick, \n    // children\n    children, \n    // other\n    theme, // default to outlined\n    twoToneColor } = props, restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\", \"theme\", \"twoToneColor\"]);\n    warning(Boolean(type || Component || children), 'Icon', 'Should have `type` prop or `component` prop or `children`.');\n    const classString = classNames({\n        [`anticon`]: true,\n        [`anticon-${type}`]: Boolean(type),\n    }, className);\n    const svgClassString = classNames({\n        [`anticon-spin`]: !!spin || type === 'loading',\n    });\n    const svgStyle = rotate\n        ? {\n            msTransform: `rotate(${rotate}deg)`,\n            transform: `rotate(${rotate}deg)`,\n        }\n        : undefined;\n    const innerSvgProps = Object.assign(Object.assign({}, svgBaseProps), { className: svgClassString, style: svgStyle, viewBox });\n    if (!viewBox) {\n        delete innerSvgProps.viewBox;\n    }\n    const renderInnerNode = () => {\n        // component > children > type\n        if (Component) {\n            return <Component {...innerSvgProps}>{children}</Component>;\n        }\n        if (children) {\n            warning(Boolean(viewBox) ||\n                (React.Children.count(children) === 1 &&\n                    React.isValidElement(children) &&\n                    React.Children.only(children).type === 'use'), 'Icon', 'Make sure that you provide correct `viewBox`' +\n                ' prop (default `0 0 1024 1024`) to the icon.');\n            return (<svg {...innerSvgProps} viewBox={viewBox}>\n          {children}\n        </svg>);\n        }\n        if (typeof type === 'string') {\n            let computedType = type;\n            if (theme) {\n                const themeInName = getThemeFromTypeName(type);\n                warning(!themeInName || theme === themeInName, 'Icon', `The icon name '${type}' already specify a theme '${themeInName}',` +\n                    ` the 'theme' prop '${theme}' will be ignored.`);\n            }\n            computedType = withThemeSuffix(removeTypeTheme(alias(computedType)), dangerousTheme || theme || defaultTheme);\n            return (<ReactIcon className={svgClassString} type={computedType} primaryColor={twoToneColor} style={svgStyle}/>);\n        }\n    };\n    let iconTabIndex = tabIndex;\n    if (iconTabIndex === undefined && onClick) {\n        iconTabIndex = -1;\n    }\n    return (<LocaleReceiver componentName=\"Icon\">\n      {(locale) => (<i aria-label={type && `${locale.icon}: ${type}`} {...restProps} tabIndex={iconTabIndex} onClick={onClick} className={classString}>\n          {renderInnerNode()}\n        </i>)}\n    </LocaleReceiver>);\n};\nIcon.createFromIconfontCN = createFromIconfontCN;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}