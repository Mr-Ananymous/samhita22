{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable prefer-spread */\n\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport scrollTo from '../_util/scrollTo';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\n\nfunction noop() {}\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\nfunction getRowSelection(props) {\n  return props.rowSelection || {};\n}\n\nfunction getColumnKey(column, index) {\n  return column.key || column.dataIndex || index;\n}\n\nfunction isSameColumn(a, b) {\n  if (a && b && a.key && a.key === b.key) {\n    return true;\n  }\n\n  return a === b || shallowEqual(a, b, function (value, other) {\n    // https://github.com/ant-design/ant-design/issues/12737\n    if (typeof value === 'function' && typeof other === 'function') {\n      return value === other || value.toString() === other.toString();\n    } // https://github.com/ant-design/ant-design/issues/19398\n\n\n    if (Array.isArray(value) && Array.isArray(other)) {\n      return value === other || shallowEqual(value, other);\n    }\n  });\n}\n\nvar defaultPagination = {\n  onChange: noop,\n  onShowSizeChange: noop\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\n\nvar emptyObject = {};\n\nvar createComponents = function createComponents() {\n  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var bodyRow = components && components.body && components.body.row;\n  return _extends(_extends({}, components), {\n    body: _extends(_extends({}, components.body), {\n      row: createBodyRow(bodyRow)\n    })\n  });\n};\n\nfunction isTheSameComponents() {\n  var components1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var components2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return components1 === components2 || ['table', 'header', 'body'].every(function (key) {\n    return shallowEqual(components1[key], components2[key]);\n  });\n}\n\nfunction getFilteredValueColumns(state, columns) {\n  return flatFilter(columns || (state || {}).columns || [], function (column) {\n    return typeof column.filteredValue !== 'undefined';\n  });\n}\n\nfunction getFiltersFromColumns() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var columns = arguments.length > 1 ? arguments[1] : undefined;\n  var filters = {};\n  getFilteredValueColumns(state, columns).forEach(function (col) {\n    var colKey = getColumnKey(col);\n    filters[colKey] = col.filteredValue;\n  });\n  return filters;\n}\n\nfunction isFiltersChanged(state, filters) {\n  if (Object.keys(filters).length !== Object.keys(state.filters).length) {\n    return true;\n  }\n\n  return Object.keys(filters).some(function (columnKey) {\n    return filters[columnKey] !== state.filters[columnKey];\n  });\n}\n\nvar Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n\n    _this.setTableRef = function (table) {\n      _this.rcTable = table;\n    };\n\n    _this.getCheckboxPropsByItem = function (item, index) {\n      var rowSelection = getRowSelection(_this.props);\n\n      if (!rowSelection.getCheckboxProps) {\n        return {};\n      }\n\n      var key = _this.getRecordKey(item, index); // Cache checkboxProps\n\n\n      if (!_this.props.checkboxPropsCache[key]) {\n        _this.props.checkboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n        var checkboxProps = _this.props.checkboxPropsCache[key];\n        warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n\n      return _this.props.checkboxPropsCache[key];\n    };\n\n    _this.getRecordKey = function (record, index) {\n      var rowKey = _this.props.rowKey;\n      var recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n      warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' + 'or set `rowKey` of Table to an unique primary key, ' + 'see https://u.ant.design/table-row-key');\n      return recordKey === undefined ? index : recordKey;\n    };\n\n    _this.onRow = function (prefixCls, record, index) {\n      var onRow = _this.props.onRow;\n      var custom = onRow ? onRow(record, index) : {};\n      return _extends(_extends({}, custom), {\n        prefixCls: prefixCls,\n        store: _this.props.store,\n        rowKey: _this.getRecordKey(record, index)\n      });\n    };\n\n    _this.generatePopupContainerFunc = function (getPopupContainer) {\n      var scroll = _this.props.scroll;\n      var table = _this.rcTable;\n\n      if (getPopupContainer) {\n        return getPopupContainer;\n      } // Use undefined to let rc component use default logic.\n\n\n      return scroll && table ? function () {\n        return table.tableNode;\n      } : undefined;\n    };\n\n    _this.scrollToFirstRow = function () {\n      var scroll = _this.props.scroll;\n\n      if (scroll && scroll.scrollToFirstRowOnChange !== false) {\n        scrollTo(0, {\n          getContainer: function getContainer() {\n            return _this.rcTable.bodyTable;\n          }\n        });\n      }\n    };\n\n    _this.handleFilter = function (column, nextFilters) {\n      var props = _this.props;\n\n      var pagination = _extends({}, _this.state.pagination);\n\n      var filters = _extends(_extends({}, _this.state.filters), _defineProperty({}, getColumnKey(column), nextFilters)); // Remove filters not in current columns\n\n\n      var currentColumnKeys = [];\n      treeMap(_this.state.columns, function (c) {\n        if (!c.children) {\n          currentColumnKeys.push(getColumnKey(c));\n        }\n      });\n      Object.keys(filters).forEach(function (columnKey) {\n        if (currentColumnKeys.indexOf(columnKey) < 0) {\n          delete filters[columnKey];\n        }\n      });\n\n      if (props.pagination) {\n        // Reset current prop\n        pagination.current = 1;\n        pagination.onChange(pagination.current);\n      }\n\n      var newState = {\n        pagination: pagination,\n        filters: {}\n      };\n\n      var filtersToSetState = _extends({}, filters); // Remove filters which is controlled\n\n\n      getFilteredValueColumns(_this.state).forEach(function (col) {\n        var columnKey = getColumnKey(col);\n\n        if (columnKey) {\n          delete filtersToSetState[columnKey];\n        }\n      });\n\n      if (Object.keys(filtersToSetState).length > 0) {\n        newState.filters = filtersToSetState;\n      } // Controlled current prop will not respond user interaction\n\n\n      if (_typeof(props.pagination) === 'object' && 'current' in props.pagination) {\n        newState.pagination = _extends(_extends({}, pagination), {\n          current: _this.state.pagination.current\n        });\n      }\n\n      _this.setState(newState, function () {\n        _this.scrollToFirstRow();\n\n        _this.props.store.setState({\n          selectionDirty: false\n        });\n\n        var onChange = _this.props.onChange;\n\n        if (onChange) {\n          onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n            selectionDirty: false,\n            filters: filters,\n            pagination: pagination\n          })));\n        }\n      });\n    };\n\n    _this.handleSelect = function (record, rowIndex, e) {\n      var checked = e.target.checked;\n      var nativeEvent = e.nativeEvent;\n      var defaultSelection = _this.props.store.getState().selectionDirty ? [] : _this.getDefaultSelection();\n\n      var selectedRowKeys = _this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n\n      var key = _this.getRecordKey(record, rowIndex);\n\n      var pivot = _this.state.pivot;\n\n      var rows = _this.getFlatCurrentPageData();\n\n      var realIndex = rowIndex;\n\n      if (_this.props.expandedRowRender) {\n        realIndex = rows.findIndex(function (row) {\n          return _this.getRecordKey(row, rowIndex) === key;\n        });\n      }\n\n      if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n        var changeRowKeys = [];\n        var direction = Math.sign(pivot - realIndex);\n        var dist = Math.abs(pivot - realIndex);\n        var step = 0;\n\n        var _loop = function _loop() {\n          var i = realIndex + step * direction;\n          step += 1;\n          var row = rows[i];\n\n          var rowKey = _this.getRecordKey(row, i);\n\n          var checkboxProps = _this.getCheckboxPropsByItem(row, i);\n\n          if (!checkboxProps.disabled) {\n            if (selectedRowKeys.includes(rowKey)) {\n              if (!checked) {\n                selectedRowKeys = selectedRowKeys.filter(function (j) {\n                  return rowKey !== j;\n                });\n                changeRowKeys.push(rowKey);\n              }\n            } else if (checked) {\n              selectedRowKeys.push(rowKey);\n              changeRowKeys.push(rowKey);\n            }\n          }\n        };\n\n        while (step <= dist) {\n          _loop();\n        }\n\n        _this.setState({\n          pivot: realIndex\n        });\n\n        _this.props.store.setState({\n          selectionDirty: true\n        });\n\n        _this.setSelectedRowKeys(selectedRowKeys, {\n          selectWay: 'onSelectMultiple',\n          record: record,\n          checked: checked,\n          changeRowKeys: changeRowKeys,\n          nativeEvent: nativeEvent\n        });\n      } else {\n        if (checked) {\n          selectedRowKeys.push(_this.getRecordKey(record, realIndex));\n        } else {\n          selectedRowKeys = selectedRowKeys.filter(function (i) {\n            return key !== i;\n          });\n        }\n\n        _this.setState({\n          pivot: realIndex\n        });\n\n        _this.props.store.setState({\n          selectionDirty: true\n        });\n\n        _this.setSelectedRowKeys(selectedRowKeys, {\n          selectWay: 'onSelect',\n          record: record,\n          checked: checked,\n          changeRowKeys: undefined,\n          nativeEvent: nativeEvent\n        });\n      }\n    };\n\n    _this.handleRadioSelect = function (record, rowIndex, e) {\n      var checked = e.target.checked;\n      var nativeEvent = e.nativeEvent;\n\n      var key = _this.getRecordKey(record, rowIndex);\n\n      var selectedRowKeys = [key];\n\n      _this.props.store.setState({\n        selectionDirty: true\n      });\n\n      _this.setSelectedRowKeys(selectedRowKeys, {\n        selectWay: 'onSelect',\n        record: record,\n        checked: checked,\n        changeRowKeys: undefined,\n        nativeEvent: nativeEvent\n      });\n    };\n\n    _this.handleSelectRow = function (selectionKey, index, onSelectFunc) {\n      var data = _this.getFlatCurrentPageData();\n\n      var defaultSelection = _this.props.store.getState().selectionDirty ? [] : _this.getDefaultSelection();\n\n      var selectedRowKeys = _this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n\n      var changeableRowKeys = data.filter(function (item, i) {\n        return !_this.getCheckboxPropsByItem(item, i).disabled;\n      }).map(function (item, i) {\n        return _this.getRecordKey(item, i);\n      });\n      var changeRowKeys = [];\n      var selectWay = 'onSelectAll';\n      var checked; // handle default selection\n\n      switch (selectionKey) {\n        case 'all':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) < 0) {\n              selectedRowKeys.push(key);\n              changeRowKeys.push(key);\n            }\n          });\n          selectWay = 'onSelectAll';\n          checked = true;\n          break;\n\n        case 'removeAll':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) >= 0) {\n              selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n              changeRowKeys.push(key);\n            }\n          });\n          selectWay = 'onSelectAll';\n          checked = false;\n          break;\n\n        case 'invert':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) < 0) {\n              selectedRowKeys.push(key);\n            } else {\n              selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n            }\n\n            changeRowKeys.push(key);\n            selectWay = 'onSelectInvert';\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.store.setState({\n        selectionDirty: true\n      }); // when select custom selection, callback selections[n].onSelect\n\n\n      var rowSelection = _this.props.rowSelection;\n      var customSelectionStartIndex = 2;\n\n      if (rowSelection && rowSelection.hideDefaultSelections) {\n        customSelectionStartIndex = 0;\n      }\n\n      if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n        return onSelectFunc(changeableRowKeys);\n      }\n\n      _this.setSelectedRowKeys(selectedRowKeys, {\n        selectWay: selectWay,\n        checked: checked,\n        changeRowKeys: changeRowKeys\n      });\n    };\n\n    _this.handlePageChange = function (current) {\n      var props = _this.props;\n\n      var pagination = _extends({}, _this.state.pagination);\n\n      if (current) {\n        pagination.current = current;\n      } else {\n        pagination.current = pagination.current || 1;\n      }\n\n      for (var _len = arguments.length, otherArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        otherArguments[_key - 1] = arguments[_key];\n      }\n\n      pagination.onChange.apply(pagination, [pagination.current].concat(otherArguments));\n      var newState = {\n        pagination: pagination\n      }; // Controlled current prop will not respond user interaction\n\n      if (props.pagination && _typeof(props.pagination) === 'object' && 'current' in props.pagination) {\n        newState.pagination = _extends(_extends({}, pagination), {\n          current: _this.state.pagination.current\n        });\n      }\n\n      _this.setState(newState, _this.scrollToFirstRow);\n\n      _this.props.store.setState({\n        selectionDirty: false\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n          selectionDirty: false,\n          pagination: pagination\n        })));\n      }\n    };\n\n    _this.handleShowSizeChange = function (current, pageSize) {\n      var pagination = _this.state.pagination;\n      pagination.onShowSizeChange(current, pageSize);\n\n      var nextPagination = _extends(_extends({}, pagination), {\n        pageSize: pageSize,\n        current: current\n      });\n\n      _this.setState({\n        pagination: nextPagination\n      }, _this.scrollToFirstRow);\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n          pagination: nextPagination\n        })));\n      }\n    };\n\n    _this.renderExpandIcon = function (prefixCls) {\n      return function (_ref) {\n        var expandable = _ref.expandable,\n            expanded = _ref.expanded,\n            needIndentSpaced = _ref.needIndentSpaced,\n            record = _ref.record,\n            onExpand = _ref.onExpand;\n\n        if (expandable) {\n          return React.createElement(LocaleReceiver, {\n            componentName: \"Table\",\n            defaultLocale: defaultLocale.Table\n          }, function (locale) {\n            var _classNames;\n\n            return React.createElement(TransButton, {\n              className: classNames(\"\".concat(prefixCls, \"-row-expand-icon\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-row-collapsed\"), !expanded), _defineProperty(_classNames, \"\".concat(prefixCls, \"-row-expanded\"), expanded), _classNames)),\n              onClick: function onClick(event) {\n                onExpand(record, event);\n              },\n              \"aria-label\": expanded ? locale.collapse : locale.expand,\n              noStyle: true\n            });\n          });\n        }\n\n        if (needIndentSpaced) {\n          return React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-row-expand-icon \").concat(prefixCls, \"-row-spaced\")\n          });\n        }\n\n        return null;\n      };\n    };\n\n    _this.renderSelectionBox = function (type) {\n      return function (_, record, index) {\n        var rowKey = _this.getRecordKey(record, index);\n\n        var props = _this.getCheckboxPropsByItem(record, index);\n\n        var handleChange = function handleChange(e) {\n          return type === 'radio' ? _this.handleRadioSelect(record, index, e) : _this.handleSelect(record, index, e);\n        };\n\n        return React.createElement(\"span\", {\n          onClick: stopPropagation\n        }, React.createElement(SelectionBox, _extends({\n          type: type,\n          store: _this.props.store,\n          rowIndex: rowKey,\n          onChange: handleChange,\n          defaultSelection: _this.getDefaultSelection()\n        }, props)));\n      };\n    };\n\n    _this.renderTable = function (_ref2) {\n      var _classNames2;\n\n      var prefixCls = _ref2.prefixCls,\n          renderEmpty = _ref2.renderEmpty,\n          dropdownPrefixCls = _ref2.dropdownPrefixCls,\n          contextLocale = _ref2.contextLocale,\n          contextGetPopupContainer = _ref2.getPopupContainer;\n\n      var _a = _this.props,\n          showHeader = _a.showHeader,\n          locale = _a.locale,\n          getPopupContainer = _a.getPopupContainer,\n          restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]); // do not pass prop.style to rc-table, since already apply it to container div\n\n\n      var restProps = omit(restTableProps, ['style']);\n\n      var data = _this.getCurrentPageData();\n\n      var expandIconAsCell = _this.props.expandedRowRender && _this.props.expandIconAsCell !== false; // use props.getPopupContainer first\n\n      var realGetPopupContainer = getPopupContainer || contextGetPopupContainer; // Merge too locales\n\n      var mergedLocale = _extends(_extends({}, contextLocale), locale);\n\n      if (!locale || !locale.emptyText) {\n        mergedLocale.emptyText = renderEmpty('Table');\n      }\n\n      var classString = classNames(\"\".concat(prefixCls, \"-\").concat(_this.props.size), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-bordered\"), _this.props.bordered), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-empty\"), !data.length), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-without-column-header\"), !showHeader), _classNames2));\n\n      var columnsWithRowSelection = _this.renderRowSelection({\n        prefixCls: prefixCls,\n        locale: mergedLocale,\n        getPopupContainer: realGetPopupContainer\n      });\n\n      var columns = _this.renderColumnsDropdown({\n        columns: columnsWithRowSelection,\n        prefixCls: prefixCls,\n        dropdownPrefixCls: dropdownPrefixCls,\n        locale: mergedLocale,\n        getPopupContainer: realGetPopupContainer\n      }).map(function (column, i) {\n        var newColumn = _extends({}, column);\n\n        newColumn.key = getColumnKey(newColumn, i);\n        return newColumn;\n      });\n\n      var expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n\n      if ('expandIconColumnIndex' in restProps) {\n        expandIconColumnIndex = restProps.expandIconColumnIndex;\n      }\n\n      return React.createElement(RcTable, _extends({\n        ref: _this.setTableRef,\n        key: \"table\",\n        expandIcon: _this.renderExpandIcon(prefixCls)\n      }, restProps, {\n        onRow: function onRow(record, index) {\n          return _this.onRow(prefixCls, record, index);\n        },\n        components: _this.state.components,\n        prefixCls: prefixCls,\n        data: data,\n        columns: columns,\n        showHeader: showHeader,\n        className: classString,\n        expandIconColumnIndex: expandIconColumnIndex,\n        expandIconAsCell: expandIconAsCell,\n        emptyText: mergedLocale.emptyText\n      }));\n    };\n\n    _this.renderComponent = function (_ref3) {\n      var getPrefixCls = _ref3.getPrefixCls,\n          renderEmpty = _ref3.renderEmpty,\n          getPopupContainer = _ref3.getPopupContainer;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          customizeDropdownPrefixCls = _this$props.dropdownPrefixCls,\n          style = _this$props.style,\n          className = _this$props.className;\n\n      var data = _this.getCurrentPageData();\n\n      var loading = _this.props.loading;\n\n      if (typeof loading === 'boolean') {\n        loading = {\n          spinning: loading\n        };\n      }\n\n      var prefixCls = getPrefixCls('table', customizePrefixCls);\n      var dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n      var table = React.createElement(LocaleReceiver, {\n        componentName: \"Table\",\n        defaultLocale: defaultLocale.Table\n      }, function (locale) {\n        return _this.renderTable({\n          prefixCls: prefixCls,\n          renderEmpty: renderEmpty,\n          dropdownPrefixCls: dropdownPrefixCls,\n          contextLocale: locale,\n          getPopupContainer: getPopupContainer\n        });\n      }); // if there is no pagination or no data,\n      // the height of spin should decrease by half of pagination\n\n      var paginationPatchClass = _this.hasPagination() && data && data.length !== 0 ? \"\".concat(prefixCls, \"-with-pagination\") : \"\".concat(prefixCls, \"-without-pagination\");\n      return React.createElement(\"div\", {\n        className: classNames(\"\".concat(prefixCls, \"-wrapper\"), className),\n        style: style\n      }, React.createElement(Spin, _extends({}, loading, {\n        className: loading.spinning ? \"\".concat(paginationPatchClass, \" \").concat(prefixCls, \"-spin-holder\") : ''\n      }), _this.renderPagination(prefixCls, 'top'), table, _this.renderPagination(prefixCls, 'bottom')));\n    };\n\n    var expandedRowRender = props.expandedRowRender,\n        columnsProp = props.columns;\n    warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' + 'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n\n    if (expandedRowRender && (columnsProp || []).some(function (_ref4) {\n      var fixed = _ref4.fixed;\n      return !!fixed;\n    })) {\n      warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n    }\n\n    var columns = columnsProp || normalizeColumns(props.children);\n    _this.state = _extends(_extends({}, _this.getDefaultSortOrder(columns || [])), {\n      // 减少状态\n      filters: _this.getDefaultFilters(columns),\n      pagination: _this.getDefaultPagination(props),\n      pivot: undefined,\n      prevProps: props,\n      components: createComponents(props.components),\n      columns: columns\n    });\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          sortColumn = _this$state.sortColumn,\n          sortOrder = _this$state.sortOrder;\n\n      if (this.getSortOrderColumns(columns).length > 0) {\n        var sortState = this.getSortStateFromColumns(columns);\n\n        if (!isSameColumn(sortState.sortColumn, sortColumn) || sortState.sortOrder !== sortOrder) {\n          this.setState(sortState);\n        }\n      }\n    }\n  }, {\n    key: \"getDefaultSelection\",\n    value: function getDefaultSelection() {\n      var _this2 = this;\n\n      var rowSelection = getRowSelection(this.props);\n\n      if (!rowSelection.getCheckboxProps) {\n        return [];\n      }\n\n      return this.getFlatData().filter(function (item, rowIndex) {\n        return _this2.getCheckboxPropsByItem(item, rowIndex).defaultChecked;\n      }).map(function (record, rowIndex) {\n        return _this2.getRecordKey(record, rowIndex);\n      });\n    }\n  }, {\n    key: \"getDefaultPagination\",\n    value: function getDefaultPagination(props) {\n      var pagination = _typeof(props.pagination) === 'object' ? props.pagination : {};\n      var current;\n\n      if ('current' in pagination) {\n        current = pagination.current;\n      } else if ('defaultCurrent' in pagination) {\n        current = pagination.defaultCurrent;\n      }\n\n      var pageSize;\n\n      if ('pageSize' in pagination) {\n        pageSize = pagination.pageSize;\n      } else if ('defaultPageSize' in pagination) {\n        pageSize = pagination.defaultPageSize;\n      }\n\n      return this.hasPagination(props) ? _extends(_extends(_extends({}, defaultPagination), pagination), {\n        current: current || 1,\n        pageSize: pageSize || 10\n      }) : {};\n    }\n  }, {\n    key: \"getSortOrderColumns\",\n    value: function getSortOrderColumns(columns) {\n      return flatFilter(columns || (this.state || {}).columns || [], function (column) {\n        return 'sortOrder' in column;\n      });\n    }\n  }, {\n    key: \"getDefaultFilters\",\n    value: function getDefaultFilters(columns) {\n      var definedFilters = getFiltersFromColumns(this.state, columns);\n      var defaultFilteredValueColumns = flatFilter(columns || [], function (column) {\n        return typeof column.defaultFilteredValue !== 'undefined';\n      });\n      var defaultFilters = defaultFilteredValueColumns.reduce(function (soFar, col) {\n        var colKey = getColumnKey(col);\n        soFar[colKey] = col.defaultFilteredValue;\n        return soFar;\n      }, {});\n      return _extends(_extends({}, defaultFilters), definedFilters);\n    }\n  }, {\n    key: \"getDefaultSortOrder\",\n    value: function getDefaultSortOrder(columns) {\n      var definedSortState = this.getSortStateFromColumns(columns);\n      var defaultSortedColumn = flatFilter(columns || [], function (column) {\n        return column.defaultSortOrder != null;\n      })[0];\n\n      if (defaultSortedColumn && !definedSortState.sortColumn) {\n        return {\n          sortColumn: defaultSortedColumn,\n          sortOrder: defaultSortedColumn.defaultSortOrder\n        };\n      }\n\n      return definedSortState;\n    }\n  }, {\n    key: \"getSortStateFromColumns\",\n    value: function getSortStateFromColumns(columns) {\n      // return first column which sortOrder is not falsy\n      var sortedColumn = this.getSortOrderColumns(columns).filter(function (col) {\n        return col.sortOrder;\n      })[0];\n\n      if (sortedColumn) {\n        return {\n          sortColumn: sortedColumn,\n          sortOrder: sortedColumn.sortOrder\n        };\n      }\n\n      return {\n        sortColumn: null,\n        sortOrder: null\n      };\n    }\n  }, {\n    key: \"getMaxCurrent\",\n    value: function getMaxCurrent(total) {\n      var _this$state$paginatio = this.state.pagination,\n          current = _this$state$paginatio.current,\n          pageSize = _this$state$paginatio.pageSize;\n\n      if ((current - 1) * pageSize >= total) {\n        return Math.floor((total - 1) / pageSize) + 1;\n      }\n\n      return current;\n    }\n  }, {\n    key: \"getSorterFn\",\n    value: function getSorterFn(state) {\n      var _ref5 = state || this.state,\n          sortOrder = _ref5.sortOrder,\n          sortColumn = _ref5.sortColumn;\n\n      if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n        return;\n      }\n\n      return function (a, b) {\n        var result = sortColumn.sorter(a, b, sortOrder);\n\n        if (result !== 0) {\n          return sortOrder === 'descend' ? -result : result;\n        }\n\n        return 0;\n      };\n    }\n  }, {\n    key: \"getCurrentPageData\",\n    value: function getCurrentPageData() {\n      var data = this.getLocalData();\n      var current;\n      var pageSize;\n      var state = this.state; // 如果没有分页的话，默认全部展示\n\n      if (!this.hasPagination()) {\n        pageSize = Number.MAX_VALUE;\n        current = 1;\n      } else {\n        pageSize = state.pagination.pageSize;\n        current = this.getMaxCurrent(state.pagination.total || data.length);\n      } // 分页\n      // ---\n      // 当数据量少于等于每页数量时，直接设置数据\n      // 否则进行读取分页数据\n\n\n      if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n        data = data.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"getFlatData\",\n    value: function getFlatData() {\n      var childrenColumnName = this.props.childrenColumnName;\n      return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n  }, {\n    key: \"getFlatCurrentPageData\",\n    value: function getFlatCurrentPageData() {\n      var childrenColumnName = this.props.childrenColumnName;\n      return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n  }, {\n    key: \"getLocalData\",\n    value: function getLocalData(state) {\n      var _this3 = this;\n\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var currentState = state || this.state;\n      var dataSource = this.props.dataSource;\n      var data = dataSource || []; // 优化本地排序\n\n      data = data.slice(0);\n      var sorterFn = this.getSorterFn(currentState);\n\n      if (sorterFn) {\n        data = this.recursiveSort(data, sorterFn);\n      } // 筛选\n\n\n      if (filter && currentState.filters) {\n        Object.keys(currentState.filters).forEach(function (columnKey) {\n          var col = _this3.findColumn(columnKey);\n\n          if (!col) {\n            return;\n          }\n\n          var values = currentState.filters[columnKey] || [];\n\n          if (values.length === 0) {\n            return;\n          }\n\n          var onFilter = col.onFilter;\n          data = onFilter ? data.filter(function (record) {\n            return values.some(function (v) {\n              return onFilter(v, record);\n            });\n          }) : data;\n        });\n      }\n\n      return data;\n    }\n  }, {\n    key: \"setSelectedRowKeys\",\n    value: function setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n      var _this4 = this;\n\n      var selectWay = selectionInfo.selectWay,\n          record = selectionInfo.record,\n          checked = selectionInfo.checked,\n          changeRowKeys = selectionInfo.changeRowKeys,\n          nativeEvent = selectionInfo.nativeEvent;\n      var rowSelection = getRowSelection(this.props);\n\n      if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n        this.props.store.setState({\n          selectedRowKeys: selectedRowKeys\n        });\n      }\n\n      var data = this.getFlatData();\n\n      if (!rowSelection.onChange && !rowSelection[selectWay]) {\n        return;\n      }\n\n      var selectedRows = data.filter(function (row, i) {\n        return selectedRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n      });\n\n      if (rowSelection.onChange) {\n        rowSelection.onChange(selectedRowKeys, selectedRows);\n      }\n\n      if (selectWay === 'onSelect' && rowSelection.onSelect) {\n        rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n      } else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n        var changeRows = data.filter(function (row, i) {\n          return changeRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n        });\n        rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n      } else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n        var _changeRows = data.filter(function (row, i) {\n          return changeRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n        });\n\n        rowSelection.onSelectAll(checked, selectedRows, _changeRows);\n      } else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n        rowSelection.onSelectInvert(selectedRowKeys);\n      }\n    }\n  }, {\n    key: \"toggleSortOrder\",\n    value: function toggleSortOrder(column) {\n      var pagination = _extends({}, this.state.pagination);\n\n      var sortDirections = column.sortDirections || this.props.sortDirections;\n      var _this$state2 = this.state,\n          sortOrder = _this$state2.sortOrder,\n          sortColumn = _this$state2.sortColumn; // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n\n      var newSortOrder; // 切换另一列时，丢弃 sortOrder 的状态\n\n      if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n        // 按照sortDirections的内容依次切换排序状态\n        var methodIndex = sortDirections.indexOf(sortOrder) + 1;\n        newSortOrder = methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n      } else {\n        newSortOrder = sortDirections[0];\n      }\n\n      if (this.props.pagination) {\n        // Reset current prop\n        pagination.current = 1;\n        pagination.onChange(pagination.current);\n      }\n\n      var newState = {\n        pagination: pagination,\n        sortOrder: newSortOrder,\n        sortColumn: newSortOrder ? column : null\n      }; // Controlled\n\n      if (this.getSortOrderColumns().length === 0) {\n        this.setState(newState, this.scrollToFirstRow);\n      }\n\n      var onChange = this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, this.prepareParamsArguments(_extends(_extends({}, this.state), newState), column));\n      }\n    }\n  }, {\n    key: \"hasPagination\",\n    value: function hasPagination(props) {\n      return (props || this.props).pagination !== false;\n    }\n  }, {\n    key: \"isSortColumn\",\n    value: function isSortColumn(column) {\n      var sortColumn = this.state.sortColumn;\n\n      if (!column || !sortColumn) {\n        return false;\n      }\n\n      return getColumnKey(sortColumn) === getColumnKey(column);\n    } // Get pagination, filters, sorter\n\n  }, {\n    key: \"prepareParamsArguments\",\n    value: function prepareParamsArguments(state, column) {\n      var pagination = _extends({}, state.pagination); // remove useless handle function in Table.onChange\n\n\n      delete pagination.onChange;\n      delete pagination.onShowSizeChange;\n      var filters = state.filters;\n      var sorter = {};\n      var currentColumn = column;\n\n      if (state.sortColumn && state.sortOrder) {\n        currentColumn = state.sortColumn;\n        sorter.column = state.sortColumn;\n        sorter.order = state.sortOrder;\n      }\n\n      if (currentColumn) {\n        sorter.field = currentColumn.dataIndex;\n        sorter.columnKey = getColumnKey(currentColumn);\n      }\n\n      var extra = {\n        currentDataSource: this.getLocalData(state)\n      };\n      return [pagination, filters, sorter, extra];\n    }\n  }, {\n    key: \"findColumn\",\n    value: function findColumn(myKey) {\n      var column;\n      treeMap(this.state.columns, function (c) {\n        if (getColumnKey(c) === myKey) {\n          column = c;\n        }\n      });\n      return column;\n    }\n  }, {\n    key: \"recursiveSort\",\n    value: function recursiveSort(data, sorterFn) {\n      var _this5 = this;\n\n      var _this$props$childrenC = this.props.childrenColumnName,\n          childrenColumnName = _this$props$childrenC === void 0 ? 'children' : _this$props$childrenC;\n      return data.sort(sorterFn).map(function (item) {\n        return item[childrenColumnName] ? _extends(_extends({}, item), _defineProperty({}, childrenColumnName, _this5.recursiveSort(item[childrenColumnName], sorterFn))) : item;\n      });\n    }\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination(prefixCls, paginationPosition) {\n      // 强制不需要分页\n      if (!this.hasPagination()) {\n        return null;\n      }\n\n      var size = 'default';\n      var pagination = this.state.pagination;\n\n      if (pagination.size) {\n        size = pagination.size;\n      } else if (this.props.size === 'middle' || this.props.size === 'small') {\n        size = 'small';\n      }\n\n      var position = pagination.position || 'bottom';\n      var total = pagination.total || this.getLocalData().length;\n      return total > 0 && (position === paginationPosition || position === 'both') ? React.createElement(Pagination, _extends({\n        key: \"pagination-\".concat(paginationPosition)\n      }, pagination, {\n        className: classNames(pagination.className, \"\".concat(prefixCls, \"-pagination\")),\n        onChange: this.handlePageChange,\n        total: total,\n        size: size,\n        current: this.getMaxCurrent(total),\n        onShowSizeChange: this.handleShowSizeChange\n      })) : null;\n    }\n  }, {\n    key: \"renderRowSelection\",\n    value: function renderRowSelection(_ref6) {\n      var _this6 = this;\n\n      var prefixCls = _ref6.prefixCls,\n          locale = _ref6.locale,\n          getPopupContainer = _ref6.getPopupContainer;\n      var rowSelection = this.props.rowSelection;\n      var columns = this.state.columns.concat();\n\n      if (rowSelection) {\n        var data = this.getFlatCurrentPageData().filter(function (item, index) {\n          if (rowSelection.getCheckboxProps) {\n            return !_this6.getCheckboxPropsByItem(item, index).disabled;\n          }\n\n          return true;\n        });\n        var selectionColumnClass = classNames(\"\".concat(prefixCls, \"-selection-column\"), _defineProperty({}, \"\".concat(prefixCls, \"-selection-column-custom\"), rowSelection.selections));\n\n        var selectionColumn = _defineProperty({\n          key: 'selection-column',\n          render: this.renderSelectionBox(rowSelection.type),\n          className: selectionColumnClass,\n          fixed: rowSelection.fixed,\n          width: rowSelection.columnWidth,\n          title: rowSelection.columnTitle\n        }, INTERNAL_COL_DEFINE, {\n          className: \"\".concat(prefixCls, \"-selection-col\")\n        });\n\n        if (rowSelection.type !== 'radio') {\n          var checkboxAllDisabled = data.every(function (item, index) {\n            return _this6.getCheckboxPropsByItem(item, index).disabled;\n          });\n          selectionColumn.title = selectionColumn.title || React.createElement(SelectionCheckboxAll, {\n            store: this.props.store,\n            locale: locale,\n            data: data,\n            getCheckboxPropsByItem: this.getCheckboxPropsByItem,\n            getRecordKey: this.getRecordKey,\n            disabled: checkboxAllDisabled,\n            prefixCls: prefixCls,\n            onSelect: this.handleSelectRow,\n            selections: rowSelection.selections,\n            hideDefaultSelections: rowSelection.hideDefaultSelections,\n            getPopupContainer: this.generatePopupContainerFunc(getPopupContainer)\n          });\n        }\n\n        if ('fixed' in rowSelection) {\n          selectionColumn.fixed = rowSelection.fixed;\n        } else if (columns.some(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        })) {\n          selectionColumn.fixed = 'left';\n        }\n\n        if (columns[0] && columns[0].key === 'selection-column') {\n          columns[0] = selectionColumn;\n        } else {\n          columns.unshift(selectionColumn);\n        }\n      }\n\n      return columns;\n    }\n  }, {\n    key: \"renderColumnsDropdown\",\n    value: function renderColumnsDropdown(_ref7) {\n      var _this7 = this;\n\n      var prefixCls = _ref7.prefixCls,\n          dropdownPrefixCls = _ref7.dropdownPrefixCls,\n          columns = _ref7.columns,\n          locale = _ref7.locale,\n          getPopupContainer = _ref7.getPopupContainer;\n      var _this$state3 = this.state,\n          sortOrder = _this$state3.sortOrder,\n          filters = _this$state3.filters;\n      return treeMap(columns, function (column, i) {\n        var _classNames4;\n\n        var key = getColumnKey(column, i);\n        var filterDropdown;\n        var sortButton;\n        var onHeaderCell = column.onHeaderCell;\n\n        var isSortColumn = _this7.isSortColumn(column);\n\n        if (column.filters && column.filters.length > 0 || column.filterDropdown) {\n          var colFilters = key in filters ? filters[key] : [];\n          filterDropdown = React.createElement(FilterDropdown, {\n            locale: locale,\n            column: column,\n            selectedKeys: colFilters,\n            confirmFilter: _this7.handleFilter,\n            prefixCls: \"\".concat(prefixCls, \"-filter\"),\n            dropdownPrefixCls: dropdownPrefixCls || 'ant-dropdown',\n            getPopupContainer: _this7.generatePopupContainerFunc(getPopupContainer),\n            key: \"filter-dropdown\"\n          });\n        }\n\n        if (column.sorter) {\n          var sortDirections = column.sortDirections || _this7.props.sortDirections;\n          var isAscend = isSortColumn && sortOrder === 'ascend';\n          var isDescend = isSortColumn && sortOrder === 'descend';\n          var ascend = sortDirections.indexOf('ascend') !== -1 && React.createElement(Icon, {\n            className: \"\".concat(prefixCls, \"-column-sorter-up \").concat(isAscend ? 'on' : 'off'),\n            type: \"caret-up\",\n            theme: \"filled\"\n          });\n          var descend = sortDirections.indexOf('descend') !== -1 && React.createElement(Icon, {\n            className: \"\".concat(prefixCls, \"-column-sorter-down \").concat(isDescend ? 'on' : 'off'),\n            type: \"caret-down\",\n            theme: \"filled\"\n          });\n          sortButton = React.createElement(\"div\", {\n            title: locale.sortTitle,\n            className: classNames(\"\".concat(prefixCls, \"-column-sorter-inner\"), ascend && descend && \"\".concat(prefixCls, \"-column-sorter-inner-full\")),\n            key: \"sorter\"\n          }, ascend, descend);\n\n          onHeaderCell = function onHeaderCell(col) {\n            var colProps = {}; // Get original first\n\n            if (column.onHeaderCell) {\n              colProps = _extends({}, column.onHeaderCell(col));\n            } // Add sorter logic\n\n\n            var onHeaderCellClick = colProps.onClick;\n\n            colProps.onClick = function () {\n              _this7.toggleSortOrder(column);\n\n              if (onHeaderCellClick) {\n                onHeaderCellClick.apply(void 0, arguments);\n              }\n            };\n\n            return colProps;\n          };\n        }\n\n        return _extends(_extends({}, column), {\n          className: classNames(column.className, (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-actions\"), sortButton || filterDropdown), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-filters\"), filterDropdown), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-sorters\"), sortButton), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-sort\"), isSortColumn && sortOrder), _classNames4)),\n          title: [React.createElement(\"span\", {\n            key: \"title\",\n            className: \"\".concat(prefixCls, \"-header-column\")\n          }, React.createElement(\"div\", {\n            className: sortButton ? \"\".concat(prefixCls, \"-column-sorters\") : undefined\n          }, React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-column-title\")\n          }, _this7.renderColumnTitle(column.title)), React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-column-sorter\")\n          }, sortButton))), filterDropdown],\n          onHeaderCell: onHeaderCell\n        });\n      });\n    }\n  }, {\n    key: \"renderColumnTitle\",\n    value: function renderColumnTitle(title) {\n      var _this$state4 = this.state,\n          filters = _this$state4.filters,\n          sortOrder = _this$state4.sortOrder,\n          sortColumn = _this$state4.sortColumn; // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n\n      if (title instanceof Function) {\n        return title({\n          filters: filters,\n          sortOrder: sortOrder,\n          sortColumn: sortColumn\n        });\n      }\n\n      return title;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderComponent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevProps = prevState.prevProps;\n      var columns = nextProps.columns || normalizeColumns(nextProps.children);\n\n      var nextState = _extends(_extends({}, prevState), {\n        prevProps: nextProps,\n        columns: columns\n      });\n\n      if ('pagination' in nextProps || 'pagination' in prevProps) {\n        var newPagination = _extends(_extends(_extends({}, defaultPagination), prevState.pagination), nextProps.pagination);\n\n        newPagination.current = newPagination.current || 1;\n        newPagination.pageSize = newPagination.pageSize || 10;\n        nextState = _extends(_extends({}, nextState), {\n          pagination: nextProps.pagination !== false ? newPagination : emptyObject\n        });\n      }\n\n      if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n        nextProps.store.setState({\n          selectedRowKeys: nextProps.rowSelection.selectedRowKeys || []\n        });\n      } else if (prevProps.rowSelection && !nextProps.rowSelection) {\n        nextProps.store.setState({\n          selectedRowKeys: []\n        });\n      }\n\n      if ('dataSource' in nextProps && nextProps.dataSource !== prevProps.dataSource) {\n        nextProps.store.setState({\n          selectionDirty: false\n        });\n      } // https://github.com/ant-design/ant-design/issues/10133\n\n\n      nextProps.setCheckboxPropsCache({}); // Update filters\n\n      var filteredValueColumns = getFilteredValueColumns(nextState, nextState.columns);\n\n      if (filteredValueColumns.length > 0) {\n        var filtersFromColumns = getFiltersFromColumns(nextState, nextState.columns);\n\n        var newFilters = _extends({}, nextState.filters);\n\n        Object.keys(filtersFromColumns).forEach(function (key) {\n          newFilters[key] = filtersFromColumns[key];\n        });\n\n        if (isFiltersChanged(nextState, newFilters)) {\n          nextState = _extends(_extends({}, nextState), {\n            filters: newFilters\n          });\n        }\n      }\n\n      if (!isTheSameComponents(nextProps.components, prevProps.components)) {\n        var components = createComponents(nextProps.components);\n        nextState = _extends(_extends({}, nextState), {\n          components: components\n        });\n      }\n\n      return nextState;\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nTable.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array,\n  prefixCls: PropTypes.string,\n  useFixedHeader: PropTypes.bool,\n  rowSelection: PropTypes.object,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  bordered: PropTypes.bool,\n  onChange: PropTypes.func,\n  locale: PropTypes.object,\n  dropdownPrefixCls: PropTypes.string,\n  sortDirections: PropTypes.array,\n  getPopupContainer: PropTypes.func\n};\nTable.defaultProps = {\n  dataSource: [],\n  useFixedHeader: false,\n  className: '',\n  size: 'default',\n  loading: false,\n  bordered: false,\n  indentSize: 20,\n  locale: {},\n  rowKey: 'key',\n  showHeader: true,\n  sortDirections: ['ascend', 'descend'],\n  childrenColumnName: 'children'\n};\npolyfill(Table);\n\nvar StoreTable = /*#__PURE__*/function (_React$Component2) {\n  _inherits(StoreTable, _React$Component2);\n\n  function StoreTable(props) {\n    var _this8;\n\n    _classCallCheck(this, StoreTable);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(StoreTable).call(this, props));\n\n    _this8.setCheckboxPropsCache = function (cache) {\n      return _this8.CheckboxPropsCache = cache;\n    };\n\n    _this8.CheckboxPropsCache = {};\n    _this8.store = createStore({\n      selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n      selectionDirty: false\n    });\n    return _this8;\n  }\n\n  _createClass(StoreTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, _extends({}, this.props, {\n        store: this.store,\n        checkboxPropsCache: this.CheckboxPropsCache,\n        setCheckboxPropsCache: this.setCheckboxPropsCache\n      }));\n    }\n  }]);\n\n  return StoreTable;\n}(React.Component);\n\nStoreTable.displayName = 'withStore(Table)';\nStoreTable.Column = Column;\nStoreTable.ColumnGroup = ColumnGroup;\nexport default StoreTable;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","omit","RcTable","INTERNAL_COL_DEFINE","PropTypes","classNames","shallowEqual","polyfill","FilterDropdown","createStore","SelectionBox","SelectionCheckboxAll","Column","ColumnGroup","createBodyRow","flatArray","treeMap","flatFilter","normalizeColumns","scrollTo","Pagination","Icon","Spin","TransButton","LocaleReceiver","defaultLocale","ConfigConsumer","warning","noop","stopPropagation","getRowSelection","props","rowSelection","getColumnKey","column","index","key","dataIndex","isSameColumn","a","b","value","other","toString","Array","isArray","defaultPagination","onChange","onShowSizeChange","emptyObject","createComponents","components","bodyRow","body","row","_extends","isTheSameComponents","components1","components2","every","getFilteredValueColumns","state","columns","filteredValue","getFiltersFromColumns","filters","forEach","col","colKey","isFiltersChanged","keys","some","columnKey","Table","_classCallCheck","_this","setTableRef","table","rcTable","getCheckboxPropsByItem","item","getCheckboxProps","getRecordKey","checkboxPropsCache","checkboxProps","record","rowKey","recordKey","undefined","onRow","prefixCls","custom","store","generatePopupContainerFunc","getPopupContainer","scroll","tableNode","scrollToFirstRow","scrollToFirstRowOnChange","getContainer","bodyTable","handleFilter","nextFilters","pagination","currentColumnKeys","c","children","push","current","newState","filtersToSetState","_typeof","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","nativeEvent","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","shiftKey","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","_loop","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","arguments","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","componentName","locale","className","onClick","event","collapse","expand","noStyle","renderSelectionBox","type","_","handleChange","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","showHeader","_a","restTableProps","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","ref","expandIcon","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","style","loading","spinning","paginationPatchClass","hasPagination","renderPagination","columnsProp","fixed","getDefaultSortOrder","getDefaultFilters","getDefaultPagination","prevProps","sortColumn","sortOrder","getSortOrderColumns","sortState","getSortStateFromColumns","getFlatData","_this2","defaultChecked","defaultCurrent","defaultPageSize","definedFilters","defaultFilteredValueColumns","defaultFilteredValue","defaultFilters","reduce","soFar","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","total","floor","sorter","result","getLocalData","Number","MAX_VALUE","getMaxCurrent","slice","childrenColumnName","currentState","dataSource","sorterFn","getSorterFn","recursiveSort","_this3","findColumn","values","onFilter","v","selectionInfo","selectedRows","_this4","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","sortDirections","newSortOrder","methodIndex","currentColumn","order","field","extra","currentDataSource","myKey","sort","_this5","paginationPosition","position","_this6","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","checkboxAllDisabled","unshift","filterDropdown","sortButton","onHeaderCell","isSortColumn","_this7","colFilters","selectedKeys","confirmFilter","isAscend","isDescend","ascend","theme","descend","sortTitle","colProps","onHeaderCellClick","toggleSortOrder","renderColumnTitle","Function","nextProps","prevState","nextState","newPagination","setCheckboxPropsCache","filteredValueColumns","filtersFromColumns","newFilters","Component","propTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize","StoreTable","_this8","cache","CheckboxPropsCache","displayName"],"sources":["table/Table.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable prefer-spread */\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport scrollTo from '../_util/scrollTo';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nfunction getColumnKey(column, index) {\n    return column.key || column.dataIndex || index;\n}\nfunction isSameColumn(a, b) {\n    if (a && b && a.key && a.key === b.key) {\n        return true;\n    }\n    return (a === b ||\n        shallowEqual(a, b, (value, other) => {\n            // https://github.com/ant-design/ant-design/issues/12737\n            if (typeof value === 'function' && typeof other === 'function') {\n                return value === other || value.toString() === other.toString();\n            }\n            // https://github.com/ant-design/ant-design/issues/19398\n            if (Array.isArray(value) && Array.isArray(other)) {\n                return value === other || shallowEqual(value, other);\n            }\n        }));\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nconst createComponents = (components = {}) => {\n    const bodyRow = components && components.body && components.body.row;\n    return Object.assign(Object.assign({}, components), { body: Object.assign(Object.assign({}, components.body), { row: createBodyRow(bodyRow) }) });\n};\nfunction isTheSameComponents(components1 = {}, components2 = {}) {\n    return (components1 === components2 ||\n        ['table', 'header', 'body'].every((key) => shallowEqual(components1[key], components2[key])));\n}\nfunction getFilteredValueColumns(state, columns) {\n    return flatFilter(columns || (state || {}).columns || [], (column) => typeof column.filteredValue !== 'undefined');\n}\nfunction getFiltersFromColumns(state = {}, columns) {\n    const filters = {};\n    getFilteredValueColumns(state, columns).forEach((col) => {\n        const colKey = getColumnKey(col);\n        filters[colKey] = col.filteredValue;\n    });\n    return filters;\n}\nfunction isFiltersChanged(state, filters) {\n    if (Object.keys(filters).length !== Object.keys(state.filters).length) {\n        return true;\n    }\n    return Object.keys(filters).some(columnKey => filters[columnKey] !== state.filters[columnKey]);\n}\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setTableRef = (table) => {\n            this.rcTable = table;\n        };\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.props.checkboxPropsCache[key]) {\n                this.props.checkboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.props.checkboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.props.checkboxPropsCache[key];\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign(Object.assign({}, custom), { prefixCls, store: this.props.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            const table = this.rcTable;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll && table ? () => table.tableNode : undefined;\n        };\n        this.scrollToFirstRow = () => {\n            const { scroll } = this.props;\n            if (scroll && scroll.scrollToFirstRowOnChange !== false) {\n                scrollTo(0, {\n                    getContainer: () => this.rcTable.bodyTable,\n                });\n            }\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.state.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            getFilteredValueColumns(this.state).forEach((col) => {\n                const columnKey = getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.scrollToFirstRow();\n                this.props.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            let selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: undefined,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: undefined,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            const selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, this.scrollToFirstRow);\n            this.props.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination }, this.scrollToFirstRow);\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => type === 'radio'\n                    ? this.handleRadioSelect(record, index, e)\n                    : this.handleSelect(record, index, e);\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.props.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { showHeader, locale, getPopupContainer } = _a, restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]);\n            // do not pass prop.style to rc-table, since already apply it to container div\n            const restProps = omit(restTableProps, ['style']);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign(Object.assign({}, contextLocale), locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames(`${prefixCls}-${this.props.size}`, {\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable ref={this.setTableRef} key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.state.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns: columnsProp } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && (columnsProp || []).some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        const columns = columnsProp || normalizeColumns(props.children);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(columns || [])), { \n            // 减少状态\n            filters: this.getDefaultFilters(columns), pagination: this.getDefaultPagination(props), pivot: undefined, prevProps: props, components: createComponents(props.components), columns });\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevProps } = prevState;\n        const columns = nextProps.columns || normalizeColumns(nextProps.children);\n        let nextState = Object.assign(Object.assign({}, prevState), { prevProps: nextProps, columns });\n        if ('pagination' in nextProps || 'pagination' in prevProps) {\n            const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), prevState.pagination), nextProps.pagination);\n            newPagination.current = newPagination.current || 1;\n            newPagination.pageSize = newPagination.pageSize || 10;\n            nextState = Object.assign(Object.assign({}, nextState), { pagination: nextProps.pagination !== false ? newPagination : emptyObject });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (prevProps.rowSelection && !nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== prevProps.dataSource) {\n            nextProps.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        nextProps.setCheckboxPropsCache({});\n        // Update filters\n        const filteredValueColumns = getFilteredValueColumns(nextState, nextState.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = getFiltersFromColumns(nextState, nextState.columns);\n            const newFilters = Object.assign({}, nextState.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (isFiltersChanged(nextState, newFilters)) {\n                nextState = Object.assign(Object.assign({}, nextState), { filters: newFilters });\n            }\n        }\n        if (!isTheSameComponents(nextProps.components, prevProps.components)) {\n            const components = createComponents(nextProps.components);\n            nextState = Object.assign(Object.assign({}, nextState), { components });\n        }\n        return nextState;\n    }\n    componentDidUpdate() {\n        const { columns, sortColumn, sortOrder } = this.state;\n        if (this.getSortOrderColumns(columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(columns);\n            if (!isSameColumn(sortState.sortColumn, sortColumn) || sortState.sortOrder !== sortOrder) {\n                this.setState(sortState);\n            }\n        }\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || (this.state || {}).columns || [], (column) => 'sortOrder' in column);\n    }\n    getDefaultFilters(columns) {\n        const definedFilters = getFiltersFromColumns(this.state, columns);\n        const defaultFilteredValueColumns = flatFilter(columns || [], (column) => typeof column.defaultFilteredValue !== 'undefined');\n        const defaultFilters = defaultFilteredValueColumns.reduce((soFar, col) => {\n            const colKey = getColumnKey(col);\n            soFar[colKey] = col.defaultFilteredValue;\n            return soFar;\n        }, {});\n        return Object.assign(Object.assign({}, defaultFilters), definedFilters);\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => {\n            return column.defaultSortOrder != null;\n        })[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.slice((current - 1) * pageSize, current * pageSize);\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.props.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    toggleSortOrder(column) {\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState, this.scrollToFirstRow);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState), column));\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return getColumnKey(sortColumn) === getColumnKey(column);\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state, column) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        let currentColumn = column;\n        if (state.sortColumn && state.sortOrder) {\n            currentColumn = state.sortColumn;\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n        }\n        if (currentColumn) {\n            sorter.field = currentColumn.dataIndex;\n            sorter.columnKey = getColumnKey(currentColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.state.columns, c => {\n            if (getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.state.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.props.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign(Object.assign({}, column), { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder, sortColumn } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n                sortColumn,\n            });\n        }\n        return title;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\npolyfill(Table);\nclass StoreTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setCheckboxPropsCache = (cache) => (this.CheckboxPropsCache = cache);\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    render() {\n        return (<Table {...this.props} store={this.store} checkboxPropsCache={this.CheckboxPropsCache} setCheckboxPropsCache={this.setCheckboxPropsCache}/>);\n    }\n}\nStoreTable.displayName = 'withStore(Table)';\nStoreTable.Column = Column;\nStoreTable.ColumnGroup = ColumnGroup;\nexport default StoreTable;\n"]},"metadata":{},"sourceType":"module"}