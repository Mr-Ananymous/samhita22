{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport { changeConfirmLocale } from '../modal/locale';\nimport warning from '../_util/warning';\nexport var ANT_MARK = 'internalMark';\n\nfunction setMomentLocale(locale) {\n  if (locale && locale.locale) {\n    interopDefault(moment).locale(locale.locale);\n  } else {\n    interopDefault(moment).locale('en');\n  }\n}\n\nvar LocaleProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocaleProvider, _React$Component);\n\n  function LocaleProvider(props) {\n    var _this;\n\n    _classCallCheck(this, LocaleProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocaleProvider).call(this, props));\n    setMomentLocale(props.locale);\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    warning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    return _this;\n  }\n\n  _createClass(LocaleProvider, [{\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        antLocale: _extends(_extends({}, this.props.locale), {\n          exist: true\n        })\n      };\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale = this.props.locale;\n\n      if (prevProps.locale !== locale) {\n        setMomentLocale(locale);\n        changeConfirmLocale(locale && locale.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return LocaleProvider;\n}(React.Component);\n\nexport { LocaleProvider as default };\nLocaleProvider.propTypes = {\n  locale: PropTypes.object\n};\nLocaleProvider.defaultProps = {\n  locale: {}\n};\nLocaleProvider.childContextTypes = {\n  antLocale: PropTypes.object\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,IAAMC,QAAQ,GAAG,cAAjB;;AACP,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIA,MAAM,IAAIA,MAAM,CAACA,MAArB,EAA6B;AACzBL,kBAAc,CAACD,MAAD,CAAdC,CAAuBK,MAAvBL,CAA8BK,MAAM,CAACA,MAArCL;AADJ,SAGK;AACDA,kBAAc,CAACD,MAAD,CAAdC,CAAuBK,MAAvBL,CAA8B,IAA9BA;AACH;AACJ;;IACoBM,c;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAAC;;AACfC,wFAAMF,KAAN;AACAH,mBAAe,CAACG,KAAK,CAACF,MAAP,CAAfD;AACAH,uBAAmB,CAACM,KAAK,CAACF,MAANE,IAAgBA,KAAK,CAACF,MAANE,CAAaG,KAA9B,CAAnBT;AACAC,WAAO,CAACK,KAAK,CAACI,WAANJ,KAAsBJ,QAAvB,EAAiC,gBAAjC,EAAmD,+GAAnD,CAAPD;AAJe;AAKlB;;;;sCACiB;AACd,aAAO;AACHU,iBAAS,EAAEC,SAAcA,SAAc,EAAd,EAAkB,KAAKN,KAAL,CAAWF,MAA7B,CAAd,EAAoD;AAAES,eAAK,EAAE;AAAT,SAApD;AADR,OAAP;AAGH;;;uCACkBC,WAAW;AAAA,UAClBV,MADkB,GACP,KAAKE,KAAL,CAAXF,MADkB;;AAE1B,UAAIU,SAAS,CAACV,MAAVU,KAAqBV,MAAzB,EAAiC;AAC7BD,uBAAe,CAACC,MAAD,CAAfD;AACAH,2BAAmB,CAACI,MAAM,IAAIA,MAAM,CAACK,KAAlB,CAAnBT;AACH;AACJ;;;2CACsB;AACnBA,yBAAmB;AACtB;;;6BACQ;AACL,aAAO,KAAKM,KAAL,CAAWS,QAAlB;AACH;;;;EAxBuCnB,KAAK,CAACoB;;SAA7BX,c;AA0BrBA,cAAc,CAACY,SAAfZ,GAA2B;AACvBD,QAAM,EAAEP,SAAS,CAACqB;AADK,CAA3Bb;AAGAA,cAAc,CAACc,YAAfd,GAA8B;AAC1BD,QAAM,EAAE;AADkB,CAA9BC;AAGAA,cAAc,CAACe,iBAAff,GAAmC;AAC/BM,WAAS,EAAEd,SAAS,CAACqB;AADU,CAAnCb","names":["React","PropTypes","moment","interopDefault","changeConfirmLocale","warning","ANT_MARK","setMomentLocale","locale","LocaleProvider","props","_classCallCheck","_this","Modal","_ANT_MARK__","antLocale","_extends","exist","prevProps","children","Component","propTypes","object","defaultProps","childContextTypes"],"sources":["locale-provider/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport { changeConfirmLocale } from '../modal/locale';\nimport warning from '../_util/warning';\nexport const ANT_MARK = 'internalMark';\nfunction setMomentLocale(locale) {\n    if (locale && locale.locale) {\n        interopDefault(moment).locale(locale.locale);\n    }\n    else {\n        interopDefault(moment).locale('en');\n    }\n}\nexport default class LocaleProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        setMomentLocale(props.locale);\n        changeConfirmLocale(props.locale && props.locale.Modal);\n        warning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    }\n    getChildContext() {\n        return {\n            antLocale: Object.assign(Object.assign({}, this.props.locale), { exist: true }),\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { locale } = this.props;\n        if (prevProps.locale !== locale) {\n            setMomentLocale(locale);\n            changeConfirmLocale(locale && locale.Modal);\n        }\n    }\n    componentWillUnmount() {\n        changeConfirmLocale();\n    }\n    render() {\n        return this.props.children;\n    }\n}\nLocaleProvider.propTypes = {\n    locale: PropTypes.object,\n};\nLocaleProvider.defaultProps = {\n    locale: {},\n};\nLocaleProvider.childContextTypes = {\n    antLocale: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}