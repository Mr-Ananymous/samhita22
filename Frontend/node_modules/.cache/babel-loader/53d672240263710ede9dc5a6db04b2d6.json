{"ast":null,"code":"import addEventListener from \"rc-util/es/Dom/addEventListener\";\nexport function getTargetRect(target) {\n  return target !== window ? target.getBoundingClientRect() : {\n    top: 0,\n    bottom: window.innerHeight\n  };\n}\nexport function getFixedTop(placeholderReact, targetRect, offsetTop) {\n  if (offsetTop !== undefined && targetRect.top > placeholderReact.top - offsetTop) {\n    return offsetTop + targetRect.top;\n  }\n\n  return undefined;\n}\nexport function getFixedBottom(placeholderReact, targetRect, offsetBottom) {\n  if (offsetBottom !== undefined && targetRect.bottom < placeholderReact.bottom + offsetBottom) {\n    var targetBottomOffset = window.innerHeight - targetRect.bottom;\n    return offsetBottom + targetBottomOffset;\n  }\n\n  return undefined;\n} // ======================== Observer ========================\n\nvar TRIGGER_EVENTS = ['resize', 'scroll', 'touchstart', 'touchmove', 'touchend', 'pageshow', 'load'];\nvar observerEntities = [];\nexport function getObserverEntities() {\n  // Only used in test env. Can be removed if refactor.\n  return observerEntities;\n}\nexport function addObserveTarget(target, affix) {\n  if (!target) return;\n  var entity = observerEntities.find(function (item) {\n    return item.target === target;\n  });\n\n  if (entity) {\n    entity.affixList.push(affix);\n  } else {\n    entity = {\n      target: target,\n      affixList: [affix],\n      eventHandlers: {}\n    };\n    observerEntities.push(entity); // Add listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      entity.eventHandlers[eventName] = addEventListener(target, eventName, function () {\n        entity.affixList.forEach(function (targetAffix) {\n          targetAffix.lazyUpdatePosition();\n        });\n      });\n    });\n  }\n}\nexport function removeObserveTarget(affix) {\n  var observerEntity = observerEntities.find(function (oriObserverEntity) {\n    var hasAffix = oriObserverEntity.affixList.some(function (item) {\n      return item === affix;\n    });\n\n    if (hasAffix) {\n      oriObserverEntity.affixList = oriObserverEntity.affixList.filter(function (item) {\n        return item !== affix;\n      });\n    }\n\n    return hasAffix;\n  });\n\n  if (observerEntity && observerEntity.affixList.length === 0) {\n    observerEntities = observerEntities.filter(function (item) {\n      return item !== observerEntity;\n    }); // Remove listener\n\n    TRIGGER_EVENTS.forEach(function (eventName) {\n      var handler = observerEntity.eventHandlers[eventName];\n\n      if (handler && handler.remove) {\n        handler.remove();\n      }\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["addEventListener","getTargetRect","target","window","getBoundingClientRect","top","bottom","innerHeight","getFixedTop","placeholderReact","targetRect","offsetTop","undefined","getFixedBottom","offsetBottom","targetBottomOffset","TRIGGER_EVENTS","observerEntities","getObserverEntities","addObserveTarget","affix","entity","find","item","affixList","push","eventHandlers","forEach","eventName","targetAffix","lazyUpdatePosition","removeObserveTarget","observerEntity","hasAffix","oriObserverEntity","some","filter","length","handler","remove"],"sources":["affix/utils.js"],"sourcesContent":["import addEventListener from 'rc-util/lib/Dom/addEventListener';\nexport function getTargetRect(target) {\n    return target !== window\n        ? target.getBoundingClientRect()\n        : { top: 0, bottom: window.innerHeight };\n}\nexport function getFixedTop(placeholderReact, targetRect, offsetTop) {\n    if (offsetTop !== undefined && targetRect.top > placeholderReact.top - offsetTop) {\n        return offsetTop + targetRect.top;\n    }\n    return undefined;\n}\nexport function getFixedBottom(placeholderReact, targetRect, offsetBottom) {\n    if (offsetBottom !== undefined && targetRect.bottom < placeholderReact.bottom + offsetBottom) {\n        const targetBottomOffset = window.innerHeight - targetRect.bottom;\n        return offsetBottom + targetBottomOffset;\n    }\n    return undefined;\n}\n// ======================== Observer ========================\nconst TRIGGER_EVENTS = [\n    'resize',\n    'scroll',\n    'touchstart',\n    'touchmove',\n    'touchend',\n    'pageshow',\n    'load',\n];\nlet observerEntities = [];\nexport function getObserverEntities() {\n    // Only used in test env. Can be removed if refactor.\n    return observerEntities;\n}\nexport function addObserveTarget(target, affix) {\n    if (!target)\n        return;\n    let entity = observerEntities.find(item => item.target === target);\n    if (entity) {\n        entity.affixList.push(affix);\n    }\n    else {\n        entity = {\n            target,\n            affixList: [affix],\n            eventHandlers: {},\n        };\n        observerEntities.push(entity);\n        // Add listener\n        TRIGGER_EVENTS.forEach(eventName => {\n            entity.eventHandlers[eventName] = addEventListener(target, eventName, () => {\n                entity.affixList.forEach(targetAffix => {\n                    targetAffix.lazyUpdatePosition();\n                });\n            });\n        });\n    }\n}\nexport function removeObserveTarget(affix) {\n    const observerEntity = observerEntities.find(oriObserverEntity => {\n        const hasAffix = oriObserverEntity.affixList.some(item => item === affix);\n        if (hasAffix) {\n            oriObserverEntity.affixList = oriObserverEntity.affixList.filter(item => item !== affix);\n        }\n        return hasAffix;\n    });\n    if (observerEntity && observerEntity.affixList.length === 0) {\n        observerEntities = observerEntities.filter(item => item !== observerEntity);\n        // Remove listener\n        TRIGGER_EVENTS.forEach(eventName => {\n            const handler = observerEntity.eventHandlers[eventName];\n            if (handler && handler.remove) {\n                handler.remove();\n            }\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}