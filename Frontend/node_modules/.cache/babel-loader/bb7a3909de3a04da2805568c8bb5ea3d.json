{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\n\nfunction checkSelection(_ref) {\n  var store = _ref.store,\n      getCheckboxPropsByItem = _ref.getCheckboxPropsByItem,\n      getRecordKey = _ref.getRecordKey,\n      data = _ref.data,\n      type = _ref.type,\n      byDefaultChecked = _ref.byDefaultChecked;\n  return byDefaultChecked ? data[type](function (item, i) {\n    return getCheckboxPropsByItem(item, i).defaultChecked;\n  }) : data[type](function (item, i) {\n    return store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0;\n  });\n}\n\nfunction getIndeterminateState(props) {\n  var store = props.store,\n      data = props.data;\n\n  if (!data.length) {\n    return false;\n  }\n\n  var someCheckedNotByDefaultChecked = checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'some',\n    byDefaultChecked: false\n  })) && !checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: false\n  }));\n  var someCheckedByDefaultChecked = checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'some',\n    byDefaultChecked: true\n  })) && !checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: true\n  }));\n\n  if (store.getState().selectionDirty) {\n    return someCheckedNotByDefaultChecked;\n  }\n\n  return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;\n}\n\nfunction getCheckState(props) {\n  var store = props.store,\n      data = props.data;\n\n  if (!data.length) {\n    return false;\n  }\n\n  if (store.getState().selectionDirty) {\n    return checkSelection(_extends(_extends({}, props), {\n      data: data,\n      type: 'every',\n      byDefaultChecked: false\n    }));\n  }\n\n  return checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: false\n  })) || checkSelection(_extends(_extends({}, props), {\n    data: data,\n    type: 'every',\n    byDefaultChecked: true\n  }));\n}\n\nvar SelectionCheckboxAll = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectionCheckboxAll, _React$Component);\n\n  function SelectionCheckboxAll(props) {\n    var _this;\n\n    _classCallCheck(this, SelectionCheckboxAll);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectionCheckboxAll).call(this, props));\n    _this.state = {\n      checked: false,\n      indeterminate: false\n    };\n\n    _this.handleSelectAllChange = function (e) {\n      var checked = e.target.checked;\n\n      _this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n    };\n\n    _this.defaultSelections = props.hideDefaultSelections ? [] : [{\n      key: 'all',\n      text: props.locale.selectAll\n    }, {\n      key: 'invert',\n      text: props.locale.selectInvert\n    }];\n    return _this;\n  }\n\n  _createClass(SelectionCheckboxAll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.subscribe();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"setCheckState\",\n    value: function setCheckState(props) {\n      var checked = getCheckState(props);\n      var indeterminate = getIndeterminateState(props);\n      this.setState(function (prevState) {\n        var newState = {};\n\n        if (indeterminate !== prevState.indeterminate) {\n          newState.indeterminate = indeterminate;\n        }\n\n        if (checked !== prevState.checked) {\n          newState.checked = checked;\n        }\n\n        return newState;\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var _this2 = this;\n\n      var store = this.props.store;\n      this.unsubscribe = store.subscribe(function () {\n        _this2.setCheckState(_this2.props);\n      });\n    }\n  }, {\n    key: \"renderMenus\",\n    value: function renderMenus(selections) {\n      var _this3 = this;\n\n      return selections.map(function (selection, index) {\n        return React.createElement(Menu.Item, {\n          key: selection.key || index\n        }, React.createElement(\"div\", {\n          onClick: function onClick() {\n            _this3.props.onSelect(selection.key, index, selection.onSelect);\n          }\n        }, selection.text));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          prefixCls = _this$props.prefixCls,\n          selections = _this$props.selections,\n          getPopupContainer = _this$props.getPopupContainer;\n      var _this$state = this.state,\n          checked = _this$state.checked,\n          indeterminate = _this$state.indeterminate;\n      var selectionPrefixCls = \"\".concat(prefixCls, \"-selection\");\n      var customSelections = null;\n\n      if (selections) {\n        var newSelections = Array.isArray(selections) ? this.defaultSelections.concat(selections) : this.defaultSelections;\n        var menu = React.createElement(Menu, {\n          className: \"\".concat(selectionPrefixCls, \"-menu\"),\n          selectedKeys: []\n        }, this.renderMenus(newSelections));\n        customSelections = newSelections.length > 0 ? React.createElement(Dropdown, {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, React.createElement(\"div\", {\n          className: \"\".concat(selectionPrefixCls, \"-down\")\n        }, React.createElement(Icon, {\n          type: \"down\"\n        }))) : null;\n      }\n\n      return React.createElement(\"div\", {\n        className: selectionPrefixCls\n      }, React.createElement(Checkbox, {\n        className: classNames(_defineProperty({}, \"\".concat(selectionPrefixCls, \"-select-all-custom\"), customSelections)),\n        checked: checked,\n        indeterminate: indeterminate,\n        disabled: disabled,\n        onChange: this.handleSelectAllChange\n      }), customSelections);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var checked = getCheckState(props);\n      var indeterminate = getIndeterminateState(props);\n      var newState = {};\n\n      if (indeterminate !== state.indeterminate) {\n        newState.indeterminate = indeterminate;\n      }\n\n      if (checked !== state.checked) {\n        newState.checked = checked;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return SelectionCheckboxAll;\n}(React.Component);\n\npolyfill(SelectionCheckboxAll);\nexport default SelectionCheckboxAll;","map":{"version":3,"mappings":"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","names":["React","classNames","polyfill","Checkbox","Dropdown","Menu","Icon","checkSelection","store","getCheckboxPropsByItem","getRecordKey","data","type","byDefaultChecked","item","i","defaultChecked","getState","selectedRowKeys","indexOf","getIndeterminateState","props","length","someCheckedNotByDefaultChecked","_extends","someCheckedByDefaultChecked","selectionDirty","getCheckState","SelectionCheckboxAll","_classCallCheck","_this","state","checked","indeterminate","handleSelectAllChange","e","target","onSelect","defaultSelections","hideDefaultSelections","key","text","locale","selectAll","selectInvert","subscribe","unsubscribe","setState","newState","prevState","_this2","setCheckState","selections","map","selection","index","Item","onClick","_this3","disabled","prefixCls","getPopupContainer","selectionPrefixCls","customSelections","newSelections","Array","isArray","concat","menu","className","selectedKeys","renderMenus","overlay","onChange","Component"],"sources":["table/SelectionCheckboxAll.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\nfunction checkSelection({ store, getCheckboxPropsByItem, getRecordKey, data, type, byDefaultChecked, }) {\n    return byDefaultChecked\n        ? data[type]((item, i) => getCheckboxPropsByItem(item, i).defaultChecked)\n        : data[type]((item, i) => store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0);\n}\nfunction getIndeterminateState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    const someCheckedNotByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: false })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    const someCheckedByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: true })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true }));\n    if (store.getState().selectionDirty) {\n        return someCheckedNotByDefaultChecked;\n    }\n    return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;\n}\nfunction getCheckState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    if (store.getState().selectionDirty) {\n        return checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    }\n    return (checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false })) ||\n        checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true })));\n}\nclass SelectionCheckboxAll extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            indeterminate: false,\n        };\n        this.handleSelectAllChange = (e) => {\n            const { checked } = e.target;\n            this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n        };\n        this.defaultSelections = props.hideDefaultSelections\n            ? []\n            : [\n                {\n                    key: 'all',\n                    text: props.locale.selectAll,\n                },\n                {\n                    key: 'invert',\n                    text: props.locale.selectInvert,\n                },\n            ];\n    }\n    static getDerivedStateFromProps(props, state) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        const newState = {};\n        if (indeterminate !== state.indeterminate) {\n            newState.indeterminate = indeterminate;\n        }\n        if (checked !== state.checked) {\n            newState.checked = checked;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        this.subscribe();\n    }\n    componentWillUnmount() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n        }\n    }\n    setCheckState(props) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        this.setState(prevState => {\n            const newState = {};\n            if (indeterminate !== prevState.indeterminate) {\n                newState.indeterminate = indeterminate;\n            }\n            if (checked !== prevState.checked) {\n                newState.checked = checked;\n            }\n            return newState;\n        });\n    }\n    subscribe() {\n        const { store } = this.props;\n        this.unsubscribe = store.subscribe(() => {\n            this.setCheckState(this.props);\n        });\n    }\n    renderMenus(selections) {\n        return selections.map((selection, index) => {\n            return (<Menu.Item key={selection.key || index}>\n          <div onClick={() => {\n                this.props.onSelect(selection.key, index, selection.onSelect);\n            }}>\n            {selection.text}\n          </div>\n        </Menu.Item>);\n        });\n    }\n    render() {\n        const { disabled, prefixCls, selections, getPopupContainer } = this.props;\n        const { checked, indeterminate } = this.state;\n        const selectionPrefixCls = `${prefixCls}-selection`;\n        let customSelections = null;\n        if (selections) {\n            const newSelections = Array.isArray(selections)\n                ? this.defaultSelections.concat(selections)\n                : this.defaultSelections;\n            const menu = (<Menu className={`${selectionPrefixCls}-menu`} selectedKeys={[]}>\n          {this.renderMenus(newSelections)}\n        </Menu>);\n            customSelections =\n                newSelections.length > 0 ? (<Dropdown overlay={menu} getPopupContainer={getPopupContainer}>\n            <div className={`${selectionPrefixCls}-down`}>\n              <Icon type=\"down\"/>\n            </div>\n          </Dropdown>) : null;\n        }\n        return (<div className={selectionPrefixCls}>\n        <Checkbox className={classNames({ [`${selectionPrefixCls}-select-all-custom`]: customSelections })} checked={checked} indeterminate={indeterminate} disabled={disabled} onChange={this.handleSelectAllChange}/>\n        {customSelections}\n      </div>);\n    }\n}\npolyfill(SelectionCheckboxAll);\nexport default SelectionCheckboxAll;\n"]},"metadata":{},"sourceType":"module"}