{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Group = function Group(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls;\n    var customizePrefixCls = props.prefixCls,\n        _props$className = props.className,\n        className = _props$className === void 0 ? '' : _props$className;\n    var prefixCls = getPrefixCls('input-group', customizePrefixCls);\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), props.size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), props.size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-compact\"), props.compact), _classNames), className);\n    return React.createElement(\"span\", {\n      className: cls,\n      style: props.style,\n      onMouseEnter: props.onMouseEnter,\n      onMouseLeave: props.onMouseLeave,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur\n    }, props.children);\n  });\n};\n\nexport default Group;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,QAAK;AAAA,SAAKH,oBAACE,cAAD,QACnB,gBAAsB;AAAA;;AAAA,QAAnBE,YAAmB,QAAnBA,YAAmB;AAAA,QACJC,kBADI,GACmCC,KADnC,CACfC,SADe;AAAA,2BACmCD,KADnC,CACgBE,SADhB;AAAA,QACgBA,SADhB,iCAC4B,EAD5B;AAEvB,QAAMD,SAAS,GAAGH,YAAY,CAAC,aAAD,EAAgBC,kBAAhB,CAA9B;AACA,QAAMI,GAAG,GAAGR,UAAU,CAACM,SAAD,4DACdA,SADc,UACGD,KAAK,CAACI,IAANJ,KAAe,OADlB,0CAEdC,SAFc,UAEGD,KAAK,CAACI,IAANJ,KAAe,OAFlB,0CAGdC,SAHc,eAGQD,KAAK,CAACK,OAHd,iBAInBH,SAJmB,CAAtB;AAKA,WAAQR;AAAMQ,eAAS,EAAEC,GAAjB;AAAsBG,WAAK,EAAEN,KAAK,CAACM,KAAnC;AAA0CC,kBAAY,EAAEP,KAAK,CAACO,YAA9D;AAA4EC,kBAAY,EAAER,KAAK,CAACQ,YAAhG;AAA8GC,aAAO,EAAET,KAAK,CAACS,OAA7H;AAAsIC,YAAM,EAAEV,KAAK,CAACU;AAApJ,OACDV,KAAK,CAACW,QADL,CAAR;AAToB,IAAL;AAAnB;;AAcA,eAAed,KAAf","names":["React","classNames","ConfigConsumer","Group","getPrefixCls","customizePrefixCls","props","prefixCls","className","cls","size","compact","style","onMouseEnter","onMouseLeave","onFocus","onBlur","children"],"sources":["input/Group.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Group = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, className = '' } = props;\n    const prefixCls = getPrefixCls('input-group', customizePrefixCls);\n    const cls = classNames(prefixCls, {\n        [`${prefixCls}-lg`]: props.size === 'large',\n        [`${prefixCls}-sm`]: props.size === 'small',\n        [`${prefixCls}-compact`]: props.compact,\n    }, className);\n    return (<span className={cls} style={props.style} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} onFocus={props.onFocus} onBlur={props.onBlur}>\n          {props.children}\n        </span>);\n}}\n  </ConfigConsumer>);\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}