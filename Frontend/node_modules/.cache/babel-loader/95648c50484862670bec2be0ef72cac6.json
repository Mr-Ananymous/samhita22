{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport Icon from '../icon';\nimport Breadcrumb from '../breadcrumb';\nimport Avatar from '../avatar';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar renderBack = function renderBack(prefixCls, backIcon, onBack) {\n  if (!backIcon || !onBack) {\n    return null;\n  }\n\n  return React.createElement(LocaleReceiver, {\n    componentName: \"PageHeader\"\n  }, function (_ref) {\n    var back = _ref.back;\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-back\")\n    }, React.createElement(TransButton, {\n      onClick: function onClick(e) {\n        if (onBack) {\n          onBack(e);\n        }\n      },\n      className: \"\".concat(prefixCls, \"-back-button\"),\n      \"aria-label\": back\n    }, backIcon));\n  });\n};\n\nvar renderBreadcrumb = function renderBreadcrumb(breadcrumb) {\n  return React.createElement(Breadcrumb, breadcrumb);\n};\n\nvar renderTitle = function renderTitle(prefixCls, props) {\n  var title = props.title,\n      avatar = props.avatar,\n      subTitle = props.subTitle,\n      tags = props.tags,\n      extra = props.extra,\n      backIcon = props.backIcon,\n      onBack = props.onBack;\n  var headingPrefixCls = \"\".concat(prefixCls, \"-heading\");\n\n  if (title || subTitle || tags || extra) {\n    var backIconDom = renderBack(prefixCls, backIcon, onBack);\n    return React.createElement(\"div\", {\n      className: headingPrefixCls\n    }, backIconDom, avatar && React.createElement(Avatar, avatar), title && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-title\")\n    }, title), subTitle && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-sub-title\")\n    }, subTitle), tags && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-tags\")\n    }, tags), extra && React.createElement(\"span\", {\n      className: \"\".concat(headingPrefixCls, \"-extra\")\n    }, extra));\n  }\n\n  return null;\n};\n\nvar renderFooter = function renderFooter(prefixCls, footer) {\n  if (footer) {\n    return React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-footer\")\n    }, footer);\n  }\n\n  return null;\n};\n\nvar renderChildren = function renderChildren(prefixCls, children) {\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-content\")\n  }, children);\n};\n\nvar PageHeader = function PageHeader(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref2) {\n    var getPrefixCls = _ref2.getPrefixCls,\n        pageHeader = _ref2.pageHeader;\n    var customizePrefixCls = props.prefixCls,\n        style = props.style,\n        footer = props.footer,\n        children = props.children,\n        breadcrumb = props.breadcrumb,\n        customizeClassName = props.className;\n    var ghost = true; // Use `ghost` from `props` or from `ConfigProvider` instead.\n\n    if ('ghost' in props) {\n      ghost = props.ghost;\n    } else if (pageHeader && 'ghost' in pageHeader) {\n      ghost = pageHeader.ghost;\n    }\n\n    var prefixCls = getPrefixCls('page-header', customizePrefixCls);\n    var breadcrumbDom = breadcrumb && breadcrumb.routes ? renderBreadcrumb(breadcrumb) : null;\n    var className = classnames(prefixCls, customizeClassName, _defineProperty({\n      'has-breadcrumb': breadcrumbDom,\n      'has-footer': footer\n    }, \"\".concat(prefixCls, \"-ghost\"), ghost));\n    return React.createElement(\"div\", {\n      className: className,\n      style: style\n    }, breadcrumbDom, renderTitle(prefixCls, props), children && renderChildren(prefixCls, children), renderFooter(prefixCls, footer));\n  });\n};\n\nPageHeader.defaultProps = {\n  backIcon: React.createElement(Icon, {\n    type: \"arrow-left\"\n  })\n};\nexport default PageHeader;","map":{"version":3,"mappings":"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","names":["React","classnames","ConfigConsumer","Icon","Breadcrumb","Avatar","TransButton","LocaleReceiver","renderBack","prefixCls","backIcon","onBack","componentName","back","className","onClick","e","renderBreadcrumb","breadcrumb","renderTitle","props","title","avatar","subTitle","tags","extra","headingPrefixCls","backIconDom","renderFooter","footer","renderChildren","children","PageHeader","getPrefixCls","pageHeader","customizePrefixCls","style","customizeClassName","ghost","breadcrumbDom","routes","defaultProps","type"],"sources":["page-header/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport Icon from '../icon';\nimport Breadcrumb from '../breadcrumb';\nimport Avatar from '../avatar';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nconst renderBack = (prefixCls, backIcon, onBack) => {\n    if (!backIcon || !onBack) {\n        return null;\n    }\n    return (<LocaleReceiver componentName=\"PageHeader\">\n      {({ back }) => (<div className={`${prefixCls}-back`}>\n          <TransButton onClick={(e) => {\n        if (onBack) {\n            onBack(e);\n        }\n    }} className={`${prefixCls}-back-button`} aria-label={back}>\n            {backIcon}\n          </TransButton>\n        </div>)}\n    </LocaleReceiver>);\n};\nconst renderBreadcrumb = (breadcrumb) => {\n    return <Breadcrumb {...breadcrumb}/>;\n};\nconst renderTitle = (prefixCls, props) => {\n    const { title, avatar, subTitle, tags, extra, backIcon, onBack } = props;\n    const headingPrefixCls = `${prefixCls}-heading`;\n    if (title || subTitle || tags || extra) {\n        const backIconDom = renderBack(prefixCls, backIcon, onBack);\n        return (<div className={headingPrefixCls}>\n        {backIconDom}\n        {avatar && <Avatar {...avatar}/>}\n        {title && <span className={`${headingPrefixCls}-title`}>{title}</span>}\n        {subTitle && <span className={`${headingPrefixCls}-sub-title`}>{subTitle}</span>}\n        {tags && <span className={`${headingPrefixCls}-tags`}>{tags}</span>}\n        {extra && <span className={`${headingPrefixCls}-extra`}>{extra}</span>}\n      </div>);\n    }\n    return null;\n};\nconst renderFooter = (prefixCls, footer) => {\n    if (footer) {\n        return <div className={`${prefixCls}-footer`}>{footer}</div>;\n    }\n    return null;\n};\nconst renderChildren = (prefixCls, children) => {\n    return <div className={`${prefixCls}-content`}>{children}</div>;\n};\nconst PageHeader = props => (<ConfigConsumer>\n    {({ getPrefixCls, pageHeader }) => {\n    const { prefixCls: customizePrefixCls, style, footer, children, breadcrumb, className: customizeClassName, } = props;\n    let ghost = true;\n    // Use `ghost` from `props` or from `ConfigProvider` instead.\n    if ('ghost' in props) {\n        ghost = props.ghost;\n    }\n    else if (pageHeader && 'ghost' in pageHeader) {\n        ghost = pageHeader.ghost;\n    }\n    const prefixCls = getPrefixCls('page-header', customizePrefixCls);\n    const breadcrumbDom = breadcrumb && breadcrumb.routes ? renderBreadcrumb(breadcrumb) : null;\n    const className = classnames(prefixCls, customizeClassName, {\n        'has-breadcrumb': breadcrumbDom,\n        'has-footer': footer,\n        [`${prefixCls}-ghost`]: ghost,\n    });\n    return (<div className={className} style={style}>\n          {breadcrumbDom}\n          {renderTitle(prefixCls, props)}\n          {children && renderChildren(prefixCls, children)}\n          {renderFooter(prefixCls, footer)}\n        </div>);\n}}\n  </ConfigConsumer>);\nPageHeader.defaultProps = {\n    backIcon: <Icon type=\"arrow-left\"/>,\n};\nexport default PageHeader;\n"]},"metadata":{},"sourceType":"module"}