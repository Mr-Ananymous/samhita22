{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\n\nvar ActionButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(ActionButton, _React$Component);\n\n  function ActionButton(props) {\n    var _this;\n\n    _classCallCheck(this, ActionButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionButton).call(this, props));\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          actionFn = _this$props.actionFn,\n          closeModal = _this$props.closeModal;\n\n      if (actionFn) {\n        var ret;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          _this.setState({\n            loading: true\n          });\n\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(void 0, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e); // See: https://github.com/ant-design/ant-design/issues/6183\n\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    };\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ActionButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus) {\n        var $this = ReactDOM.findDOMNode(this);\n        this.timeoutId = setTimeout(function () {\n          return $this.focus();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          type = _this$props2.type,\n          children = _this$props2.children,\n          buttonProps = _this$props2.buttonProps;\n      var loading = this.state.loading;\n      return React.createElement(Button, _extends({\n        type: type,\n        onClick: this.onClick,\n        loading: loading\n      }, buttonProps), children);\n    }\n  }]);\n\n  return ActionButton;\n}(React.Component);\n\nexport { ActionButton as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;IACqBC,Y;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAAC;;AACfC,sFAAMF,KAAN;;AACAE,UAAKC,OAAL,GAAe,YAAM;AAAA,wBACgBD,MAAKF,KADrB;AAAA,UACTI,QADS,eACTA,QADS;AAAA,UACCC,UADD,eACCA,UADD;;AAEjB,UAAID,QAAJ,EAAc;AACV,YAAIE,GAAJ;;AACA,YAAIF,QAAQ,CAACG,MAAb,EAAqB;AACjBD,aAAG,GAAGF,QAAQ,CAACC,UAAD,CAAdC;AADJ,eAGK;AACDA,aAAG,GAAGF,QAAQ,EAAdE;;AACA,cAAI,CAACA,GAAL,EAAU;AACND,sBAAU;AACb;AACJ;;AACD,YAAIC,GAAG,IAAIA,GAAG,CAACE,IAAf,EAAqB;AACjBN,gBAAKO,QAAL,CAAc;AAAEC,mBAAO,EAAE;AAAX,WAAd;;AACAJ,aAAG,CAACE,IAAJF,CAAS,YAAa;AAClB;AACA;AACAD,sBAAU,MAAVA;AAHJ,aAIG,UAACM,CAAD,EAAO;AACN;AACA;AACAC,mBAAO,CAACC,KAARD,CAAcD,CAAdC,EAHM,CAIN;;AACAV,kBAAKO,QAAL,CAAc;AAAEC,qBAAO,EAAE;AAAX,aAAd;AATJ;AAWH;AAxBL,aA0BK;AACDL,kBAAU;AACb;AA9BL;;AAgCAH,UAAKY,KAAL,GAAa;AACTJ,aAAO,EAAE;AADA,KAAb;AAlCe;AAqClB;;;;wCACmB;AAChB,UAAI,KAAKV,KAAL,CAAWe,SAAf,EAA0B;AACtB,YAAMC,KAAK,GAAGnB,QAAQ,CAACoB,WAATpB,CAAqB,IAArBA,CAAd;AACA,aAAKqB,SAAL,GAAiBC,UAAU,CAAC;AAAA,iBAAMH,KAAK,CAACI,KAANJ,EAAN;AAAD,UAA3B;AACH;AACJ;;;2CACsB;AACnBK,kBAAY,CAAC,KAAKH,SAAN,CAAZG;AACH;;;6BACQ;AAAA,yBACmC,KAAKrB,KADxC;AAAA,UACGsB,IADH,gBACGA,IADH;AAAA,UACSC,QADT,gBACSA,QADT;AAAA,UACmBC,WADnB,gBACmBA,WADnB;AAAA,UAEGd,OAFH,GAEe,KAAKI,KAAL,CAAZJ,OAFH;AAGL,aAAQd,oBAACE,MAAD;AAAQwB,YAAI,EAAEA,IAAd;AAAoBnB,eAAO,EAAE,KAAKA,OAAlC;AAA2CO,eAAO,EAAEA;AAApD,SAAiEc,WAAjE,GACPD,QADO,CAAR;AAGH;;;;EAtDqC3B,KAAK,CAAC6B;;SAA3B1B,Y","names":["React","ReactDOM","Button","ActionButton","props","_classCallCheck","_this","onClick","actionFn","closeModal","ret","length","then","setState","loading","e","console","error","state","autoFocus","$this","findDOMNode","timeoutId","setTimeout","focus","clearTimeout","type","children","buttonProps","Component"],"sources":["modal/ActionButton.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\nexport default class ActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClick = () => {\n            const { actionFn, closeModal } = this.props;\n            if (actionFn) {\n                let ret;\n                if (actionFn.length) {\n                    ret = actionFn(closeModal);\n                }\n                else {\n                    ret = actionFn();\n                    if (!ret) {\n                        closeModal();\n                    }\n                }\n                if (ret && ret.then) {\n                    this.setState({ loading: true });\n                    ret.then((...args) => {\n                        // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n                        // this.setState({ loading: false });\n                        closeModal(...args);\n                    }, (e) => {\n                        // Emit error when catch promise reject\n                        // eslint-disable-next-line no-console\n                        console.error(e);\n                        // See: https://github.com/ant-design/ant-design/issues/6183\n                        this.setState({ loading: false });\n                    });\n                }\n            }\n            else {\n                closeModal();\n            }\n        };\n        this.state = {\n            loading: false,\n        };\n    }\n    componentDidMount() {\n        if (this.props.autoFocus) {\n            const $this = ReactDOM.findDOMNode(this);\n            this.timeoutId = setTimeout(() => $this.focus());\n        }\n    }\n    componentWillUnmount() {\n        clearTimeout(this.timeoutId);\n    }\n    render() {\n        const { type, children, buttonProps } = this.props;\n        const { loading } = this.state;\n        return (<Button type={type} onClick={this.onClick} loading={loading} {...buttonProps}>\n        {children}\n      </Button>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}