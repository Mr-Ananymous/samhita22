{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      var switchIconNode = iconType ? iconNode : '';\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : switchIconNode, React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return _typeof(content) === 'object' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return api.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;","map":{"version":3,"mappings":"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","names":["React","Notification","Icon","defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","newInstance","style","top","instance","notice","args","duration","undefined","iconType","info","success","error","warning","loading","type","target","closePromise","Promise","onClose","resolve","iconNode","theme","switchIconNode","content","className","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","_typeof","api","open","config","options","destroy","forEach","_extends","warn"],"sources":["message/index.jsx"],"sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const iconType = {\n        info: 'info-circle',\n        success: 'check-circle',\n        error: 'close-circle',\n        warning: 'exclamation-circle',\n        loading: 'loading',\n    }[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            const iconNode = (<Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>);\n            const switchIconNode = iconType ? iconNode : '';\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon ? args.icon : switchIconNode}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return typeof content === 'object' && !!content.content;\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"]},"metadata":{},"sourceType":"module"}