{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport shallowEqual from 'shallowequal';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\n\nvar Checkbox = /*#__PURE__*/function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n\n  function Checkbox() {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).apply(this, arguments));\n\n    _this.saveCheckbox = function (node) {\n      _this.rcCheckbox = node;\n    };\n\n    _this.renderCheckbox = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          context = _assertThisInitialize.context;\n\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          children = props.children,\n          indeterminate = props.indeterminate,\n          style = props.style,\n          onMouseEnter = props.onMouseEnter,\n          onMouseLeave = props.onMouseLeave,\n          restProps = __rest(props, [\"prefixCls\", \"className\", \"children\", \"indeterminate\", \"style\", \"onMouseEnter\", \"onMouseLeave\"]);\n\n      var checkboxGroup = context.checkboxGroup;\n      var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n\n      var checkboxProps = _extends({}, restProps);\n\n      if (checkboxGroup) {\n        checkboxProps.onChange = function () {\n          if (restProps.onChange) {\n            restProps.onChange.apply(restProps, arguments);\n          }\n\n          checkboxGroup.toggleOption({\n            label: children,\n            value: props.value\n          });\n        };\n\n        checkboxProps.name = checkboxGroup.name;\n        checkboxProps.checked = checkboxGroup.value.indexOf(props.value) !== -1;\n        checkboxProps.disabled = props.disabled || checkboxGroup.disabled;\n      }\n\n      var classString = classNames(className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper-checked\"), checkboxProps.checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-wrapper-disabled\"), checkboxProps.disabled), _classNames));\n      var checkboxClass = classNames(_defineProperty({}, \"\".concat(prefixCls, \"-indeterminate\"), indeterminate));\n      return (// eslint-disable-next-line jsx-a11y/label-has-associated-control\n        React.createElement(\"label\", {\n          className: classString,\n          style: style,\n          onMouseEnter: onMouseEnter,\n          onMouseLeave: onMouseLeave\n        }, React.createElement(RcCheckbox, _extends({}, checkboxProps, {\n          prefixCls: prefixCls,\n          className: checkboxClass,\n          ref: _this.saveCheckbox\n        })), children !== undefined && React.createElement(\"span\", null, children))\n      );\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var value = this.props.value;\n\n      var _ref2 = this.context || {},\n          _ref2$checkboxGroup = _ref2.checkboxGroup,\n          checkboxGroup = _ref2$checkboxGroup === void 0 ? {} : _ref2$checkboxGroup;\n\n      if (checkboxGroup.registerValue) {\n        checkboxGroup.registerValue(value);\n      }\n\n      warning('checked' in this.props || (this.context || {}).checkboxGroup || !('value' in this.props), 'Checkbox', '`value` is not validate prop, do you mean `checked`?');\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState) || !shallowEqual(this.context.checkboxGroup, nextContext.checkboxGroup);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref3) {\n      var prevValue = _ref3.value;\n      var value = this.props.value;\n\n      var _ref4 = this.context || {},\n          _ref4$checkboxGroup = _ref4.checkboxGroup,\n          checkboxGroup = _ref4$checkboxGroup === void 0 ? {} : _ref4$checkboxGroup;\n\n      if (value !== prevValue && checkboxGroup.registerValue && checkboxGroup.cancelValue) {\n        checkboxGroup.cancelValue(prevValue);\n        checkboxGroup.registerValue(value);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var value = this.props.value;\n\n      var _ref5 = this.context || {},\n          _ref5$checkboxGroup = _ref5.checkboxGroup,\n          checkboxGroup = _ref5$checkboxGroup === void 0 ? {} : _ref5$checkboxGroup;\n\n      if (checkboxGroup.cancelValue) {\n        checkboxGroup.cancelValue(value);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.rcCheckbox.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.rcCheckbox.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderCheckbox);\n    }\n  }]);\n\n  return Checkbox;\n}(React.Component);\n\nCheckbox.__ANT_CHECKBOX = true;\nCheckbox.defaultProps = {\n  indeterminate: false\n};\nCheckbox.contextTypes = {\n  checkboxGroup: PropTypes.any\n};\npolyfill(Checkbox);\nexport default Checkbox;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","polyfill","classNames","RcCheckbox","shallowEqual","ConfigConsumer","warning","Checkbox","_classCallCheck","_this","arguments","saveCheckbox","node","rcCheckbox","renderCheckbox","getPrefixCls","props","context","customizePrefixCls","prefixCls","className","children","indeterminate","style","onMouseEnter","onMouseLeave","restProps","checkboxGroup","checkboxProps","_extends","onChange","toggleOption","label","value","name","checked","disabled","classString","checkboxClass","ref","undefined","registerValue","nextProps","nextState","nextContext","state","prevValue","cancelValue","focus","blur","Component","__ANT_CHECKBOX","defaultProps","contextTypes","any"],"sources":["checkbox/Checkbox.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport shallowEqual from 'shallowequal';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Checkbox extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.saveCheckbox = (node) => {\n            this.rcCheckbox = node;\n        };\n        this.renderCheckbox = ({ getPrefixCls }) => {\n            const { props, context } = this;\n            const { prefixCls: customizePrefixCls, className, children, indeterminate, style, onMouseEnter, onMouseLeave } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"children\", \"indeterminate\", \"style\", \"onMouseEnter\", \"onMouseLeave\"]);\n            const { checkboxGroup } = context;\n            const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n            const checkboxProps = Object.assign({}, restProps);\n            if (checkboxGroup) {\n                checkboxProps.onChange = (...args) => {\n                    if (restProps.onChange) {\n                        restProps.onChange(...args);\n                    }\n                    checkboxGroup.toggleOption({ label: children, value: props.value });\n                };\n                checkboxProps.name = checkboxGroup.name;\n                checkboxProps.checked = checkboxGroup.value.indexOf(props.value) !== -1;\n                checkboxProps.disabled = props.disabled || checkboxGroup.disabled;\n            }\n            const classString = classNames(className, {\n                [`${prefixCls}-wrapper`]: true,\n                [`${prefixCls}-wrapper-checked`]: checkboxProps.checked,\n                [`${prefixCls}-wrapper-disabled`]: checkboxProps.disabled,\n            });\n            const checkboxClass = classNames({\n                [`${prefixCls}-indeterminate`]: indeterminate,\n            });\n            return (\n            // eslint-disable-next-line jsx-a11y/label-has-associated-control\n            <label className={classString} style={style} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n        <RcCheckbox {...checkboxProps} prefixCls={prefixCls} className={checkboxClass} ref={this.saveCheckbox}/>\n        {children !== undefined && <span>{children}</span>}\n      </label>);\n        };\n    }\n    componentDidMount() {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (checkboxGroup.registerValue) {\n            checkboxGroup.registerValue(value);\n        }\n        warning('checked' in this.props || (this.context || {}).checkboxGroup || !('value' in this.props), 'Checkbox', '`value` is not validate prop, do you mean `checked`?');\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return (!shallowEqual(this.props, nextProps) ||\n            !shallowEqual(this.state, nextState) ||\n            !shallowEqual(this.context.checkboxGroup, nextContext.checkboxGroup));\n    }\n    componentDidUpdate({ value: prevValue }) {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (value !== prevValue && checkboxGroup.registerValue && checkboxGroup.cancelValue) {\n            checkboxGroup.cancelValue(prevValue);\n            checkboxGroup.registerValue(value);\n        }\n    }\n    componentWillUnmount() {\n        const { value } = this.props;\n        const { checkboxGroup = {} } = this.context || {};\n        if (checkboxGroup.cancelValue) {\n            checkboxGroup.cancelValue(value);\n        }\n    }\n    focus() {\n        this.rcCheckbox.focus();\n    }\n    blur() {\n        this.rcCheckbox.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCheckbox}</ConfigConsumer>;\n    }\n}\nCheckbox.__ANT_CHECKBOX = true;\nCheckbox.defaultProps = {\n    indeterminate: false,\n};\nCheckbox.contextTypes = {\n    checkboxGroup: PropTypes.any,\n};\npolyfill(Checkbox);\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}