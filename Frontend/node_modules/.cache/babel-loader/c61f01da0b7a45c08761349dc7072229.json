{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n\n  function setState(partial) {\n    state = _extends(_extends({}, state), partial);\n\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n  }\n\n  function getState() {\n    return state;\n  }\n\n  function subscribe(listener) {\n    listeners.push(listener);\n    return function unsubscribe() {\n      var index = listeners.indexOf(listener);\n      listeners.splice(index, 1);\n    };\n  }\n\n  return {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,eAAe,SAASA,WAAT,CAAqBC,YAArB,EAAmC;AAC9C,MAAIC,KAAK,GAAGD,YAAZ;AACA,MAAME,SAAS,GAAG,EAAlB;;AACA,WAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvBH,SAAK,GAAGI,SAAcA,SAAc,EAAd,EAAkBJ,KAAlB,CAAd,EAAwCG,OAAxC,CAARH;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACK,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCJ,eAAS,CAACI,CAAD,CAATJ;AACH;AACJ;;AACD,WAASM,QAAT,GAAoB;AAChB,WAAOP,KAAP;AACH;;AACD,WAASQ,SAAT,CAAmBC,QAAnB,EAA6B;AACzBR,aAAS,CAACS,IAAVT,CAAeQ,QAAfR;AACA,WAAO,SAASU,WAAT,GAAuB;AAC1B,UAAMC,KAAK,GAAGX,SAAS,CAACY,OAAVZ,CAAkBQ,QAAlBR,CAAd;AACAA,eAAS,CAACa,MAAVb,CAAiBW,KAAjBX,EAAwB,CAAxBA;AAFJ;AAIH;;AACD,SAAO;AACHC,YAAQ,EAARA,QADG;AAEHK,YAAQ,EAARA,QAFG;AAGHC,aAAS,EAATA;AAHG,GAAP;AAKH","names":["createStore","initialState","state","listeners","setState","partial","_extends","i","length","getState","subscribe","listener","push","unsubscribe","index","indexOf","splice"],"sources":["table/createStore.jsx"],"sourcesContent":["export default function createStore(initialState) {\n    let state = initialState;\n    const listeners = [];\n    function setState(partial) {\n        state = Object.assign(Object.assign({}, state), partial);\n        for (let i = 0; i < listeners.length; i++) {\n            listeners[i]();\n        }\n    }\n    function getState() {\n        return state;\n    }\n    function subscribe(listener) {\n        listeners.push(listener);\n        return function unsubscribe() {\n            const index = listeners.indexOf(listener);\n            listeners.splice(index, 1);\n        };\n    }\n    return {\n        setState,\n        getState,\n        subscribe,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}